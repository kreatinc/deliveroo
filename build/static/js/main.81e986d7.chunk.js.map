{"version":3,"sources":["components/homepageComponents/header/Logo.jsx","components/NavBar.jsx","components/Button.jsx","components/HomeProduct.jsx","components/Review.jsx","customHooks/index.js","store/reducers/createList.js","utils/convertStringToArray.js","store/reducers/byId.js","utils/localStorageHelpers.js","store/reducers/shoppingList.js","store/reducers/likesList.js","store/reducers/commentsList.js","store/reducers/pagination.js","store/reducers/categoriesList.js","store/reducers/searchResultsList.js","services/apiClient.js","store/reducers/user.js","store/reducers/commandsList.js","store/reducers/notifications.js","store/reducers/company.js","store/reducers/runout.js","store/reducers/index.js","services/product.js","utils/schema.js","utils/search.js","store/actions/userActions.js","services/user.js","utils/index.js","views/Welcome.jsx","components/homepageComponents/header/TextField.jsx","components/homepageComponents/header/Search.jsx","components/homepageComponents/header/Like.jsx","components/homepageComponents/header/LikesList.jsx","components/ErrorsContainer.jsx","components/UserPasswordModal.jsx","components/UserInformationModal.jsx","components/homepageComponents/recipe/IngredientsList.jsx","components/homepageComponents/header/index.jsx","components/homepageComponents/results/PaginationButton.jsx","components/homepageComponents/results/Pagination.jsx","components/homepageComponents/results/Product.jsx","components/homepageComponents/results/List.jsx","components/homepageComponents/results/Products.jsx","components/homepageComponents/results/index.jsx","components/homepageComponents/recipe/Figure.jsx","components/homepageComponents/recipe/LikeButton.jsx","components/homepageComponents/recipe/LikesInfo.jsx","components/homepageComponents/recipe/RecipeInfo.jsx","components/homepageComponents/recipe/Details.jsx","components/homepageComponents/recipe/Ingredient.jsx","components/homepageComponents/recipe/CommentSection.jsx","components/homepageComponents/recipe/Comment.jsx","components/homepageComponents/recipe/CommentsList.jsx","components/homepageComponents/recipe/Category.jsx","components/homepageComponents/shopping/Command.jsx","components/homepageComponents/shopping/CommandsList.jsx","components/homepageComponents/recipe/index.jsx","components/homepageComponents/shopping/Product.jsx","components/homepageComponents/shopping/List.jsx","components/homepageComponents/shopping/index.jsx","views/Home/index.jsx","components/LoginForm.jsx","views/Login.jsx","components/SignUpForm.jsx","views/Register.jsx","store/actions/companyActions.js","services/company.js","components/companyComponents/CompanyInformationModal.jsx","components/companyComponents/CompanyPasswordModal.jsx","components/companyComponents/settingsModal.jsx","components/companyComponents/Navbar.jsx","components/companyComponents/Card.jsx","components/companyComponents/Product.jsx","components/companyComponents/CommandsReviewCard.jsx","components/companyComponents/Comment.jsx","components/companyComponents/CommentsReviewCard.jsx","components/companyComponents/InfoTable.jsx","components/companyComponents/Products.jsx","components/companyComponents/Commands.jsx","components/companyComponents/RunoutReviewCard.jsx","components/companyComponents/SalesChart.jsx","components/companyComponents/Stock.jsx","components/companyComponents/LoginForm.jsx","components/companyComponents/Login.jsx","components/companyComponents/SignUpForm.jsx","components/companyComponents/Register.jsx","views/Company/index.jsx","utils/history.js","router/ProtectedRoutes.jsx","App.js","index.js","assets/img/logo.png","assets/img/icons.svg","../node_modules/jspdf/dist sync","assets/img/bannerImg.png","assets/img/test-1.jpg"],"names":["Logo","logo","clearSearchResults","clearCommands","to","onClick","src","alt","className","NavBarComponent","Column","size","style","color","Button","handleClick","icon","children","href","BannerComponent","product","description","aria-label","aria-hidden","borderRadius","image","category","title","id","Review","dateTime","useAuthenticated","item","useState","authenticated","setAuthenticated","history","useHistory","location","useLocation","useEffect","localStorage","getItem","includes","pathname","push","createList","combineReducers","ids","state","action","type","response","result","isFetching","errorMessage","message","getProductsIds","convertStringToArray","element","Array","isArray","replace","split","handleRemoveIngredient","newRecipe","recipe","filter","Ingredient","ingredient","byId","entities","products","console","log","nextState","Object","keys","key","productId","getProduct","getUser","JSON","parse","error","Promise","reject","getCompany","setUser","email","name","phone","address","token","user","editedUser","setItem","stringify","removeUser","removeItem","setCompany","company","editedCompany","removeCompany","getShoppingList","removeProductFromShoppingList","shoppingList","addToShoppingList","quantity","v4","newShoppingList","removeShoppingList","likes","retrieveComments","Box","x","map","f","fold","productIds","items","reduce","acc","curr","assign","comments","newProductComments","comment","commentId","productWithUpdatedComments","pagination","currentPage","meta","current_page","lastPage","last_page","prevLink","links","prev","nextLink","next","categoriesList","searchResultsList","searchResults","isSearching","apiClient","axios","create","baseURL","timeout","headers","Accept","interceptors","use","status","data","store","dispatch","window","res","defaults","common","commands","delivery_state","latestCommands","slice","notifications","notification","runout","forEach","idsByCategory","tortya","cakes","tacos","croissant","pizza","others","rootReducer","likesList","commentsList","commandsList","getVisibleProducts","undefined","fromCreateList","fromById","getVisibleProduct","getIsFetching","getErrorMessage","details","fromShoppingList","getLikedProducts","fromLikesList","getIsProductLiked","from","length","getIsFetchingLike","getProductIngredients","getLikes","getProductComments","fromCommentsList","getPaginationData","getCategories","fromCategoriesList","getSearchResults","fromSearchResultsList","getIsSearching","getCurrentUser","getCurrentCompany","getCommands","getLatestCommands","getIsFetchingCommands","getNotifications","getComments","flat","getRunOutProducts","fetchProducts","paginationLink","get","fetchCategories","schema","Entity","arrayOfProducts","search","searchField","document","getElementById","fromEvent","pipe","throttle","val","interval","value","distinctUntilChanged","switchMap","productName","Observable","observer","fetchSearchProductsRequest","then","retry","subscribe","receiveSearchProducts","fetchSearchProductsFailure","fetchProductsRequest","ProductServices","receiveProducts","addNotification","catch","fetchProductsFailure","receiveCategories","fetchProduct","fetchProductRequest","receiveProduct","fetchProductFailure","normalize","getLikedProductsRequest","getLikedProductsSuccess","getLikedProductsFailure","addToLikeList","post","addToLikeListSuccess","removeFromLikeList","removeFromLikeListSuccess","removeFromShoppingList","removeIngredient","searchProduct","login","credentials","userLoginRequest","password","userServices","receiveUser","updatePassword","oldPassword","newPassword","confirmation","patch","old_password","new_password","new_password_confirmation","updateUserInformation","informations","register","userRegisterRequest","firstName","passwordConfirmation","password_confirmation","userRegisterSuccess","userRegisterfailure","logout","userLogoutRequest","userLogoutSuccess","reload","userLogoutfailure","addComment","product_id","receiveComment","removeComment","delete","removeCommentSuccess","editComment","receiveEditedComment","addCommand","command","generatedId","price","command_group_id","retrieveCommandFromShoppingList","receiveCommand","Welcome","role","bannerImg","i","HomeProduct","connect","selectors","actions","TextField","React","forwardRef","ref","placeholder","Search","inputEl","createRef","subscription","unsubscribe","Like","Likes","likedProducts","icons","ErrorsContainer","errors","UserPasswordForm","closeModal","formik","useFormik","initialValues","confirm","validate","onSubmit","values","Form","layout","handleSubmit","marginTop","FormGroup","ControlLabel","autoComplete","variant","fullWidth","required","label","onChange","handleChange","margin","ButtonToolbar","appearance","UserPasswordModal","show","setShow","Modal","onHide","Header","Title","Body","Footer","UserInformationForm","currentUser","fluid","autoFocus","maxQuantity","UserModal","Avatar","circle","test","useParams","isAuthenticated","Notification","info","placement","duration","PreviousPageButton","clickHandler","pageNumber","isPrevious","Pagination","firstPage","PaginationButton","Item","isActive","List","currentProductId","hash","Products","match","params","withRouter","ownProps","Result","Figure","LikeButton","isLiked","LikesInfo","_","Fragment","RecipeInfo","RecipeDetails","Ingredients","ingredients","unit","max","min","inputRef","CommentSection","isEditing","setIsEditing","e","preventDefault","current","Comment","currentUserId","setCommentId","client_name","created_at","client_id","Comments","Category","Command","createdAt","deliveryState","commandGroupId","author","CommandsList","commandsGroupedById","chain","groupBy","v","client","find","quantitySum","groupItemsById","Product","categories","isFetchingCommands","isFetchingLike","Details","setErrors","Shopping","prompt","Home","LoginForm","classes","setSpinning","form","noValidate","Grid","container","mt","useStyles","makeStyles","theme","root","height","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","spacing","display","flexDirection","alignItems","avatar","secondary","main","width","submit","SignInSide","component","CssBaseline","xs","sm","md","Paper","elevation","square","Typography","SignUpForm","justify","isNaN","Copyright","align","Link","Date","getFullYear","SignUp","Container","maxWidth","companyServices","receiveCompany","getProducts","productCheck","addProduct","resolve","_product","category_id","err","editProduct","removeProduct","editCommand","_command","removeCommand","receiveRunoutProducts","updateCompanyInformation","CompanyInformationForm","currentCompany","CompanyPasswordForm","SettingsForm","CompanyInformationModal","CompanyPasswordModal","CompanySettingsModal","NavBar","Navbar","Nav","Icon","pullRight","CompanyCard","paddingLeft","CommandsReviewCard","CommentsReviewCard","MaterialTableDemo","columns","addAction","editAction","removeAction","editable","onRowAdd","newData","onRowUpdate","oldData","onRowDelete","field","lookup","DELIVERY_STATE","Commands","RunoutReviewCard","labels","datasets","borderColor","SalesChart","Stock","Company","runOutProducts","slug","createBrowserHistory","ProtectedRoute","rest","render","App","exact","path","Login","configureStore","reducer","ReactDOM","module","exports","webpackEmptyContext","req","Error","code"],"mappings":"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","file":"static/js/main.81e986d7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Logo = ({ logo, clearSearchResults, clearCommands }) => {\n  return (\n    <Link\n      to=\"/home\"\n      onClick={() => {\n        if (clearSearchResults) clearSearchResults();\n        if (clearCommands) clearCommands();\n      }}\n    >\n      <img src={logo} alt=\"Logo\" className=\"header__logo\" />\n    </Link>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport NavBar from \"react-bulma-components/lib/components/navbar\";\nimport Container from \"react-bulma-components/lib/components/container\";\nimport Columns from \"react-bulma-components/lib/components/columns\";\nimport { Button } from \"react-bulma-components/dist\";\nimport { NavLink } from \"react-router-dom\";\nimport Logo from \"./homepageComponents/header/Logo\";\nimport logo from \"assets/img/logo.png\";\n\nconst NavBarComponent = () => {\n  return (\n    <nav className=\"welcome__nav\">\n      <NavBar>\n        <Container className=\"welcome__nav\">\n          <Columns.Column size=\"three-quarters\">\n            <Logo logo={logo}></Logo>\n          </Columns.Column>\n          <Columns.Column>\n            <div className=\"navbar-end\">\n              <Columns>\n                <Columns.Column>\n                  <Button className=\"btn is-large\">\n                    <NavLink\n                      style={{\n                        color: \"white\",\n                      }}\n                      to=\"/register\"\n                    >\n                      Sign up\n                    </NavLink>\n                  </Button>\n                </Columns.Column>\n                <Columns.Column>\n                  <Button className=\"btn is-large\">\n                    <NavLink\n                      style={{\n                        color: \"white\",\n                      }}\n                      to=\"/login\"\n                    >\n                      Login\n                    </NavLink>\n                  </Button>\n                </Columns.Column>\n              </Columns>\n            </div>\n          </Columns.Column>\n        </Container>\n      </NavBar>\n    </nav>\n  );\n};\n\nexport default NavBarComponent;\n","import React from \"react\";\n\nconst Button = ({ handleClick, icon, children }) => {\n  return (\n    <button className=\"btn btn__search\" onClick={handleClick}>\n      {icon && (\n        <svg className=\"search__icon\">\n          <use href={icon}></use>\n        </svg>\n      )}\n      <span>{children}</span>\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport Button from \"./Button\";\nimport sampleImage from \"assets/img/test-1.jpg\";\nimport { Link } from \"react-router-dom\";\nconst BannerComponent = ({ product }) => {\n  return (\n    <Card>\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">{product.description}</p>\n        <a href=\"#\" className=\"card-header-icon\" aria-label=\"more options\">\n          <span className=\"icon\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n          </span>\n        </a>\n      </header>\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <img style={{ borderRadius: \"20px\" }} src={product.image}></img>\n          <br />\n        </div>\n        <footer className=\"card-footer mb-5\">\n          <Link to={`/home/${product.category.title}#${product.id}`}>\n            Take a look\n          </Link>\n        </footer>\n      </div>\n    </Card>\n  );\n};\n\nexport default BannerComponent;\n","import React from \"react\";\nconst Review = () => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.rd.com%2Fwp-content%2Fuploads%2F2017%2F09%2F01-shutterstock_476340928-Irina-Bg-1024x683.jpg&f=1&nofb=1\"\n            alt=\"Placeholder image\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-content\">\n            <p className=\"title is-4\">John Smith</p>\n            <p className=\"subtitle is-6\">@johnsmith</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec\n          iaculis mauris. <a>@bulmaio</a>.<a href=\"#\">#css</a>{\" \"}\n          <a href=\"#\">#responsive</a>\n          <br />\n          <time dateTime=\"2016-1-1\">11:09 PM - 1 Jan 2016</time>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Review;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useAuthenticated = (item = \"user\") => {\n  const [authenticated, setAuthenticated] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    if (localStorage.getItem(item)) {\n      setAuthenticated(true);\n      if (\n        [\"/\", \"/login\", \"/register\", \"/welcome\"].includes(location.pathname) &&\n        item === \"user\"\n      ) {\n        history.push(\"/home\");\n      }\n      if (\n        [\"/login/company\", \"/register/company\"].includes(location.pathname) &&\n        item === \"company\"\n      ) {\n        history.push(\"/company\");\n      }\n    }\n  }, []);\n  return authenticated;\n};\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nconst createList = (category) => {\n  const ids = (state = [], action) => {\n    switch (action.type) {\n      case \"FETCH_PRODUCTS_SUCCESS\":\n        return category === action.category ? action.response.result : state;\n      default:\n        return state;\n    }\n  };\n\n  const isFetching = (state = false, action) => {\n    if (action.category !== category) return state;\n    switch (action.type) {\n      case \"FETCH_PRODUCTS_REQUEST\":\n        return true;\n      case \"FETCH_PRODUCTS_SUCCESS\":\n      case \"FETCH_PRODUCTS_FAILURE\":\n        return false;\n      default:\n        return state;\n    }\n  };\n\n  const errorMessage = (state = null, action) => {\n    if (action.category !== category) return state;\n    switch (action.type) {\n      case \"FETCH_PRODUCTS_FAILURE\":\n        return action.message;\n      case \"FETCH_PRODUCTS_REQUEST\":\n      case \"FETCH_PRODUCTS_SUCCESS\":\n        return null;\n      default:\n        return state;\n    }\n  };\n\n  return combineReducers({\n    ids,\n    isFetching,\n    errorMessage,\n  });\n};\n\nexport default createList;\n\nexport const getProductsIds = (state) => state.ids;\nexport const getIsFetching = (state) => state.isFetching;\nexport const getErrorMessage = (state) => state.errorMessage;\n","const convertStringToArray = (element) => {\n  if (element) {\n    return Array.isArray(element)\n      ? element\n      : element.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\n  }\n};\n\nexport default convertStringToArray;\n","import convertStringToArray from \"../../utils/convertStringToArray\";\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_PRODUCTS_SUCCESS\":\n    case \"FETCH_PRODUCT_SUCCESS\":\n      return { ...state, ...action.response.entities.products };\n    case \"REMOVE_PRODUCT\":\n      console.log(\"i am here\");\n      const nextState = Object.keys(state).filter((key) => key !== action.id);\n      return { ...nextState };\n    case \"REMOVE_INGREDIENT\":\n      return {\n        ...state,\n        [action.productId]: handleRemoveIngredient(\n          state[action.productId],\n          action\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nconst handleRemoveIngredient = (state, action) => {\n  const newRecipe = convertStringToArray(state.recipe).filter(\n    (Ingredient) => Ingredient !== action.ingredient\n  );\n  return {\n    ...state,\n    recipe: newRecipe,\n  };\n};\n\nexport default byId;\n\nexport const getProduct = (state, id) => state[id];\n","import { v4 } from \"uuid\";\nconst getUser = () => {\n  try {\n    const res = JSON.parse(localStorage.getItem(\"user\"));\n    return res;\n  } catch (error) {\n    return Promise.reject(\"there was an error while getting the logged user\");\n  }\n};\nconst getCompany = () => {\n  try {\n    const res = JSON.parse(localStorage.getItem(\"company\"));\n    return res;\n  } catch (error) {\n    return Promise.reject(\n      \"there was an error while getting the logged company\"\n    );\n  }\n};\nconst setUser = ({ email, name, phone, address, id, token }) => {\n  try {\n    const user = getUser();\n\n    if (user) {\n      const editedUser = { ...user, email, name, phone, address };\n      localStorage.setItem(\"user\", JSON.stringify(editedUser));\n    } else {\n      localStorage.setItem(\n        \"user\",\n        JSON.stringify({\n          email,\n          name,\n          phone,\n          address,\n          id,\n          token,\n        })\n      );\n    }\n    return getUser();\n  } catch {\n    Promise.reject(\"there was an error while trying to save the logged user\");\n  }\n};\n\nconst removeUser = () => {\n  try {\n    localStorage.removeItem(\"user\");\n    return {};\n  } catch (error) {\n    Promise.reject(\n      \"there was a problem while trying to remove the logged user\"\n    );\n  }\n};\nconst setCompany = ({ email, title, description, phone, address, token }) => {\n  try {\n    const company = getCompany();\n\n    if (company) {\n      const editedCompany = {\n        ...company,\n        email,\n        description,\n        title,\n        phone,\n        address,\n      };\n      localStorage.setItem(\"company\", JSON.stringify(editedCompany));\n    } else {\n      localStorage.setItem(\n        \"company\",\n        JSON.stringify({\n          email,\n          title,\n          phone,\n          description,\n          address,\n          token,\n        })\n      );\n    }\n    return getCompany();\n  } catch {\n    Promise.reject(\n      \"there was an error while trying to save the logged Company\"\n    );\n  }\n};\n\nconst removeCompany = () => {\n  try {\n    localStorage.removeItem(\"company\");\n    return {};\n  } catch (error) {\n    Promise.reject(\n      \"there was a problem while trying to remove the logged company\"\n    );\n  }\n};\n\nconst getShoppingList = () => {\n  try {\n    const res = JSON.parse(localStorage.getItem(\"shoppingList\"));\n    return res;\n  } catch (error) {\n    Promise.reject(\"there was an error dealing with the shopping list\");\n  }\n};\n\nconst removeProductFromShoppingList = (id) => {\n  try {\n    const shoppingList = getShoppingList();\n    delete shoppingList[`${id}`];\n    localStorage.setItem(\"shoppingList\", JSON.stringify(shoppingList));\n    return getShoppingList();\n  } catch (error) {\n    return Promise.reject(\n      \"there was an error while removing the item from the list\"\n    );\n  }\n};\n\nconst addToShoppingList = (product, quantity) => {\n  const id = v4();\n  try {\n    const products = getShoppingList();\n    const newShoppingList = {\n      ...products,\n      [id]: {\n        ...product,\n        quantity,\n      },\n    };\n    localStorage.setItem(\"shoppingList\", JSON.stringify(newShoppingList));\n    return getShoppingList();\n  } catch (error) {\n    return Promise.reject(\"there was an error while accessing localStorage\");\n  }\n};\n\nconst removeShoppingList = () => {\n  try {\n    localStorage.removeItem(\"shoppingList\");\n    return {};\n  } catch (error) {\n    return Promise.reject(\n      \"there was an error while removing the shopping list\"\n    );\n  }\n};\n\nconst getLikedProducts = () => {\n  try {\n    const res = JSON.parse(localStorage.getItem(\"likesList\"));\n    return res;\n  } catch (error) {\n    return Promise.reject(\"there was an error while getting from likes list\");\n  }\n};\n\nconst addToLikeList = (item) => {\n  try {\n    const items = getLikedProducts();\n    const newLikesList = { ...items, [item.id]: item };\n    localStorage.setItem(\"likesList\", JSON.stringify(newLikesList));\n    return getLikedProducts();\n  } catch (error) {\n    return Promise.reject(\"there was an error while adding to the likes list\");\n  }\n};\n\nexport {\n  getShoppingList,\n  addToShoppingList,\n  removeProductFromShoppingList,\n  getLikedProducts,\n  addToLikeList,\n  setUser,\n  removeUser,\n  getUser,\n  removeShoppingList,\n  removeCompany,\n  setCompany,\n  getCompany,\n};\n","import {\n  getShoppingList,\n  addToShoppingList,\n  removeProductFromShoppingList,\n  removeShoppingList,\n} from \"utils/localStorageHelpers\";\n\nconst shoppingList = (state = {}, action) => {\n  switch (action.type) {\n    case \"GET_LIST_ITEMS\":\n      return getShoppingList();\n    case \"GET_LIST_ITEM_FAILURE\":\n      return state;\n    case \"ADD_LIST_ITEM\":\n      return addToShoppingList(action.product, action.quantity);\n    case \"REMOVE_LIST_ITEM\":\n      return removeProductFromShoppingList(action.id);\n    case \"CLEAR_SHOOPING_LIST\":\n      return removeShoppingList();\n    default:\n      return state;\n  }\n};\n\nexport default shoppingList;\n\nexport const getShoppingListItems = (state) => {\n  if (state) {\n    const keys = Object.keys(state);\n    return keys.map((key) => ({ key, details: state[key] }));\n  }\n};\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nconst likes = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TO_LIKE_LIST\":\n      return [...state, action.response];\n    case \"REMOVE_FROM_LIKE_LIST\":\n      return state.filter((product) => product.id !== action.response.id);\n    case \"GET_LIKE_LIST_SUCCESS\":\n      return action.response;\n    case \"GET_LIKE_LIST_REQUEST\":\n    case \"GET_LIKE_LIST_FAILURE\":\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst isFetching = (state = false, action) => {\n  switch (action.type) {\n    case \"LIKE_REQUEST\":\n      return true;\n    case \"LIKE_SUCCESS\":\n    case \"LIKE_FAILURE\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ isFetching, likes });\n\nexport const getLikedListItems = (state) => {\n  if (state) {\n    const keys = Object.keys(state);\n    return keys.map((key) => ({ key, details: state[key] }));\n  }\n};\n\nexport const getIsProductLiked = (state, id) => {\n  const likes = Array.from(state).filter((product) => {\n    return product.id === +id;\n  });\n  return likes.length > 0 ? true : false;\n};\n\nexport const getIsFetchingLike = (state) => state;\n","const comments = (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_PRODUCTS_SUCCESS\":\n      return retrieveComments(state, action);\n    case \"ADD_COMMENT\":\n      return {\n        ...state,\n        [action.productId]: [...state[action.productId], action.response],\n      };\n\n    case \"REMOVE_COMMENT\":\n      const newProductComments = state[action.productId].filter(\n        (comment) => comment.id !== action.commentId\n      );\n      const nextState = {\n        ...state,\n        [action.productId]: newProductComments,\n      };\n\n      return nextState;\n\n    case \"EDIT_COMMENT\":\n      const productWithUpdatedComments = state[action.productId].map(\n        (comment) => {\n          if (comment.id === action.commentId) {\n            comment = action.response;\n          }\n          return comment;\n        }\n      );\n\n      return {\n        ...state,\n        [action.productId]: productWithUpdatedComments,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Box = (x) => ({\n  map: (f) => Box(f(x)),\n  fold: (f) => f(x),\n});\n\n/*\n * the reason data is distructured this way is because\n * its normalized to come in this shape using normalizer lib\n */\nconst getItems = (itemsIds, items) => itemsIds.map((id) => items[id]);\n\nconst getItemFromItems = (items, item) =>\n  items.reduce(\n    (acc, curr) => Object.assign(acc, { [curr.id]: curr[item] }),\n    {}\n  );\n\nconst retrieveComments = (state, action) =>\n  Box(action)\n    .map((action) => ({\n      productIds: action.response.result,\n      products: action.response.entities.products,\n    }))\n    .map(({ productIds, products }) => getItems(productIds, products))\n    .map((products) => getItemFromItems(products, \"comments\"))\n    .fold((comments) => ({ ...state, ...comments }));\n\nexport default comments;\n\nexport const getComments = (state, productId) => {\n  return state[productId];\n};\n\nexport const getCompanyComments = (state) =>\n  Object.keys(state)\n    .map((comment) => state[comment].map((comment) => comment))\n    .flat();\n","const pagination = (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_PRODUCTS_SUCCESS\":\n      return {\n        currentPage: action.meta.current_page,\n        lastPage: action.meta.last_page,\n        prevLink: action.links.prev,\n        nextLink: action.links.next,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pagination;\n\nexport const getPaginationData = (state) => {\n  return state;\n};\n","const categoriesList = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_CATEGORIES_SUCCESS\":\n      return action.response;\n    default:\n      return state;\n  }\n};\n\nexport default categoriesList;\n\nexport const getCategories = (state) => {\n  return state.map((category) => category);\n};\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nconst searchResults = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_SEARCH_PRODUCTS_SUCCESS\":\n      return action.response;\n    case \"CLEAR_SEARCH_RESULTS\":\n      return [];\n    case \"FETCH_SEARCH_PRODUCTS_FAILURE\":\n      return action.message;\n    default:\n      return state;\n  }\n};\n\nconst isSearching = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCH_SEARCH_PRODUCTS_REQUEST\":\n      return true;\n    case \"FETCH_SEARCH_PRODUCTS_SUCCESS\":\n    case \"FETCH_SEARCH_PRODUCTS_FAILURE\":\n    case \"CLEAR_SEARCH_RESULTS\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst searchResultsList = combineReducers({ searchResults, isSearching });\n\nexport default searchResultsList;\n\nexport const getResultsIds = (state) => {\n  return state.result;\n};\nexport const getResult = (state, id) => {\n  return state.entities.products[id];\n};\nexport const getIsSearching = (state) => state;\n","import axios from \"axios\";\nimport store from \"../index\";\n\nconst BASE_URL = \"http://127.0.0.1:8000/api\";\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  timeout: 5000,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n});\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response.status === 403) {\n      return Promise.reject(error.response.data.error);\n    }\n    if (error.response.status === 401) {\n      store.dispatch({ type: \"USER_LOGOUT_SUCCESS\" });\n      window.location.replace(\"/login\");\n      return Promise.reject(error);\n    }\n  }\n);\n\nexport default apiClient;\n","import { setUser, removeUser } from \"utils/localStorageHelpers\";\nimport apiClient from \"services/apiClient\";\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case \"USER_LOGIN_SUCCESS\":\n      const res = { ...state, ...setUser(action.response) };\n      apiClient.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${res.token}`;\n      return res;\n    case \"USER_LOGIN_FAILURE\":\n    case \"USER_LOGOUT_SUCCESS\":\n      return removeUser();\n    default:\n      return state;\n  }\n};\n// case \"USER_LOGIN_REQUEST\":\n// case \"USER_REGISTER_SUCCESS\":\n// case \"USER_REGISTER_FAILURE\":\n// case \"USER_REGISTER_REQUEST\":\n\nexport default user;\n\nexport const getUser = (state) => {\n  return state;\n};\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nconst commands = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_COMMANDS_SUCCESS\":\n      console.log(\"the commands are: \", action.response);\n      return action.response;\n    case \"ADD_COMMAND_SUCCESS\":\n      return [\n        {\n          // NOTE: there will always be only one item inside the array in this case\n          ...action.response[0],\n          delivery_state: \"waiting\",\n        },\n      ];\n    case \"CLEAR_COMMANDS_LIST\":\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst latestCommands = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_COMMANDS_SUCCESS\":\n      return [...action.response.slice(0, 6)];\n    default:\n      return state;\n  }\n};\n\nconst isFetching = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCH_COMMANDS_REQUEST\":\n      return true;\n    case \"FETCH_COMMANDS_SUCCESS\":\n    case \"FETCH_COMMANDS_FAILURE\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ commands, latestCommands, isFetching });\n\nexport const getCommands = (state) => state;\n\nexport const getIsFetchingCommands = (state) => state;\n\nexport const getLatestCommands = (state) => state;\n","const notifications = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_NOTIFICATION\":\n      return [...state, action.notification];\n    case \"REMOVE_NOTIFICATION\":\n    default:\n      return state;\n  }\n};\n\nexport default notifications;\n\nexport const getNotifications = (state) => state;\n","import { setCompany, removeCompany } from \"utils/localStorageHelpers\";\nimport apiClient from \"services/apiClient\";\n\nconst company = (state = {}, action) => {\n  switch (action.type) {\n    case \"COMPANY_LOGIN_SUCCESS\":\n      const res = { ...state, ...setCompany(action.response) };\n      apiClient.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${res.token}`;\n      return res;\n    case \"COMPANY_LOGIN_FAILURE\":\n    case \"COMPANY_LOGOUT_SUCCESS\":\n      return removeCompany();\n    case \"COMPANY_LOGOUT_FAILURE\":\n      return state;\n    default:\n      return state;\n  }\n};\n// case \"COMPANY_LOGIN_REQUEST\":\n// case \"COMPANY_REGISTER_SUCCESS\":\n// case \"COMPANY_REGISTER_FAILURE\":\n// case \"COMPANY_REGISTER_REQUEST\":\n\nexport default company;\n\nexport const getCompany = (state) => {\n  return state;\n};\n","const runout = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_RUNOUT_PRODUCT\":\n      const nextState = [];\n      Object.keys(action.response.entities.products).forEach((key) =>\n        nextState.push(action.response.entities.products[key])\n      );\n      return nextState;\n    case \"FETCH_RUNOUT_PRODUCT_FAILURE\":\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default runout;\n\nexport const getRunOutProducts = (state) => state;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport createList, * as fromCreateList from \"./createList\";\nimport byId, * as fromById from \"./byId\";\nimport shoppingList, * as fromShoppingList from \"./shoppingList\";\nimport likesList, * as fromLikesList from \"./likesList\";\nimport commentsList, * as fromCommentsList from \"./commentsList\";\nimport convertStringToArray from \"utils/convertStringToArray\";\nimport pagination, * as fromPagination from \"./pagination\";\nimport categoriesList, * as fromCategoriesList from \"./categoriesList\";\nimport searchResultsList, * as fromSearchResultsList from \"./searchResultsList\";\nimport user, * as fromUser from \"./user\";\nimport commandsList, * as fromCommandsList from \"./commandsList\";\nimport notifications, * as fromNotifications from \"./notifications\";\nimport company, * as fromCompany from \"./company\";\nimport runout, * as fromRunout from \"./runout\";\n\nconst idsByCategory = combineReducers({\n  tortya: createList(\"tortya\"),\n  cakes: createList(\"cakes\"),\n  tacos: createList(\"tacos\"),\n  croissant: createList(\"croissant\"),\n  pizza: createList(\"pizza\"),\n  others: createList(\"others\"),\n});\n\nconst rootReducer = combineReducers({\n  byId,\n  idsByCategory,\n  shoppingList,\n  likesList,\n  commentsList,\n  commandsList,\n  categoriesList,\n  pagination,\n  searchResultsList,\n  notifications,\n  user,\n  company,\n  runout,\n});\n\nexport default rootReducer;\n\nexport const getVisibleProducts = (state, category = \"others\") => {\n  if (category !== undefined) {\n    const ids = fromCreateList.getProductsIds(state.idsByCategory[category]);\n    return ids.map((id) => fromById.getProduct(state.byId, id));\n  }\n  return [];\n};\n\nexport const getVisibleProduct = (state, id) => {\n  const product = fromById.getProduct(state.byId, id);\n  if (product) return product;\n  return undefined;\n};\n\nexport const getIsFetching = (state, category) => {\n  if (category) {\n    return fromCreateList.getIsFetching(state.idsByCategory[category]);\n  }\n  return;\n};\n\nexport const getErrorMessage = (state, category) => {\n  if (category) {\n    return fromCreateList.getErrorMessage(state.idsByCategory[category]);\n  }\n  return;\n};\n\nexport const getShoppingList = (state) => {\n  return fromShoppingList.getShoppingListItems(state.shoppingList);\n};\n\nexport const getLikedProducts = (state) => {\n  return fromLikesList.getLikedListItems(state.likesList.likes);\n};\n\nexport const getIsProductLiked = (state, id) => {\n  return fromLikesList.getIsProductLiked(state.likesList.likes, id);\n};\n\nexport const getIsFetchingLike = (state) => {\n  return fromLikesList.getIsFetchingLike(state.likesList.isFetching);\n};\n\nexport const getProductIngredients = (state, id) => {\n  const product = fromById.getProduct(state.byId, id);\n  if (product) {\n    return convertStringToArray(product.recipe);\n  }\n};\nexport const getLikes = (state, id) => {\n  const product = fromById.getProduct(state.byId, id);\n  if (product) {\n    return product.likes;\n  }\n};\n\nexport const getProductComments = (state, id) => {\n  const product = fromById.getProduct(state.byId, id);\n  if (product) {\n    return fromCommentsList.getComments(state.commentsList, product.id);\n  }\n};\n\nexport const getPaginationData = (state) => {\n  return fromPagination.getPaginationData(state.pagination);\n};\n\nexport const getCategories = (state) => {\n  return fromCategoriesList.getCategories(state.categoriesList);\n};\n\nexport const getSearchResults = (state) => {\n  const ids = fromSearchResultsList.getResultsIds(\n    state.searchResultsList.searchResults\n  );\n\n  if (ids) {\n    return ids.map((id) =>\n      fromSearchResultsList.getResult(state.searchResultsList.searchResults, id)\n    );\n  }\n  return undefined;\n};\n\nexport const getIsSearching = (state) => {\n  return fromSearchResultsList.getIsSearching(\n    state.searchResultsList.isSearching\n  );\n};\n\nexport const getCurrentUser = (state) => {\n  return fromUser.getUser(state.user);\n};\nexport const getCurrentCompany = (state) => {\n  return fromUser.getUser(state.company);\n};\n\nexport const getCommands = (state) => {\n  return fromCommandsList.getCommands(state.commandsList.commands);\n};\n\nexport const getLatestCommands = (state) =>\n  fromCommandsList.getLatestCommands(state.commandsList.latestCommands);\n\nexport const getIsFetchingCommands = (state) => {\n  return fromCommandsList.getIsFetchingCommands(state.commandsList.isFetching);\n};\n\nexport const getNotifications = (state) => {\n  return fromNotifications.getNotifications(state.notifications);\n};\n\nexport const getComments = (state) =>\n  fromCommentsList.getCompanyComments(state.commentsList);\n\nexport const getRunOutProducts = (state) =>\n  fromRunout.getRunOutProducts(state.runout);\n","import apiClient from \"./apiClient\";\n\nconst fetchProducts = (paginationLink, category) => {\n  if (paginationLink !== null) {\n    const res = paginationLink?.replace(\"http://localhost:8000/api\", \"\");\n    return apiClient.get(res);\n  }\n  if (category) {\n    return apiClient.get(`/categories/products/${category}`);\n  }\n  return apiClient.get(\"/products\");\n};\n\nconst fetchProduct = (productId) => {\n  return apiClient.get(`/products/${productId}`);\n};\n\nconst fetchCategories = () => {\n  return apiClient.get(\"/categories\");\n};\n\nconst searchProduct = (productName) => {\n  return apiClient.get(`/products?title=${productName}`);\n};\n\nconst likeProduct = (productId) => {\n  return apiClient.post(`clients/${productId}/like`);\n};\n\nconst unlikeProduct = (productId) => {\n  return apiClient.post(`clients/${productId}/unlike`);\n};\n\nconst sendCommand = (command) => {\n  return apiClient.post(\n    `clients/commands`,\n    JSON.stringify({\n      command: command,\n    })\n  );\n};\n\nconst getCommands = () => {\n  return apiClient.get(\"clients/commands\");\n};\n\nconst getCommand = (commandGroupId) => {\n  return apiClient.get(`clients/commands/${commandGroupId}`);\n};\n\nconst getRunOutProducts = () => apiClient.get(\"/companies/products/runout\");\n\nexport {\n  fetchProducts,\n  fetchProduct,\n  fetchCategories,\n  searchProduct,\n  likeProduct,\n  unlikeProduct,\n  sendCommand,\n  getCommands,\n  getCommand,\n  getRunOutProducts,\n};\n","import { schema } from \"normalizr\";\n\nconst product = new schema.Entity(\"products\");\n\nconst arrayOfProducts = new schema.Array(product);\n\nconst comment = new schema.Entity(\"commnets\");\nconst arrayOfComments = new schema.Array(comment);\n\nexport { product, arrayOfProducts, arrayOfComments };\n","import { fromEvent, Observable, interval } from \"rxjs\";\nimport {\n  map,\n  throttle,\n  distinctUntilChanged,\n  switchMap,\n  retry,\n  filter,\n} from \"rxjs/operators\";\nimport apiClient from \"services/apiClient\";\nimport {\n  receiveSearchProducts,\n  fetchSearchProductsFailure,\n  fetchSearchProductsRequest,\n} from \"store/actions/userActions\";\n\nconst search = (dispatch) => {\n  const searchField = document.getElementById(\"search__field\");\n  const keyPresses = fromEvent(searchField, \"keyup\");\n\n  function getSearchProductsResults(productName) {\n    return Observable.create(function (observer) {\n      dispatch(fetchSearchProductsRequest());\n      apiClient\n        .get(`http://127.0.0.1:8000/api/products?title=${productName}`)\n        .then(\n          (res) => {\n            observer.next(res);\n          },\n          (error) => {\n            observer.error(error);\n          }\n        );\n    });\n  }\n\n  const resultSets = keyPresses.pipe(\n    throttle((val) => interval(1000)),\n    map((key) => searchField.value),\n    distinctUntilChanged(),\n    filter((search) => search.length > 0),\n    switchMap(getSearchProductsResults),\n    retry(2)\n  );\n\n  const subscription = resultSets.subscribe(\n    (response) => {\n      dispatch(receiveSearchProducts(response));\n    },\n    (error) => dispatch(fetchSearchProductsFailure(error))\n  );\n\n  return subscription;\n};\n\nexport default search;\n","import * as ProductServices from \"services/product\";\nimport * as userServices from \"services/user\";\nimport { normalize } from \"normalizr\";\nimport { arrayOfProducts, product } from \"../../utils/schema\";\nimport search from \"utils/search\";\nimport { retrieveCommandFromShoppingList } from \"utils\";\n\nconst fetchProducts = (paginationLink = null, category = \"others\") => (\n  dispatch\n) => {\n  dispatch(fetchProductsRequest(category));\n  return ProductServices.fetchProducts(paginationLink, category)\n    .then((response) => {\n      dispatch(receiveProducts(response, category));\n      dispatch(addNotification(\"Products fetched successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(fetchProductsFailure(error, category));\n      dispatch(\n        addNotification(\"There was an error while fetching the products\")\n      );\n    });\n};\n\nconst fetchCategories = () => (dispatch) => {\n  return ProductServices.fetchCategories()\n    .then((response) => {\n      dispatch(receiveCategories(response));\n      dispatch(addNotification(\"Categories fetched successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(\n        addNotification(\"There was an error while fetching the categories\")\n      )\n    );\n};\n\nconst receiveCategories = (response) => {\n  return {\n    type: \"FETCH_CATEGORIES_SUCCESS\",\n    response: response.data.data,\n  };\n};\n\nconst fetchProduct = (productId) => (dispatch) => {\n  dispatch(fetchProductRequest());\n  return ProductServices.fetchProduct(productId)\n    .then((response) => {\n      dispatch(receiveProduct(response));\n      dispatch(addNotification(\"Product fetched successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(fetchProductFailure(error));\n      addNotification(\"There was an error while fetching the product\");\n    });\n};\n\n// const receiveProductLikes = (response) => {};\n// const fetchProductLikesFailure = () => {};\n\n// const fetchProductComments = (productId) => (dispatch) => {\n//   return ProductServices.fetchProductComments(productId).then(\n//     (response) => dispatch(receiveProductComments(response)),\n//     (error) => dispatch(fetchProductCommentsFailure(error))\n//   );\n// };\n\nconst receiveProduct = (response) => {\n  return {\n    type: \"FETCH_PRODUCT_SUCCESS\",\n    response: normalize(response.data.data, product),\n  };\n};\n\nconst addNotification = (notification) => ({\n  type: \"ADD_NOTIFICATION\",\n  notification,\n});\n\n// const fetchProductCommentsFailure = (error) => {\n//   return {\n//     type: \"FETCH_PRODUCT_COMMENTS_FAILURE\",\n//     message: error.message,\n//   };\n// };\n\n// const receiveProductComments = (response) => {\n//   return {\n//     type: \"FETCH_PRODUCT_COMMENTS_SUCCESS\",\n//     response: normalize(response.data.data, arrayOfComments),\n//   };\n// };\n\nconst fetchProductRequest = () => {\n  return {\n    type: \"FETCH_PRODUCT_REQUEST\",\n  };\n};\nconst fetchProductFailure = (error) => {\n  return {\n    type: \"FETCH_PRODUCT_FAILURE\",\n    message: error.message || \"there was an error while fetching the product\",\n  };\n};\n\nconst fetchProductsRequest = (category = \"others\") => {\n  return {\n    type: \"FETCH_PRODUCTS_REQUEST\",\n    category,\n  };\n};\n\nconst fetchProductsFailure = (error, category) => {\n  return {\n    type: \"FETCH_PRODUCTS_FAILURE\",\n    message: error.message || \"There was an error while fetching the products\",\n    category,\n  };\n};\nconst fetchSearchProductsRequest = () => {\n  return {\n    type: \"FETCH_SEARCH_PRODUCTS_REQUEST\",\n  };\n};\nconst fetchSearchProductsFailure = (error) => {\n  return {\n    type: \"FETCH_SEARCH_PRODUCTS_FAILURE\",\n    message: error.message || \"There was an error while fetching the products\",\n  };\n};\n\nconst receiveProducts = (response, category = \"others\") => {\n  return {\n    type: \"FETCH_PRODUCTS_SUCCESS\",\n    response: normalize(response.data.data, arrayOfProducts),\n    category,\n    links: response.data.links,\n    meta: response.data.meta,\n  };\n};\n\nconst receiveSearchProducts = (response) => {\n  return {\n    type: \"FETCH_SEARCH_PRODUCTS_SUCCESS\",\n    response: normalize(response.data.data, arrayOfProducts),\n  };\n};\n\nconst addToShoppingList = (product, quantity) => {\n  return {\n    type: \"ADD_LIST_ITEM\",\n    product,\n    quantity,\n  };\n};\n\nconst getShoppingList = () => {\n  return {\n    type: \"GET_LIST_ITEMS\",\n  };\n};\n\nconst getLikedProducts = () => (dispatch) => {\n  dispatch(getLikedProductsRequest());\n  return userServices\n    .getLikedProducts()\n    .then((response) => {\n      dispatch(getLikedProductsSuccess(response));\n      dispatch(addNotification(\"Liked products fetched successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(getLikedProductsFailure(error));\n      dispatch(\n        addNotification(\"There was an error while fetching the liked products\")\n      );\n    });\n};\nconst getLikedProductsRequest = () => ({\n  type: \"GET_LIKE_LIST_REQUEST\",\n});\n\nconst getLikedProductsSuccess = (response) => {\n  return {\n    type: \"GET_LIKE_LIST_SUCCESS\",\n    response: response.data.data.likes,\n  };\n};\nconst getLikedProductsFailure = (error) => ({\n  type: \"GET_LIKE_LIST_FAILURE\",\n  message: error.message,\n});\n\nconst addToLikeList = (productId) => (dispatch) => {\n  dispatch({ type: \"LIKE_REQUEST\" });\n  return ProductServices.likeProduct(productId)\n    .then((response) => {\n      dispatch(addToLikeListSuccess(response));\n      dispatch({ type: \"LIKE_SUCCESS\" });\n      dispatch(addNotification(\"Product liked successfuly\"));\n    })\n    .catch((error) => {\n      dispatch({ type: \"LIKE_FAILURE\" });\n      dispatch(addNotification(\"There was an error while liking the product\"));\n    });\n};\nconst removeFromLikeList = (productId) => (dispatch) => {\n  dispatch({ type: \"LIKE_REQUEST\" });\n  return ProductServices.unlikeProduct(productId)\n    .then((response) => {\n      dispatch(removeFromLikeListSuccess(response));\n      dispatch({ type: \"LIKE_SUCCESS\" });\n      dispatch(addNotification(\"Product disliked successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(addNotification(\"There was an error while liking the product\"))\n    );\n};\n\nconst addToLikeListSuccess = (response) => {\n  return {\n    type: \"ADD_TO_LIKE_LIST\",\n    response: response.data.data,\n  };\n};\n\nconst removeFromLikeListSuccess = (response) => {\n  return {\n    type: \"REMOVE_FROM_LIKE_LIST\",\n    response: response.data.data,\n  };\n};\n\nconst removeFromShoppingList = (productId) => {\n  return {\n    type: \"REMOVE_LIST_ITEM\",\n    id: productId,\n  };\n};\n\nconst removeIngredient = (ingredient, productId) => {\n  return {\n    type: \"REMOVE_INGREDIENT\",\n    ingredient,\n    productId,\n  };\n};\n\nconst clearSearchResults = () => {\n  return {\n    type: \"CLEAR_SEARCH_RESULTS\",\n  };\n};\n\nconst searchProduct = () => (dispatch) => {\n  return search(dispatch);\n};\n\nconst login = (credentials, history) => (dispatch) => {\n  dispatch(userLoginRequest());\n  return userServices\n    .login(credentials)\n    .then((response) => {\n      dispatch(receiveUser(response));\n      history.push(\"/home\");\n      dispatch(addNotification(\"You're logged in\"));\n    })\n    .catch((error) =>\n      dispatch(addNotification(\"There was an error while logging in\"))\n    );\n};\n\nconst receiveUser = (response) => ({\n  type: \"USER_LOGIN_SUCCESS\",\n  response: response.data,\n});\nconst userLoginRequest = () => ({\n  type: \"USER_LOGIN_REQUEST\",\n});\nconst userLoginfailure = (error) => ({\n  type: \"USER_LOGIN_FAILURE\",\n  message: error.message,\n});\n\nconst updatePassword = (oldPassword, newPassword, confirmation) => (\n  dispatch\n) => {\n  return userServices\n    .updatePassword(oldPassword, newPassword, confirmation)\n    .then((response) => {\n      dispatch(addNotification(\"Password updated successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(\n        addNotification(\"There was an error while changing the password\")\n      );\n    });\n};\n\nconst updateUserInformation = (informations) => (dispatch) => {\n  return userServices\n    .updateUserInformation(informations)\n    .then((response) => {\n      dispatch(receiveUser(response.data));\n      dispatch(addNotification(\"Informations updated successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while updating profile\"));\n    });\n};\n\nconst register = (credentials, history) => (dispatch) => {\n  dispatch(userRegisterRequest());\n  return userServices\n    .register(credentials)\n    .then((response) => {\n      dispatch(userRegisterSuccess(response));\n      history.push(\"/login\");\n      dispatch(addNotification(\"Your account has been created\"));\n    })\n    .catch((error) => {\n      dispatch(userRegisterfailure(error));\n      dispatch(\n        addNotification(\"There was an error while creating your account\")\n      );\n    });\n};\n\nconst userRegisterSuccess = (response) => ({\n  type: \"USER_REGISTER_SUCCESS\",\n  response,\n});\nconst userRegisterRequest = () => ({\n  type: \"USER_REGISTER_REQUEST\",\n});\nconst userRegisterfailure = (error) => ({\n  type: \"USER_REGISTER_FAILURE\",\n  message: error.message,\n});\n\nconst logout = (history) => (dispatch) => {\n  dispatch(userLogoutRequest());\n  return userServices\n    .logout()\n    .then((response) => {\n      dispatch(userLogoutSuccess(response));\n      dispatch({ type: \"CLEAR_SHOOPING_LIST\" });\n      history.push(\"/\");\n      dispatch(addNotification(\"You're logged out\"));\n      window.location.reload();\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while logging out\"));\n      dispatch(userLogoutfailure(error));\n      history.push(\"/\");\n    });\n};\n\nconst userLogoutSuccess = (response) => ({\n  type: \"USER_LOGOUT_SUCCESS\",\n  response: response.data,\n});\nconst userLogoutRequest = () => ({\n  type: \"USER_LOGOUT_REQUEST\",\n});\nconst userLogoutfailure = (error) => ({\n  type: \"USER_LOGOUT_FAILURE\",\n  message: error.message,\n});\n\nconst addComment = (comment, productId) => (dispatch) => {\n  return userServices\n    .addComment(comment, productId)\n    .then((response) => {\n      dispatch(receiveComment(response, productId));\n      dispatch(addNotification(\"Comment added successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while adding the comment\"));\n    });\n};\n\nconst receiveComment = (response, productId) => ({\n  type: \"ADD_COMMENT\",\n  response: response.data.data,\n  productId,\n});\n\nconst removeComment = (commentId, productId) => (dispatch) => {\n  return userServices\n    .removeComment(commentId)\n    .then((response) => {\n      dispatch(removeCommentSuccess(response, productId, commentId));\n      dispatch(addNotification(\"Comment removed successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(addNotification(\"There was an error while removing the comment\"))\n    );\n};\n\nconst removeCommentSuccess = (response, productId, commentId) => ({\n  type: \"REMOVE_COMMENT\",\n  productId,\n  commentId,\n});\n\nconst editComment = (comment, productId, commentId) => (dispatch) => {\n  return userServices\n    .editComment(comment, commentId)\n    .then((response) => {\n      dispatch(receiveEditedComment(response, productId, commentId));\n      dispatch(addNotification(\"Comment edited successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(addNotification(\"There was an error while editing the comment\"))\n    );\n};\n\nconst receiveEditedComment = (response, productId, commentId) => ({\n  type: \"EDIT_COMMENT\",\n  response: response.data.data,\n  productId,\n  commentId,\n});\n\nconst addCommand = (shoppingList, address) => (dispatch) => {\n  const command = retrieveCommandFromShoppingList(shoppingList, address);\n  return ProductServices.sendCommand(command)\n    .then((response) => {\n      dispatch(receiveCommand(response));\n      dispatch({ type: \"CLEAR_SHOOPING_LIST\" });\n      dispatch(addNotification(\"Command added successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while adding a command\"));\n    });\n};\n\nconst getCommands = () => (dispatch) => {\n  dispatch({ type: \"FETCH_COMMANDS_REQUEST\" });\n  return ProductServices.getCommands()\n    .then((response) => {\n      dispatch({\n        type: \"FETCH_COMMANDS_SUCCESS\",\n        response: response.data.data,\n      });\n      dispatch(addNotification(\"Commands fetched successfuly\"));\n    })\n    .catch(() => {\n      dispatch({ type: \"FETCH_COMMANDS_FAILURE\" });\n      dispatch(\n        addNotification(\"There was an error while fetching the commands\")\n      );\n    });\n};\n\nconst clearCommands = () => ({\n  type: \"CLEAR_COMMANDS_LIST\",\n});\n\nconst receiveCommand = (response) => ({\n  type: \"ADD_COMMAND_SUCCESS\",\n  response: response.data.data,\n});\n\nexport {\n  clearCommands,\n  getCommands,\n  fetchProducts,\n  receiveProducts,\n  fetchProductsFailure,\n  fetchProductsRequest,\n  addToShoppingList,\n  getShoppingList,\n  removeFromShoppingList,\n  getLikedProducts,\n  addToLikeList,\n  removeIngredient,\n  fetchProductFailure,\n  fetchProductRequest,\n  fetchProduct,\n  fetchCategories,\n  fetchSearchProductsFailure,\n  receiveSearchProducts,\n  fetchSearchProductsRequest,\n  clearSearchResults,\n  searchProduct,\n  login,\n  receiveUser,\n  register,\n  logout,\n  userLogoutSuccess,\n  userLogoutRequest,\n  userLogoutfailure,\n  removeFromLikeList,\n  addComment,\n  removeComment,\n  editComment,\n  addCommand,\n  updatePassword,\n  updateUserInformation,\n  addNotification,\n};\n","import apiClient from \"services/apiClient\";\n\nconst login = ({ email, password }) => {\n  return apiClient.post(\"clients/login\", JSON.stringify({ email, password }));\n};\n\nconst register = ({\n  firstName,\n  phone,\n  email,\n  address,\n  password,\n  passwordConfirmation,\n}) => {\n  return apiClient.post(\n    \"clients/register\",\n    JSON.stringify({\n      name: firstName,\n      phone,\n      email,\n      address,\n      password,\n      password_confirmation: passwordConfirmation,\n    })\n  );\n};\n\nconst logout = () => {\n  return apiClient.post(\"clients/logout\");\n};\n\nconst getLikedProducts = () => {\n  return apiClient.get(\"clients/profile\");\n};\n\nconst addComment = (comment, productId) => {\n  return apiClient.post(\n    `clients/comments/${productId}`,\n    JSON.stringify({ comment, product_id: productId })\n  );\n};\nconst removeComment = (commentId) => {\n  return apiClient.delete(`clients/comments/${commentId}`);\n};\n\nconst editComment = (comment, commentId) => {\n  return apiClient.patch(\n    `clients/comments/${commentId}`,\n    JSON.stringify({ comment, product_id: commentId })\n  );\n};\n\nconst updatePassword = (oldPassword, newPassword, confirmation) => {\n  return apiClient.patch(\n    \"/clients/password\",\n    JSON.stringify({\n      old_password: oldPassword,\n      new_password: newPassword,\n      new_password_confirmation: confirmation,\n    })\n  );\n};\n\nconst updateUserInformation = (informations) => {\n  return apiClient.patch(\"clients/profile\", JSON.stringify(informations));\n};\n\nexport {\n  login,\n  register,\n  logout,\n  getLikedProducts,\n  addComment,\n  removeComment,\n  editComment,\n  updatePassword,\n  updateUserInformation,\n};\n","import convertStringToArray from \"./convertStringToArray\";\nimport { v4 } from \"uuid\";\nimport _ from \"lodash\";\n\nexport const retrieveCommandFromShoppingList = (shoppingList, address) => {\n  const generatedId = v4();\n  return shoppingList.map((product, description) => ({\n    product_id: product.details.id,\n    quantity: product.details.quantity,\n    recipe: convertStringToArray(product.details.recipe),\n    description,\n    price: product.details.price,\n    address,\n    command_group_id: generatedId,\n  }));\n};\n\nexport const groupItemsById = (commands) => {\n  return _.chain(commands)\n    .groupBy(\"command_group_id\")\n    .map(function (v, i) {\n      return {\n        commandGroupId: i,\n        client: _.get(_.find(v, \"client\"), \"client\"),\n        createdAt: _.get(_.find(v, \"created_at\"), \"created_at\"),\n        address: _.get(_.find(v, \"address\"), \"address\"),\n        product: _.map(v, \"product\"),\n        delivery_state: _.map(v, \"delivery_state\"),\n        quantity: _.map(v, \"quantity\"),\n        quantitySum: _.map(v, \"quantity\").reduce((acc, curr) => acc + curr),\n        price: _.map(v, \"price\").reduce((acc, curr) => acc + curr),\n        description: _.map(v, \"description\"),\n      };\n    })\n    .value();\n};\n","import React, { useEffect } from \"react\";\nimport NavBarComponent from \"components/NavBar\";\nimport HomeProduct from \"components/HomeProduct\";\nimport { Container, Columns } from \"react-bulma-components/lib\";\nimport { Button } from \"react-bulma-components/dist\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport bannerImg from \"../assets/img/bannerImg.png\";\nimport Review from \"components/Review\";\nimport { useAuthenticated } from \"customHooks\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as selectors from \"store/reducers\";\nimport * as actions from \"store/actions/userActions\";\n\nconst mapStateToProps = (state) => ({\n  products: selectors.getVisibleProducts(state),\n});\n\nlet Welcome = ({ fetchProducts, products }) => {\n  useEffect(() => {\n    fetchProducts();\n  }, [fetchProducts]);\n\n  console.log(\"products :>> \", products);\n  const isAuthenticated = useAuthenticated();\n  if (!isAuthenticated) {\n    return (\n      <div>\n        <NavBarComponent />\n        <div>\n          <Container className=\"welcome__container\">\n            <Card className=\"banner-card\">\n              <Columns>\n                <Columns.Column>\n                  <div className=\"banner__header\">\n                    <h1>\n                      Choose your joy <span role=\"img\">🍝</span>, we bring it to\n                      you\n                    </h1>\n                  </div>\n                </Columns.Column>\n                <Columns.Column>\n                  <img\n                    src={bannerImg}\n                    alt=\"banner\"\n                    className=\"banner-logo\"\n                  ></img>\n                </Columns.Column>\n              </Columns>\n              <Columns>\n                <Columns.Column></Columns.Column>\n                <Columns.Column className=\"is-full\">\n                  <Button className=\"btn is-large\">\n                    <NavLink\n                      style={{\n                        color: \"white\",\n                      }}\n                      to=\"/login/company\"\n                    >\n                      Company space &rarr;\n                    </NavLink>\n                  </Button>\n                </Columns.Column>\n              </Columns>\n            </Card>\n            <div className=\"categories-list\">\n              <Columns>\n                {products.map(\n                  (product, i) =>\n                    i <= 3 && (\n                      <Columns.Column>\n                        <HomeProduct product={product} key={i} />\n                      </Columns.Column>\n                    )\n                )}\n              </Columns>\n              <hr></hr>\n              <p className=\"heading-2\">What our clients say about us</p>\n              <Columns>\n                <Columns.Column>\n                  <Review></Review>\n                </Columns.Column>\n                <Columns.Column>\n                  <Review></Review>\n                </Columns.Column>\n                <Columns.Column>\n                  <Review></Review>\n                </Columns.Column>\n                <Columns.Column>\n                  <Review></Review>\n                </Columns.Column>\n              </Columns>\n            </div>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n};\n\nWelcome = connect(mapStateToProps, actions)(Welcome);\n\nexport default Welcome;\n","import React from \"react\";\n\nconst TextField = React.forwardRef(({ placeholder }, ref) => {\n  return (\n    <input\n      ref={ref}\n      type=\"text\"\n      className=\"search__field\"\n      id=\"search__field\"\n      placeholder={placeholder}\n    />\n  );\n});\n\nexport default TextField;\n","import React, { useEffect } from \"react\";\nimport TextField from \"./TextField\";\nconst Search = ({ searchProduct }) => {\n  const inputEl = React.createRef();\n  useEffect(() => {\n    const subscription = searchProduct();\n    return () => subscription.unsubscribe();\n  }, []);\n  return (\n    <form className=\"search\">\n      <TextField\n        placeholder=\"Search over 1,000,000 products...\"\n        ref={inputEl}\n      />\n    </form>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Like = ({ product, clearCommands }) => {\n  return (\n    <li>\n      <Link\n        className=\"likes__link\"\n        to={\"/home/\" + product.category.title + \"#\" + product.id}\n        onClick={() => clearCommands()}\n      >\n        <figure className=\"likes__fig\">\n          <img src={product.image} alt={product.description} />\n        </figure>\n        <div className=\"likes__data\">\n          <h4 className=\"likes__name\">{product.title}</h4>\n          <p className=\"likes__author\">{product.company.title}</p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default Like;\n","import React, { useEffect } from \"react\";\nimport icons from \"../../../assets/img/icons.svg\";\nimport Like from \"./Like\";\nimport { useAuthenticated } from \"customHooks\";\n\nimport { getUser } from \"utils/localStorageHelpers\";\n\nconst Likes = ({\n  likedProducts,\n  receiveUser,\n  getLikedProducts,\n  fetchProduct,\n  clearCommands,\n}) => {\n  const authenticated = useAuthenticated();\n  useEffect(() => {\n    if (!authenticated) {\n      const user = getUser();\n      if (user.email) {\n        receiveUser({ data: user });\n        getLikedProducts();\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"likes\">\n      <div className=\"likes__field\">\n        <svg className=\"likes__icon\">\n          <use href={icons + \"#icon-heart\"}></use>\n        </svg>\n      </div>\n      <div className=\"likes__panel\">\n        <ul className=\"likes__list\">\n          {likedProducts &&\n            likedProducts.map((product) => (\n              <Like\n                product={product.details}\n                fetchProduct={fetchProduct}\n                key={product.details.id}\n                clearCommands={clearCommands}\n              />\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Likes;\n","import React from \"react\";\n\nconst ErrorsContainer = ({ errors }) => {\n  const keys = Object.keys(errors);\n  return (\n    <div className=\"errors__container\">\n      {errors &&\n        keys.map((key, i) => (\n          <li key={i}>\n            The {key} is {errors[key]}\n          </li>\n        ))}\n    </div>\n  );\n};\n\nexport default ErrorsContainer;\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions/userActions\";\nimport {\n  ButtonToolbar,\n  ControlLabel,\n  FormGroup,\n  Form,\n  Button,\n  Modal,\n} from \"rsuite\";\nimport ErrorsContainer from \"./ErrorsContainer\";\n\nlet UserPasswordForm = ({ updatePassword, closeModal }) => {\n  const formik = useFormik({\n    initialValues: {\n      old_password: \"\",\n      password: \"\",\n      confirm: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      const isSure = window.confirm(\n        \"Are you sure you want to perceed with this action ?\"\n      );\n\n      if (isSure) {\n        updatePassword(values.old_password, values.password, values.confirm);\n        closeModal();\n      }\n    },\n  });\n\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <Form\n        layout=\"vertical\"\n        onSubmit={formik.handleSubmit}\n        style={{ marginTop: \"5%\" }}\n      >\n        <FormGroup>\n          <ControlLabel></ControlLabel>\n\n          <TextField\n            autoComplete=\"password\"\n            name=\"old_password\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            id=\"old_password\"\n            type=\"password\"\n            label=\"Old password\"\n            onChange={formik.handleChange}\n            value={formik.values.old_password}\n          />\n        </FormGroup>\n        <FormGroup>\n          <TextField\n            autoComplete=\"password\"\n            name=\"password\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            id=\"password\"\n            type=\"password\"\n            label=\"New password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            id=\"confirm\"\n            label=\"Confirm password\"\n            type=\"password\"\n            name=\"confirm\"\n            onChange={formik.handleChange}\n            value={formik.values.confirm}\n          />\n        </FormGroup>\n        <FormGroup>\n          <ButtonToolbar>\n            <Button appearance=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </ButtonToolbar>\n        </FormGroup>\n      </Form>\n    </>\n  );\n};\n\nUserPasswordForm = connect(null, actions)(UserPasswordForm);\n\nconst UserPasswordModal = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ButtonToolbar>\n        <Button appearance=\"link\" onClick={() => setShow(true)}>\n          Change password\n        </Button>\n      </ButtonToolbar>\n\n      <Modal size=\"xs\" show={show} onHide={() => setShow(false)}>\n        <Modal.Header>\n          <Modal.Title>Edit Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <UserPasswordForm closeModal={() => setShow(false)} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => setShow(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserPasswordModal;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.old_password) {\n    errors.old_password = \"Required\";\n  } else if (values.old_password.length > 15) {\n    errors.old_password = \"15 characters or less\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  if (values.password !== values.confirm) {\n    errors.password = \"Not matching\";\n  }\n  return errors;\n};\n","import { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n  Modal,\n  Button,\n  ButtonToolbar,\n  Avatar,\n  FormGroup,\n  ControlLabel,\n  Form,\n} from \"rsuite\";\n\nimport * as selectors from \"../store/reducers\";\nimport * as actions from \"../store/actions/userActions\";\nimport { useFormik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport UserPasswordModal from \"./UserPasswordModal\";\nimport ErrorsContainer from \"./ErrorsContainer\";\n\nconst mapStateToProps = (state) => ({\n  currentUser: selectors.getCurrentUser(state),\n});\n\nlet UserInformationForm = ({\n  currentUser,\n  updateUserInformation,\n  closeModal,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: currentUser.name,\n      email: currentUser.email,\n      phone: currentUser.phone,\n      address: currentUser.address,\n    },\n    validate,\n    onSubmit: (values) => {\n      const isSure = window.confirm(\n        \"Are you sure you want to perceed with this action ?\"\n      );\n\n      if (isSure) {\n        updateUserInformation({\n          name: values.firstName,\n          email: values.email,\n          phone: values.phone,\n          address: values.address,\n        });\n        closeModal();\n      }\n    },\n  });\n\n  if (currentUser) {\n    return (\n      <>\n        {Object.keys(formik.errors).length !== 0 && (\n          <ErrorsContainer errors={formik.errors} />\n        )}\n        <Form\n          layout=\"vertical\"\n          onSubmit={formik.handleSubmit}\n          style={{ marginTop: \"5%\" }}\n          fluid\n        >\n          <FormGroup>\n            <ControlLabel></ControlLabel>\n            <TextField\n              autoComplete=\"fname\"\n              name=\"firstName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First Name\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.firstName}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone number\"\n              name=\"phone\"\n              autoComplete=\"phone\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"address\"\n              label=\"Address\"\n              name=\"address\"\n              autoComplete=\"address\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.address}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ButtonToolbar>\n              <Button appearance=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n              <UserPasswordModal />\n            </ButtonToolbar>\n          </FormGroup>\n        </Form>\n      </>\n    );\n  }\n  return null;\n};\n\nUserInformationForm = connect(mapStateToProps, actions)(UserInformationForm);\n\nconst UserModal = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ButtonToolbar>\n        <Avatar\n          onClick={() => setShow(true)}\n          circle\n          size=\"md\"\n          src=\"https://lorempixel.com/640/480/?32997\"\n        />\n      </ButtonToolbar>\n\n      <Modal size=\"sm\" show={show} onHide={() => setShow(false)}>\n        <Modal.Header>\n          <Modal.Title>User informations</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <UserInformationForm closeModal={() => setShow(false)} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => setShow(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\nexport default UserModal;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (values.firstName.length > 15) {\n    errors.firstName = \"15 characters or less\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n  if (!values.phone) {\n    errors.phone = \"Required\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport Ingredient from \"./Ingredient\";\nimport icons from \"../../../assets/img/icons.svg\";\nimport { useFormik } from \"formik\";\nimport ErrorsContainer from \"components/ErrorsContainer\";\n\nlet maxQuantity;\nconst Ingredients = ({\n  ingredients,\n  product,\n  addToShoppingList,\n  fetchProduct,\n  removeIngredient,\n}) => {\n  maxQuantity = product.quantity;\n  const formik = useFormik({\n    initialValues: {\n      unit: 1,\n    },\n    validate,\n  });\n\n  if (ingredients) {\n    return (\n      <>\n        <div className=\"recipe__ingredients\">\n          {\" \"}\n          <span className=\"shopping__count\">\n            <input\n              type=\"number\"\n              value={formik.values.unit}\n              id=\"unit\"\n              name=\"unit\"\n              onChange={formik.handleChange}\n              placeholder=\"1\"\n              max={product.quantity}\n              min=\"1\"\n            />\n          </span>\n          <ul className=\"recipe__ingredient-list\">\n            {ingredients.map((ingredient, i) => (\n              <Ingredient\n                ingredient={ingredient}\n                removeIngredient={removeIngredient}\n                product={product}\n                key={i}\n              />\n            ))}\n          </ul>\n          {Object.keys(formik.errors).length !== 0 && (\n            <ErrorsContainer errors={formik.errors} />\n          )}\n          {Object.keys(formik.errors).length === 0 && (\n            <button\n              className=\"btn-small recipe__btn\"\n              onClick={() => {\n                addToShoppingList(product, formik.values.unit);\n                fetchProduct(product.id);\n              }}\n            >\n              <svg className=\"search__icon\">\n                <use href={icons + \"#icon-shopping-cart\"}></use>\n              </svg>\n              <span>Add to shopping list</span>\n            </button>\n          )}\n        </div>\n      </>\n    );\n  }\n  return <p>Cannot find product</p>;\n};\n\nexport default Ingredients;\nconst validate = (values) => {\n  const errors = {};\n  if (values.unit <= 0) {\n    errors.unit = \"bigger than 1\";\n  } else if (maxQuantity && values.unit > maxQuantity) {\n    errors.unit = \"more than the product quantity\";\n  }\n  return errors;\n};\n","import React, { useEffect } from \"react\";\nimport logo from \"../../../assets/img/logo.png\";\nimport Search from \"./Search\";\nimport Likes from \"./LikesList\";\nimport Logo from \"./Logo\";\n\nimport { connect } from \"react-redux\";\nimport {\n  getLikedProducts,\n  getIsFetchingLike,\n  getNotifications,\n} from \"store/reducers\";\nimport * as actions from \"../../../store/actions/userActions\";\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\nimport Button from \"components/Button\";\nimport { useAuthenticated } from \"customHooks\";\nimport { Notification } from \"rsuite\";\n\nimport UserModal from \"components/UserInformationModal\";\n\nconst mapStateToProps = (state) => {\n  return {\n    likedProducts: getLikedProducts(state),\n    isFetching: getIsFetchingLike(state),\n    notifications: getNotifications(state),\n  };\n};\n\nlet Header = ({\n  getLikedProducts,\n  likedProducts,\n  fetchProduct,\n  searchProduct,\n  clearSearchResults,\n  receiveUser,\n  getCommands,\n  clearCommands,\n  notifications,\n  logout,\n}) => {\n  const { category } = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const isAuthenticated = useAuthenticated();\n\n  useEffect(() => {\n    if (notifications) {\n      notifications.map((notification) => {\n        Notification.info({\n          title: \"Notification\",\n          placement: \"bottomStart\",\n          duration: 3000,\n          description: notification,\n        });\n      });\n    }\n  }, [notifications]);\n  return (\n    <header className=\"header\">\n      <Logo\n        logo={logo}\n        clearSearchResults={clearSearchResults}\n        clearCommands={clearCommands}\n      />\n      {category && <Search searchProduct={searchProduct} />}\n      {isAuthenticated && category && (\n        <Likes\n          getLikedProducts={getLikedProducts}\n          likedProducts={likedProducts}\n          fetchProduct={fetchProduct}\n          receiveUser={receiveUser}\n          clearCommands={clearCommands}\n        />\n      )}\n      {isAuthenticated && <UserModal />}\n      {isAuthenticated && category && (\n        <Button\n          handleClick={() => {\n            getCommands();\n            if (clearSearchResults) {\n              clearSearchResults();\n            }\n          }}\n        >\n          {\" \"}\n          My commands\n        </Button>\n      )}\n      {location.pathname === \"/\" && <Button>Login</Button>}\n      {isAuthenticated && (\n        <Button\n          handleClick={() => {\n            logout(history);\n          }}\n        >\n          Logout\n        </Button>\n      )}\n    </header>\n  );\n};\n\nHeader = connect(mapStateToProps, actions)(Header);\n\nexport default Header;\n","import React from \"react\";\nconst PreviousPageButton = ({\n  icons,\n  clickHandler,\n  pageNumber,\n  isPrevious,\n}) => {\n  return (\n    <button\n      className={\n        isPrevious\n          ? \"btn-inline results__btn--prev\"\n          : \"btn-inline results__btn--next\"\n      }\n      onClick={() => {\n        clickHandler();\n      }}\n    >\n      <svg className=\"search__icon\">\n        <use\n          href={\n            isPrevious\n              ? icons + \"#icon-triangle-left\"\n              : icons + \"#icon-triangle-right\"\n          }\n        ></use>\n      </svg>\n      <span>Page {pageNumber}</span>\n    </button>\n  );\n};\n\nexport default PreviousPageButton;\n","import React from \"react\";\nimport icons from \"assets/img/icons.svg\";\nimport { getPaginationData, getSearchResults } from \"store/reducers\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions/userActions\";\nimport { useParams } from \"react-router-dom\";\nimport PaginationButton from \"./PaginationButton\";\n\nconst mapStateToProps = (state) => {\n  return {\n    pagination: getPaginationData(state),\n    searchResults: getSearchResults(state),\n  };\n};\n\nlet Pagination = ({ pagination, fetchProducts, searchResults }) => {\n  const { category } = useParams();\n  const firstPage = pagination.currentPage - 1 !== 0;\n  const lastPage = pagination.currentPage !== pagination.lastPage;\n  return (\n    <div className=\"results__pages\">\n      {!searchResults && category && firstPage && (\n        <PaginationButton\n          isPrevious={true}\n          icons={icons}\n          pageNumber={pagination.currentPage - 1 || 1}\n          clickHandler={() => fetchProducts(pagination.prevLink, category)}\n        />\n      )}\n      {!searchResults && category && lastPage && (\n        <PaginationButton\n          isPrevious={false}\n          icons={icons}\n          pageNumber={pagination.currentPage + 1 || 1}\n          clickHandler={() => fetchProducts(pagination.nextLink, category)}\n        />\n      )}\n    </div>\n  );\n};\n\nPagination = connect(mapStateToProps, actions)(Pagination);\n\nexport default Pagination;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Item = ({ product, isActive, clearSearchResults, clearCommands }) => {\n  return (\n    <li>\n      <Link\n        className={\n          isActive\n            ? \"results__link results__link--active\"\n            : \"results__link results__link\"\n        }\n        to={product.category.title + \"#\" + product.id}\n        onClick={() => {\n          /*\n            - if there is a clearSearchResults function it means we have search results\n          */\n          if (clearSearchResults) {\n            clearSearchResults();\n          }\n          if (clearCommands) {\n            clearCommands();\n          }\n        }}\n      >\n        <figure className=\"results__fig\">\n          <img src={product.image} alt={product.description} />\n        </figure>\n        <div className=\"results__data\">\n          <h4 className=\"results__name\">{product.title}</h4>\n          <p className=\"results__author\">{product.company.title}</p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Product from \"./Product\";\nconst List = ({ products, location, clearSearchResults, clearCommands }) => {\n  const currentProductId = location?.hash.replace(\"#\", \"\") ?? 1;\n  return (\n    <ul className=\"results__list\">\n      {products.map((product) => {\n        if (product.quantity > 0) {\n          return (\n            <Product\n              product={product}\n              isActive={+currentProductId === product.id}\n              key={product.id}\n              clearSearchResults={clearSearchResults}\n              clearCommands={clearCommands}\n            />\n          );\n        }\n        return null;\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n","import React, { useEffect } from \"react\";\nimport List from \"./List\";\nimport {\n  getVisibleProducts,\n  getIsFetching,\n  getErrorMessage,\n  getSearchResults,\n} from \"store/reducers\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/userActions\";\nimport { withRouter } from \"react-router-dom\";\nimport icons from \"assets/img/icons.svg\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    products: getVisibleProducts(state, ownProps.match.params.category),\n    isFetching: getIsFetching(state, ownProps.match.params.category),\n    searchResults: getSearchResults(state),\n    errorMessage: getErrorMessage(state, ownProps.match.params.category),\n  };\n};\n\nlet Products = ({\n  products,\n  isFetching,\n  errorMessage,\n  fetchProducts,\n  match,\n  location,\n  clearCommands,\n  searchResults,\n}) => {\n  useEffect(() => {\n    fetchProducts(null, match.params.category);\n  }, [match.params.category, fetchProducts]);\n  if (isFetching)\n    return (\n      <div className=\"load\">\n        <svg>\n          <use href={icons + \"#icon-cw\"}></use>\n        </svg>\n      </div>\n    );\n  if (errorMessage) return <p>there was an error while fetching</p>;\n  if (!match.params.category)\n    return <h2 className=\"heading-2\">Please select a category</h2>;\n  if (!searchResults)\n    return (\n      <List\n        products={products}\n        location={location}\n        clearCommands={clearCommands}\n      />\n    );\n  return <h2 className=\"heading-2\">Please select a product</h2>;\n};\n\nProducts = withRouter(connect(mapStateToProps, actions)(Products));\n\nexport default Products;\n","import React from \"react\";\nimport Pagination from \"./Pagination\";\nimport Products from \"./Products\";\n\nlet Result = () => {\n  return (\n    <div className=\"results\">\n      <Products />\n      <Pagination />\n    </div>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\n\nconst Figure = ({ product }) => {\n  return (\n    <figure className=\"recipe__fig\">\n      <img src={product.image} alt={product.name} className=\"recipe__img\" />\n      <h1 className=\"recipe__title\">\n        <span>{product.description}</span>\n      </h1>\n    </figure>\n  );\n};\n\nexport default Figure;\n","import React from \"react\";\nimport icons from \"assets/img/icons.svg\";\nimport debounce from \"lodash/debounce\";\nconst LikeButton = ({ clickHandler, isLiked }) => {\n  return (\n    <button className=\"recipe__love\" onClick={() => clickHandler()}>\n      {\n        <svg className=\"header__likes\">\n          <use\n            href={\n              isLiked ? icons + \"#icon-heart\" : icons + \"#icon-heart-outlined\"\n            }\n          ></use>\n        </svg>\n      }\n    </button>\n  );\n};\n\nexport default LikeButton;\n","import React from \"react\";\nimport icons from \"assets/img/icons.svg\";\n\nconst LikesInfo = ({ likes }) => {\n  return (\n    <div className=\"recipe__info-buttons\">\n      {likes &&\n        likes.map((_, i) => {\n          if (i >= 5) return null;\n          return (\n            <React.Fragment key={i}>\n              <button className=\"btn-tiny\">\n                <svg>\n                  <use href={icons + \"#icon-heart\"}></use>\n                </svg>\n              </button>\n            </React.Fragment>\n          );\n        })}\n      <button className=\"btn-tiny\">({likes && likes.length})</button>\n    </div>\n  );\n};\n\nexport default LikesInfo;\n","import React from \"react\";\nimport icons from \"assets/img/icons.svg\";\nimport LikesInfo from \"./LikesInfo\";\nconst RecipeInfo = ({ likes }) => {\n  return <div className=\"recipe__info\">{<LikesInfo likes={likes} />}</div>;\n};\n\nexport default RecipeInfo;\n","import React from \"react\";\nimport icons from \"../../../assets/img/icons.svg\";\nimport LikeButton from \"./LikeButton\";\nimport RecipeInfo from \"./RecipeInfo\";\n\nconst RecipeDetails = ({\n  product,\n  addToLikeList,\n  removeFromLikeList,\n  isLiked,\n  likes,\n  fetchProduct,\n  isFetching,\n}) => {\n  return (\n    <div className=\"recipe__details\">\n      <div className=\"recipe__info\">\n        <span className=\"recipe__info-data recipe__info-data--minutes\">\n          {product.price}\n        </span>\n        <span className=\"recipe__info-text\"> &#36;</span>\n      </div>\n      <RecipeInfo likes={likes} />\n      {\n        <LikeButton\n          clickHandler={() => {\n            if (!isLiked) {\n              addToLikeList(product.id, isLiked);\n            } else {\n              removeFromLikeList(product.id, isLiked);\n            }\n            fetchProduct(product.id);\n          }}\n          isLiked={isLiked}\n        ></LikeButton>\n      }\n    </div>\n  );\n};\n\nexport default RecipeDetails;\n","import React from \"react\";\nimport icons from \"../../../assets/img/icons.svg\";\nconst Ingredient = ({ ingredient, removeIngredient, product }) => {\n  return (\n    <li className=\"recipe__item\">\n      <button\n        className=\"btn-tiny\"\n        onClick={() => removeIngredient(ingredient, product.id)}\n      >\n        <svg className=\"recipe__icon\">\n          <use href={icons + \"#icon-circle-with-cross\"}></use>\n        </svg>\n      </button>\n      {/* <div className=\"recipe__count\">1/4</div> */}\n      <div className=\"recipe__ingredient\">\n        {/* <span className=\"recipe__unit\">cup</span> */}\n        {ingredient}\n      </div>\n      {/* <span className=\"shopping__count\">\n        <input type=\"number\" placeholder=\"1\" step=\"1\" max=\"3\" min=\"1\" />\n        <p>unit</p>\n      </span> */}\n    </li>\n  );\n};\n\nexport default Ingredient;\n","import React from \"react\";\nimport TextField from \"../header/TextField\";\nimport Button from \"components/Button\";\nconst inputRef = React.createRef();\nconst CommentSection = ({\n  addComment,\n  editComment,\n  product,\n  isEditing,\n  commentId,\n  setIsEditing,\n}) => {\n  return (\n    <form className=\"comment\" onSubmit={(e) => e.preventDefault()}>\n      <TextField placeholder=\"Do you like this product ?\" ref={inputRef} />\n      <Button\n        handleClick={() => {\n          if (isEditing) {\n            editComment(inputRef.current.value, product.id, commentId);\n            setIsEditing(false);\n          } else {\n            addComment(inputRef.current.value, product.id);\n          }\n          inputRef.current.value = \"\";\n        }}\n      >\n        Add comment\n      </Button>\n    </form>\n  );\n};\n\nexport default CommentSection;\nexport { inputRef };\n","import React from \"react\";\nimport { inputRef } from \"./CommentSection\";\n\nconst Comment = ({\n  comment,\n  currentUserId,\n  product,\n  removeComment,\n  setIsEditing,\n  setCommentId,\n}) => {\n  return (\n    <>\n      <li>\n        <a className=\"results__link results__link--active\" href=\"#\">\n          <div className=\"results__data\">\n            <h4 className=\"results__name\">{comment.client_name}</h4>\n            <p className=\"results__author\">{comment.comment}</p>\n            <span className=\"results__time\">\n              Created at: {comment.created_at}\n            </span>\n          </div>\n        </a>\n      </li>\n      {currentUserId && comment.client_id === currentUserId && (\n        <button\n          className=\"btn-options\"\n          onClick={() => {\n            const confirm = window.confirm(\n              \"are you sure you want to delete this comment ?\"\n            );\n            if (confirm) removeComment(comment.id, product.id);\n          }}\n        >\n          {\" \"}\n          Remove\n        </button>\n      )}\n      {currentUserId && comment.client_id === currentUserId && (\n        <button\n          className=\"btn-options-edit\"\n          onClick={() => {\n            inputRef.current.value = comment.comment;\n            setIsEditing(true);\n            setCommentId(comment.id);\n          }}\n        >\n          {\" \"}\n          Edit\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./Comment\";\n\nconst Comments = ({\n  comments,\n  currentUserId,\n  product,\n  removeComment,\n  setIsEditing,\n  setCommentId,\n}) => {\n  return (\n    <ul className=\"results__list\">\n      {comments &&\n        comments.map((comment, i) => (\n          <Comment\n            comment={comment}\n            product={product}\n            removeComment={removeComment}\n            currentUserId={currentUserId}\n            setIsEditing={setIsEditing}\n            setCommentId={setCommentId}\n            key={i}\n          />\n        ))}\n    </ul>\n  );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Category = ({ category }) => {\n  return (\n    <figure className=\"category__fig\">\n      <img\n        src={category.image}\n        alt={category.title}\n        className=\"category__img\"\n      />\n      <h1 className=\"category__title\">\n        <Link to={\"/home/\" + category.title}>\n          <span>{category.title}</span>\n        </Link>\n      </h1>\n    </figure>\n  );\n};\n\nexport default Category;\n","import React from \"react\";\nimport convertStringToArray from \"utils/convertStringToArray\";\n\nconst Command = ({\n  product,\n  createdAt,\n  deliveryState,\n  price,\n  description,\n  quantity,\n  commandGroupId,\n  address,\n  author,\n}) => {\n  return (\n    <>\n      <li>\n        <div className=\"results__data\">\n          {\n            <h4 className=\"results__command-id\">\n              Command id :{commandGroupId}\n            </h4>\n          }\n          <p className=\"results__author\">Author : {author.name}</p>\n          {product.map((product, i) => (\n            <React.Fragment key={i}>\n              <br />\n              <p className=\"results__author\">Product : {product.title}</p>\n              <figure className=\"category__fig\">\n                <img\n                  src={product.image}\n                  alt={product.title}\n                  className=\"category__img\"\n                />\n              </figure>\n              <p className=\"results__author\">\n                Recipe :\n                {convertStringToArray(product.recipe).map((ingredient, i) =>\n                  i === 0 ? `${ingredient}` : `,${ingredient}`\n                )}\n              </p>\n              <p className=\"results__author\">Description : {description[i]}</p>\n              <p className=\"results__author\">Quantity : {quantity[i]}</p>\n              <p className=\"results__state\">\n                Delivery state : {deliveryState[i]}\n              </p>\n              <br />\n            </React.Fragment>\n          ))}\n\n          <p className=\"results__address\">Delivery address : {address}</p>\n          <span className=\"results__time\">Created at : {createdAt}</span>\n        </div>\n      </li>\n      <br />\n    </>\n  );\n};\n\nexport default Command;\n","import React from \"react\";\nimport Command from \"./Command\";\nimport { groupItemsById } from \"utils\";\n\nconst CommandsList = ({ commands }) => {\n  const commandsGroupedById = groupItemsById(commands);\n  return (\n    <ul className=\"results__list\">\n      {commandsGroupedById.map((command, i) => {\n        if (command.quantitySum > 0) {\n          return (\n            <Command\n              product={command.product}\n              createdAt={command.createdAt}\n              deliveryState={command.delivery_state}\n              address={command.address}\n              price={command.price}\n              description={command.description}\n              quantity={command.quantity}\n              commandGroupId={command.commandGroupId}\n              author={command.client}\n              key={i}\n            />\n          );\n        }\n        return null;\n      })}\n    </ul>\n  );\n};\n\nexport default CommandsList;\n","import React, { useEffect, useState } from \"react\";\nimport Figure from \"./Figure\";\nimport Details from \"./Details\";\nimport Ingredients from \"./IngredientsList\";\nimport * as selectors from \"store/reducers\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Comments from \"./CommentsList.jsx\";\nimport Category from \"./Category\";\nimport * as actions from \"store/actions/userActions\";\nimport icons from \"assets/img/icons.svg\";\nimport List from \"../results/List\";\nimport { useAuthenticated } from \"customHooks\";\nimport CommentSection from \"./CommentSection\";\nimport CommandsList from \"../shopping/CommandsList\";\nimport { getUser } from \"utils/localStorageHelpers\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    product: selectors.getVisibleProduct(\n      state,\n      ownProps.location.hash.replace(\"#\", \"\")\n    ),\n    isLiked: selectors.getIsProductLiked(\n      state,\n      ownProps.location.hash.replace(\"#\", \"\")\n    ),\n    likes: selectors.getLikes(state, ownProps.location.hash.replace(\"#\", \"\")),\n    comments: selectors.getProductComments(\n      state,\n      ownProps.location.hash.replace(\"#\", \"\")\n    ),\n    searchResults: selectors.getSearchResults(state),\n    commands: selectors.getCommands(state),\n    isSearching: selectors.getIsSearching(state),\n    isFetching: selectors.getIsFetching(state, ownProps.match.params.category),\n    isFetchingCommands: selectors.getIsFetchingCommands(state),\n    ingredients: selectors.getProductIngredients(\n      state,\n      ownProps.location.hash.replace(\"#\", \"\")\n    ),\n    categories: selectors.getCategories(state),\n    currentUser: selectors.getCurrentUser(state),\n    isFetchingLike: selectors.getIsFetchingLike(state),\n  };\n};\n\nlet Product = ({\n  product,\n  isLiked,\n  likes,\n  ingredients,\n  comments,\n  categories,\n  match,\n  isSearching,\n  searchResults,\n  fetchCategories,\n  addToShoppingList,\n  fetchProduct,\n  removeIngredient,\n  addToLikeList,\n  removeFromLikeList,\n  clearSearchResults,\n  addComment,\n  currentUser,\n  removeComment,\n  editComment,\n  isFetchingCommands,\n  commands,\n  receiveUser,\n  isFetchingLike,\n}) => {\n  const isAuthenticated = useAuthenticated();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      const user = getUser();\n      if (user) {\n        receiveUser({ data: user });\n      }\n    }\n  }, [isAuthenticated, receiveUser]);\n\n  useEffect(() => {\n    fetchCategories();\n  }, [fetchCategories]);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [commentId, setCommentId] = useState(null);\n\n  if (isSearching)\n    return (\n      <div className=\"load\">\n        <svg>\n          <use href={icons + \"#icon-cw\"}></use>\n        </svg>\n      </div>\n    );\n\n  if (isFetchingCommands) {\n    return (\n      <div className=\"load\">\n        <svg>\n          <use href={icons + \"#icon-cw\"}></use>\n        </svg>\n      </div>\n    );\n  }\n\n  if (searchResults) {\n    return (\n      <List\n        clearSearchResults={clearSearchResults}\n        products={searchResults}\n      ></List>\n    );\n  }\n\n  if (commands.length > 0) {\n    return <CommandsList commands={commands} />;\n  }\n\n  if (match.params.category && product === undefined) {\n    return (\n      <h2 className=\"heading-2\" style={{ marginTop: \"50%\" }}>\n        Please select a product\n      </h2>\n    );\n  }\n\n  if (match.params.category) {\n    return (\n      <div className=\"recipe\">\n        <Figure product={product} />\n        <Details\n          product={product}\n          isFetching={isFetchingLike}\n          addToLikeList={addToLikeList}\n          removeFromLikeList={removeFromLikeList}\n          isLiked={isLiked}\n          fetchProduct={fetchProduct}\n          likes={likes}\n        />\n        <Ingredients\n          ingredients={ingredients}\n          product={product}\n          addToShoppingList={addToShoppingList}\n          fetchProduct={fetchProduct}\n          removeIngredient={removeIngredient}\n        />\n        <Comments\n          comments={comments}\n          currentUserId={currentUser.id}\n          product={product}\n          removeComment={removeComment}\n          setIsEditing={(val) => setIsEditing(val)}\n          setCommentId={(val) => setCommentId(val)}\n        />\n        {isAuthenticated && (\n          <CommentSection\n            addComment={addComment}\n            editComment={editComment}\n            product={product}\n            isEditing={isEditing}\n            commentId={commentId}\n            setIsEditing={(val) => setIsEditing(val)}\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"category\">\n      {categories.map((category) => (\n        <Category category={category} key={category.id} />\n      ))}\n    </div>\n  );\n};\n\nProduct = withRouter(connect(mapStateToProps, actions)(Product));\n\nexport default Product;\n","import React from \"react\";\nimport icons from \"../../../assets/img/icons.svg\";\n\nconst Product = ({ clickHandler, product }) => {\n  return (\n    <>\n      <li className=\"shopping__item\">\n        <p className=\"shopping__description\">{product.title}</p>\n        <button\n          className=\"shopping__delete btn-tiny\"\n          onClick={() => {\n            clickHandler();\n          }}\n        >\n          <svg>\n            <use href={icons + \"#icon-circle-with-cross\"}></use>\n          </svg>\n        </button>\n      </li>\n    </>\n  );\n};\n\nexport default Product;\n","import React, { useEffect } from \"react\";\nimport Product from \"./Product\";\n\nlet List = ({\n  shoppingList,\n  getShoppingList,\n  removeFromShoppingList,\n  setErrors,\n}) => {\n  useEffect(() => {\n    getShoppingList();\n  }, []);\n  return (\n    <ul className=\"shopping__list\">\n      {shoppingList &&\n        shoppingList.map((product) => (\n          <Product\n            product={product.details}\n            setErrors={setErrors}\n            key={product.key}\n            clickHandler={() => removeFromShoppingList(product.key)}\n          />\n        ))}\n    </ul>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport List from \"./List\";\nimport Button from \"components/Button\";\nimport { getShoppingList } from \"../../../store/reducers\";\nimport * as actions from \"../../../store/actions/userActions\";\nimport { connect } from \"react-redux\";\nimport icons from \"assets/img/icons.svg\";\nimport { useAuthenticated } from \"customHooks\";\n\nconst mapStateToProps = (state) => {\n  return {\n    shoppingList: getShoppingList(state),\n  };\n};\nlet Shopping = ({\n  shoppingList,\n  getShoppingList,\n  removeFromShoppingList,\n  addCommand,\n}) => {\n  const isAuthenticated = useAuthenticated();\n  return (\n    <div className=\"shopping\">\n      <h2 className=\"heading-2\">My Shopping List</h2>\n      <List\n        shoppingList={shoppingList}\n        getShoppingList={getShoppingList}\n        removeFromShoppingList={removeFromShoppingList}\n      />\n      {isAuthenticated && shoppingList && shoppingList.length !== 0 && (\n        <Button\n          icon={icons + \"#icon-check\"}\n          handleClick={() => {\n            const address = prompt(\"Please enter your address\");\n            addCommand(shoppingList, address);\n          }}\n        >\n          Confirm order\n        </Button>\n      )}\n    </div>\n  );\n};\n\nShopping = connect(mapStateToProps, actions)(Shopping);\nexport default Shopping;\n","import React from \"react\";\nimport \"./index.css\";\nimport Header from \"components/homepageComponents/header\";\nimport Result from \"components/homepageComponents/results\";\nimport Recipe from \"components/homepageComponents/recipe\";\nimport Shopping from \"components/homepageComponents/shopping\";\n\nconst Home = () => {\n  return (\n    <div className=\"homepage-container\">\n      <Header />\n      <Result />\n      <Recipe />\n      <Shopping />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"rsuite\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ErrorsContainer from \"components/ErrorsContainer\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/userActions\";\n\nlet LoginForm = ({ classes, login }) => {\n  const [spinning, setSpinning] = useState(false);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      setSpinning(true);\n      login(values, history);\n    },\n  });\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <form onSubmit={formik.handleSubmit} className={classes.form} noValidate>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        <Button type=\"submit\" variant=\"contained\" appearance=\"primary\">\n          Sign in\n        </Button>\n        <Grid container style={{ marginTop: \"5%\" }}>\n          <Grid item>\n            <Link to=\"/register\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n        <Box mt={5}></Box>\n      </form>\n    </>\n  );\n};\n\nLoginForm = connect(null, actions)(LoginForm);\n\nexport default LoginForm;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length > 10) {\n    errors.password = \"Must be 10 characters or more\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n\n  return errors;\n};\n","import React, { useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LoginForm from \"components/LoginForm\";\nimport { useAuthenticated, useAuthenticatedCompany } from \"customHooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getNotifications } from \"store/reducers/\";\nimport { Notification } from \"rsuite\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: getNotifications(state),\n  };\n};\n\nlet SignInSide = ({ notifications }) => {\n  useEffect(() => {\n    if (notifications) {\n      notifications.map((notification) => {\n        Notification.info({\n          title: \"Notification\",\n          placement: \"bottomStart\",\n          duration: 3000,\n          description: notification,\n        });\n      });\n    }\n  }, [notifications]);\n  const classes = useStyles();\n  const isAuthenticated = useAuthenticated();\n  if (!isAuthenticated) {\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <LoginForm classes={classes} />\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n  return null;\n};\n\nSignInSide = connect(mapStateToProps)(SignInSide);\n\nexport default SignInSide;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport { Button } from \"rsuite\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"store/actions/userActions\";\nimport ErrorsContainer from \"./ErrorsContainer\";\nimport SignUp from \"views/Register\";\nimport { connect } from \"react-redux\";\nimport { getNotifications } from \"store/reducers\";\nimport { Notification } from \"rsuite\";\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: getNotifications(state),\n  };\n};\n\nlet SignUpForm = ({ classes, register, notifications }) => {\n  const [spinning, setSpinning] = useState(false);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      setSpinning(true);\n      register(values, history);\n    },\n  });\n  useEffect(() => {\n    if (notifications) {\n      notifications.map((notification) => {\n        Notification.info({\n          title: \"Notification\",\n          placement: \"bottomStart\",\n          duration: 3000,\n          description: notification,\n        });\n      });\n    }\n  }, [notifications]);\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <form onSubmit={formik.handleSubmit} className={classes.form} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              autoComplete=\"fname\"\n              name=\"firstName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First Name\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.firstName}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone Number\"\n              name=\"phone\"\n              autoComplete=\"pnumber\"\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Address\"\n              name=\"address\"\n              autoComplete=\"address\"\n              onChange={formik.handleChange}\n              value={formik.values.address}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={formik.handleChange}\n              value={formik.values.password}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"passwordConfirmation\"\n              label=\"Password confirmation\"\n              type=\"password\"\n              id=\"passwordConfirmation\"\n              autoComplete=\"current-password\"\n              onChange={formik.handleChange}\n              value={formik.values.passwordConfirmation}\n            />\n          </Grid>\n          <Grid item xs={12}></Grid>\n        </Grid>\n        <Button type=\"submit\" variant=\"contained\" appearance=\"primary\">\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to=\"/login\" variant=\"body2\">\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\nSignUpForm = connect(mapStateToProps, actions)(SignUpForm);\n\nexport default SignUpForm;\nconst validate = (values) => {\n  const errors = {};\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (values.firstName.length > 15) {\n    errors.firstName = \"15 characters or less\";\n  }\n\n  if (!values.phone) {\n    errors.phone = \"Required\";\n  } else if (values.phone.length !== 10) {\n    errors.phone = \"10 digits\";\n  } else if (isNaN(values.phone)) {\n    errors.phone = \"not a number\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length > 20) {\n    errors.password = \"20 characters or less\";\n  }\n\n  if (!values.passwordConfirmation) {\n    errors.passwordConfirmation = \"Required\";\n  } else if (values.passwordConfirmation !== values.password) {\n    errors.passwordConfirmation = \"doesn't match\";\n  }\n\n  if (!values.address) {\n    errors.password = \"Required\";\n  } else if (values.address.length < 20) {\n    errors.email = \"20 characters or less\";\n  }\n\n  return errors;\n};\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SignUpForm from \"components/SignUpForm\";\nimport { useAuthenticated } from \"customHooks\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const isAuthenticated = useAuthenticated();\n  if (!isAuthenticated) {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <SignUpForm classes={classes} />\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}\n","import { normalize } from \"normalizr\";\nimport * as companyServices from \"services/company\";\nimport * as ProductServices from \"services/product\";\nimport {\n  addNotification,\n  fetchProductsFailure,\n  receiveProducts,\n} from \"store/actions/userActions\";\nimport { arrayOfProducts, product } from \"utils/schema\";\n\nconst receiveRunoutProducts = (response) => {\n  return {\n    type: \"FETCH_RUNOUT_PRODUCT\",\n    response: normalize(response.data.data, arrayOfProducts),\n  };\n};\n\nconst login = (credentials, history) => (dispatch) => {\n  dispatch({ type: \"COMPANY_LOGIN_REQUEST\" });\n  return companyServices\n    .login(credentials)\n    .then((response) => {\n      dispatch(receiveCompany(response));\n      history.push(\"/company\");\n      dispatch(addNotification(\"You're logged in\"));\n    })\n    .catch((error) =>\n      dispatch(addNotification(\"There was an error while logging in\"))\n    );\n};\n\nconst register = (credentials, history) => (dispatch) => {\n  dispatch({ type: \"COMPANY_LOGOUT_REQUEST\" });\n  return companyServices\n    .register(credentials)\n    .then((response) => {\n      dispatch({ type: \"COMPANY_REGISTER_SUCCESS\", response });\n      history.push(\"/login\");\n      dispatch(addNotification(\"Your account has been created\"));\n    })\n    .catch((error) => {\n      dispatch({ type: \"COMPANY_REGISTER_FAILURE\", message: error.message });\n      dispatch(\n        addNotification(\"There was an error while creating your account\")\n      );\n    });\n};\n\nconst logout = (history) => (dispatch) => {\n  dispatch({ type: \"COMPANY_LOGOUT_REQUEST\" });\n  return companyServices\n    .logout()\n    .then((response) => {\n      dispatch({ type: \"COMPANY_LOGOUT_SUCCESS\", response: response.data });\n      history.push(\"/\");\n      dispatch(addNotification(\"You're logged out\"));\n      window.location.reload();\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while logging out\"));\n      dispatch({ type: \"COMPANY_LOGOUT_FAILURE\", message: error.message });\n      history.push(\"/\");\n    });\n};\n\nconst receiveCompany = (response) => ({\n  type: \"COMPANY_LOGIN_SUCCESS\",\n  response: response.data,\n});\n\nconst getProducts = () => (dispatch) => {\n  return companyServices\n    .getProducts()\n    .then((response) => {\n      dispatch(receiveProducts(response));\n      dispatch(addNotification(\"Products fetched successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(fetchProductsFailure(error));\n      dispatch(\n        addNotification(\"There was an error while fetching the products\")\n      );\n    });\n};\n\nconst getCommands = () => (dispatch) => {\n  dispatch({ type: \"FETCH_COMMANDS_REQUEST\" });\n  return companyServices\n    .getCommands()\n    .then((response) => {\n      console.log(\"the commands are\", response);\n      dispatch({\n        type: \"FETCH_COMMANDS_SUCCESS\",\n        response: response.data.data,\n      });\n      dispatch(addNotification(\"Commands fetched successfuly\"));\n    })\n    .catch(() => {\n      dispatch({ type: \"FETCH_COMMANDS_FAILURE\" });\n      dispatch(\n        addNotification(\"There was an error while fetching the commands\")\n      );\n    });\n};\n\nconst productCheck = (product, isEditing) => {\n  const errors = [];\n  if (isEditing && !product.id) errors.push(\"the product id is not provided\");\n  if (!product.price && typeof price !== \"number\")\n    errors.push(\"price is not a number\");\n  if (!product.title) errors.push(\"the title is required\");\n  if (!product.quantity) errors.push(\"the quantity is required\");\n  if (!product.category) errors.push(\"the category is required\");\n  if (!product.description) errors.push(\"the description is required\");\n  if (!product.recipe) errors.push(\"the recipe is required\");\n\n  return errors;\n};\n\nconst addProduct = (product) => (dispatch) => {\n  const errors = productCheck(product, false);\n  if (errors.length !== 0) {\n    dispatch(addNotification(\"Please verify the inserted informations\"));\n    return Promise.resolve();\n  }\n  return companyServices\n    .addProduct(product)\n    .then((response) => {\n      window.location.reload();\n      dispatch(receiveProduct(response));\n      dispatch(addNotification(\"Product added successfully\"));\n    })\n    .catch((err) =>\n      addNotification(\"There was a problem while adding the product\")\n    );\n};\nconst editProduct = (product) => (dispatch) => {\n  const errors = productCheck(product, true);\n  if (errors.length !== 0) {\n    dispatch(addNotification(\"Please verify the inserted informations\"));\n    return Promise.resolve();\n  }\n  return companyServices\n    .editProduct(product)\n    .then((response) => {\n      dispatch(receiveProduct(response));\n      dispatch(addNotification(\"Product added successfully\"));\n    })\n    .catch((err) =>\n      dispatch(addNotification(\"There was a problem while adding the product\"))\n    );\n};\nconst removeProduct = (product) => (dispatch) => {\n  return companyServices\n    .removeProduct(product)\n    .then((response) => {\n      window.location.reload();\n      dispatch(addNotification(\"Product added successfully\"));\n    })\n    .catch((err) =>\n      dispatch(addNotification(\"There was a problem while adding the product\"))\n    );\n};\nconst addCommand = (command) => (dispatch) => {\n  return companyServices\n    .addCommand(command)\n    .then((response) => {\n      dispatch(addNotification(\"command added successfully\"));\n    })\n    .catch((err) =>\n      dispatch(addNotification(\"There was a problem while adding the command\"))\n    );\n};\nconst editCommand = (command) => (dispatch) => {\n  return companyServices\n    .editCommand(command)\n    .then((response) => {\n      dispatch(addNotification(\"command added successfully\"));\n      window.location.reload();\n    })\n    .catch((err) =>\n      dispatch(addNotification(\"There was a problem while adding the command\"))\n    );\n};\nconst removeCommand = (command) => (dispatch) => {\n  return companyServices\n    .removeCommand(command)\n    .then((response) => {\n      window.location.reload();\n      dispatch(addNotification(\"command added successfully\"));\n    })\n    .catch((err) =>\n      dispatch(addNotification(\"There was a problem while adding the command\"))\n    );\n};\n\nconst receiveProduct = (response) => {\n  return {\n    type: \"FETCH_PRODUCT_SUCCESS\",\n    response: normalize(response.data.data, product),\n  };\n};\n\nconst getRunOutProducts = () => (dispatch) => {\n  return ProductServices.getRunOutProducts()\n    .then((response) => dispatch(receiveRunoutProducts(response)))\n    .catch(() =>\n      dispatch(\n        addNotification(\"There was an error while fetching the products\")\n      )\n    );\n};\n\nconst fetchCategories = () => (dispatch) => {\n  return ProductServices.fetchCategories()\n    .then((response) => {\n      dispatch({\n        type: \"FETCH_CATEGORIES_SUCCESS\",\n        response: response.data.data,\n      });\n      dispatch(addNotification(\"Categories fetched successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(\n        addNotification(\"There was an error while fetching the categories\")\n      )\n    );\n};\n\nconst updatePassword = (oldPassword, newPassword, confirmation) => (\n  dispatch\n) => {\n  return companyServices\n    .updatePassword(oldPassword, newPassword, confirmation)\n    .then((response) => {\n      dispatch(addNotification(\"Password updated successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(\n        addNotification(\"There was an error while changing the password\")\n      );\n    });\n};\n\nconst updateCompanyInformation = (informations) => (dispatch) => {\n  return companyServices\n    .updatecompanyInformation(informations)\n    .then((response) => {\n      dispatch(receiveCompany(response.data));\n      dispatch(addNotification(\"Informations updated successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while updating profile\"));\n    });\n};\n\nexport {\n  login,\n  register,\n  logout,\n  receiveCompany,\n  getProducts,\n  getCommands,\n  getRunOutProducts,\n  addProduct,\n  removeProduct,\n  editProduct,\n  addCommand,\n  removeCommand,\n  editCommand,\n  fetchCategories,\n  updatePassword,\n  updateCompanyInformation,\n};\n","import apiClient from \"services/apiClient\";\n\nconst login = ({ email, password }) => {\n  return apiClient.post(\"companies/login\", JSON.stringify({ email, password }));\n};\n\nconst register = ({\n  firstName,\n  phone,\n  email,\n  address,\n  description,\n  password,\n  passwordConfirmation,\n}) => {\n  return apiClient.post(\n    \"companies/register\",\n    JSON.stringify({\n      title: firstName,\n      phone,\n      address,\n      email,\n      description,\n      password,\n      password_confirmation: passwordConfirmation,\n    })\n  );\n};\n\nconst logout = () => {\n  return apiClient.post(\"companies/logout\");\n};\n\nconst getLikedProducts = () => {\n  return apiClient.get(\"companies/profile\");\n};\n\nconst updatePassword = (oldPassword, newPassword, confirmation) => {\n  return apiClient.patch(\n    \"/companies/password\",\n    JSON.stringify({\n      old_password: oldPassword,\n      new_password: newPassword,\n      new_password_confirmation: confirmation,\n    })\n  );\n};\n\nconst updatecompanyInformation = (informations) => {\n  return apiClient.patch(\"companies/profile\", JSON.stringify(informations));\n};\n\nconst getCommands = () => {\n  return apiClient.get(\"companies/commands\");\n};\n\nconst getCommand = (commandGroupId) => {\n  return apiClient.get(`companies/commands/${commandGroupId}`);\n};\n\nconst getProducts = () => apiClient.get(\"companies/products\");\n\nconst addProduct = (product) => {\n  const _product = {\n    title: product.title,\n    recipe: product.recipe,\n    price: product.price,\n    quantity: product.quantity,\n    category_id: product.category,\n    description: product.description,\n  };\n  console.log(\"the product is : \", _product);\n  return apiClient.post(\"companies/products\", JSON.stringify(_product));\n};\nconst editProduct = (product) => {\n  const _product = {\n    title: product.title,\n    recipe: product.recipe,\n    price: product.price,\n    quantity: product.quantity,\n    category_id: product.category,\n    description: product.description,\n  };\n  return apiClient.patch(\n    `companies/products/${product.id}`,\n    JSON.stringify(_product)\n  );\n};\nconst removeProduct = (product) => {\n  console.log(\"product to is the following : \", product);\n  return apiClient.delete(`companies/products/${product.id}`);\n};\nconst addCommand = (product) => {\n  const _product = {\n    title: product.title,\n    recipe: product.recipe,\n    price: product.price,\n    quantity: product.quantity,\n    description: product.description,\n  };\n  console.log(\"the product is : \", _product);\n  return apiClient.post(\"companies/commands\", JSON.stringify(_product));\n};\nconst editCommand = (command) => {\n  const _command = {\n    price: command.price,\n    quantity: command.quantity,\n    description: command.description,\n    address: command.address,\n    delivery_state: command.delivery_state,\n  };\n  console.log(\"edited command\", _command);\n  return apiClient.patch(\n    `companies/commands/${command.id}`,\n    JSON.stringify(_command)\n  );\n};\nconst removeCommand = (command) => {\n  console.log(\"command to remove:\", command);\n  return apiClient.delete(`companies/commands/delete/${command.id}`);\n};\n\nconst fetchCategories = () => {\n  return apiClient.get(\"/categories\");\n};\n\nexport {\n  login,\n  register,\n  logout,\n  getLikedProducts,\n  updatePassword,\n  updatecompanyInformation,\n  getCommands,\n  getCommand,\n  getProducts,\n  fetchCategories,\n  addProduct,\n  editProduct,\n  removeProduct,\n  addCommand,\n  editCommand,\n  removeCommand,\n};\n","import { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n  Modal,\n  Button,\n  ButtonToolbar,\n  FormGroup,\n  ControlLabel,\n  Form,\n} from \"rsuite\";\n\nimport * as selectors from \"store/reducers\";\nimport * as actions from \"store/actions/companyActions\";\nimport { useFormik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport ErrorsContainer from \"components/ErrorsContainer\";\n\nconst mapStateToProps = (state) => ({\n  currentCompany: selectors.getCurrentCompany(state),\n});\n\nlet CompanyInformationForm = ({\n  currentCompany,\n  updateCompanyInformation,\n  closeModal,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      title: currentCompany.title,\n      email: currentCompany.email,\n      phone: currentCompany.phone,\n      address: currentCompany.address,\n      description: currentCompany.address,\n    },\n    validate,\n    onSubmit: (values) => {\n      const isSure = window.confirm(\n        \"Are you sure you want to perceed with this action ?\"\n      );\n\n      if (isSure) {\n        updateCompanyInformation({\n          title: values.title,\n          email: values.email,\n          phone: values.phone,\n          address: values.address,\n          description: values.description,\n        });\n        closeModal();\n      }\n    },\n  });\n\n  if (currentCompany) {\n    return (\n      <>\n        {Object.keys(formik.errors).length !== 0 && (\n          <ErrorsContainer errors={formik.errors} />\n        )}\n        <Form\n          layout=\"vertical\"\n          onSubmit={formik.handleSubmit}\n          style={{ marginTop: \"5%\" }}\n          fluid\n        >\n          <FormGroup>\n            <ControlLabel></ControlLabel>\n            <TextField\n              autoComplete=\"fname\"\n              name=\"title\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"title\"\n              label=\"title\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.title}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone number\"\n              name=\"phone\"\n              autoComplete=\"phone\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </FormGroup>\n          <FormGroup>\n            <TextField\n              autoComplete=\"fname\"\n              name=\"description\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"description\"\n              label=\"Description\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.description}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"address\"\n              label=\"Address\"\n              name=\"address\"\n              autoComplete=\"address\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.address}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ButtonToolbar>\n              <Button appearance=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </ButtonToolbar>\n          </FormGroup>\n        </Form>\n      </>\n    );\n  }\n  return null;\n};\n\nCompanyInformationForm = connect(\n  mapStateToProps,\n  actions\n)(CompanyInformationForm);\n\nconst UserModal = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ButtonToolbar>\n        <Button onClick={() => setShow(true)}>Edit informations</Button>\n      </ButtonToolbar>\n\n      <Modal size=\"sm\" show={show} onHide={() => setShow(false)}>\n        <Modal.Header>\n          <Modal.Title>Company informations</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <CompanyInformationForm closeModal={() => setShow(false)} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => setShow(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\nexport default UserModal;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Required\";\n  } else if (values.title.length > 25) {\n    errors.title = \"25 characters or less\";\n  }\n  if (!values.description) {\n    errors.description = \"Required\";\n  } else if (values.description.length >= 40) {\n    errors.description = \"40 characters\";\n  }\n  if (!values.phone) {\n    errors.phone = \"Required\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n\n  return errors;\n};\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions/companyActions\";\nimport {\n  ButtonToolbar,\n  ControlLabel,\n  FormGroup,\n  Form,\n  Button,\n  Modal,\n} from \"rsuite\";\nimport ErrorsContainer from \"components/ErrorsContainer\";\n\nlet CompanyPasswordForm = ({ updatePassword, closeModal }) => {\n  const formik = useFormik({\n    initialValues: {\n      old_password: \"\",\n      password: \"\",\n      confirm: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      const isSure = window.confirm(\n        \"Are you sure you want to perceed with this action ?\"\n      );\n\n      if (isSure) {\n        updatePassword(values.old_password, values.password, values.confirm);\n        closeModal();\n      }\n    },\n  });\n\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <Form\n        layout=\"vertical\"\n        onSubmit={formik.handleSubmit}\n        style={{ marginTop: \"5%\" }}\n      >\n        <FormGroup>\n          <ControlLabel></ControlLabel>\n\n          <TextField\n            autoComplete=\"password\"\n            name=\"old_password\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            id=\"old_password\"\n            type=\"password\"\n            label=\"Old password\"\n            onChange={formik.handleChange}\n            value={formik.values.old_password}\n          />\n        </FormGroup>\n        <FormGroup>\n          <TextField\n            autoComplete=\"password\"\n            name=\"password\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            id=\"password\"\n            type=\"password\"\n            label=\"New password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            id=\"confirm\"\n            label=\"Confirm password\"\n            type=\"password\"\n            name=\"confirm\"\n            onChange={formik.handleChange}\n            value={formik.values.confirm}\n          />\n        </FormGroup>\n        <FormGroup>\n          <ButtonToolbar>\n            <Button appearance=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </ButtonToolbar>\n        </FormGroup>\n      </Form>\n    </>\n  );\n};\n\nCompanyPasswordForm = connect(null, actions)(CompanyPasswordForm);\n\nconst UserPasswordModal = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ButtonToolbar>\n        <Button appearance=\"link\" onClick={() => setShow(true)}>\n          Change password\n        </Button>\n      </ButtonToolbar>\n\n      <Modal size=\"xs\" show={show} onHide={() => setShow(false)}>\n        <Modal.Header>\n          <Modal.Title>Edit Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <CompanyPasswordForm closeModal={() => setShow(false)} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => setShow(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserPasswordModal;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.old_password) {\n    errors.old_password = \"Required\";\n  } else if (values.old_password.length > 15) {\n    errors.old_password = \"15 characters or less\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  if (values.password !== values.confirm) {\n    errors.password = \"Not matching\";\n  }\n  return errors;\n};\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions/companyActions\";\nimport { Icon } from \"rsuite\";\nimport { ButtonToolbar, FormGroup, Form, Button, Modal } from \"rsuite\";\nimport ErrorsContainer from \"components/ErrorsContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport CompanyInformationModal from \"./CompanyInformationModal\";\nimport CompanyPasswordModal from \"./CompanyPasswordModal\";\n\nlet SettingsForm = ({ updatePassword, closeModal, logout }) => {\n  const history = useHistory();\n\n  return (\n    <>\n      <FormGroup>\n        <ButtonToolbar>\n          <CompanyInformationModal />\n          <CompanyPasswordModal />\n          <Button\n            appearance=\"link\"\n            onClick={() => {\n              logout(history);\n              closeModal();\n            }}\n          >\n            Logout\n          </Button>\n        </ButtonToolbar>\n      </FormGroup>\n    </>\n  );\n};\n\nSettingsForm = connect(null, actions)(SettingsForm);\n\nconst CompanySettingsModal = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ButtonToolbar>\n        <Button\n          appearance=\"primary\"\n          onClick={() => setShow(true)}\n          style={{ margin: \"10px 10px\" }}\n        >\n          settings\n        </Button>\n      </ButtonToolbar>\n\n      <Modal size=\"xs\" show={show} onHide={() => setShow(false)}>\n        <Modal.Header>\n          <Modal.Title>Comapny Informations</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <SettingsForm closeModal={() => setShow(false)} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => setShow(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default CompanySettingsModal;\n","import React from \"react\";\nimport { Dropdown, Nav, Navbar, Icon, Button } from \"rsuite\";\nimport { Link } from \"react-router-dom\";\nimport CompanySettingsModal from \"./settingsModal\";\n\nconst NavBar = () => {\n  return (\n    <Navbar>\n      <Navbar.Header>\n        <a href=\"#\" className=\"navbar-brand logo\">\n          Deliveroo\n        </a>\n      </Navbar.Header>\n      <Navbar.Body>\n        <Nav>\n          <Link to=\"/company\">\n            <Nav.Item icon={<Icon icon=\"home\" />}>Home</Nav.Item>\n          </Link>\n          <Link to=\"/company/products\">\n            <Nav.Item>Products</Nav.Item>\n          </Link>\n          <Link to=\"/company/commands\">\n            <Nav.Item>Commands</Nav.Item>\n          </Link>\n          <Link to=\"/company/stock\">\n            <Nav.Item>Stock</Nav.Item>\n          </Link>\n        </Nav>\n        <Nav pullRight>\n          <CompanySettingsModal />\n        </Nav>\n      </Navbar.Body>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Columns } from \"react-bulma-components/lib\";\nimport Card from \"react-bulma-components/lib/components/card\";\n\nconst CompanyCard = ({ title = \"commands\", data = \"16\" }) => {\n  return (\n    <Card className=\"company__card\">\n      <header className=\"card-header\">\n        <h3 style={{ paddingLeft: \"5px\" }}>{title}</h3>\n        <a href=\"#\" className=\"card-header-icon\" aria-label=\"more options\">\n          <span className=\"icon\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n          </span>\n        </a>\n      </header>\n      <div className=\"card-content\">\n        <h2 className=\"statistic\">{data}</h2>\n      </div>\n    </Card>\n  );\n};\n\nexport default CompanyCard;\n","import { Avatar } from \"rsuite\";\nimport React from \"react\";\nimport { Columns } from \"react-bulma-components/lib\";\n\nconst Product = ({ item }) => {\n  console.log(\"item :>> \", item);\n  return (\n    <ul>\n      <li>\n        <Columns>\n          <Columns.Column className=\"is-2\">\n            <Avatar circle size=\"md\" src={item.product.image} />\n          </Columns.Column>\n          <Columns.Column className=\"is-6\">\n            <h4>{item.product.title}</h4>\n          </Columns.Column>\n          <Columns.Column>\n            <h4>id: {item.product.id}</h4>\n          </Columns.Column>\n          <Columns.Column>\n            <h4>{item.product.quantity} Unit</h4>\n          </Columns.Column>\n        </Columns>\n      </li>\n    </ul>\n  );\n};\n\nexport default Product;\n","import Product from \"components/companyComponents/Product\";\nimport React from \"react\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport { Link } from \"react-router-dom\";\n\nconst CommandsReviewCard = ({ title, items }) => {\n  console.log(\"itemssss :>> \", items);\n  return (\n    <Card className=\"company__card\">\n      <header className=\"card-header\">\n        <h3 style={{ paddingLeft: \"20px\" }}>{title}</h3>\n      </header>\n      <div className=\"card-content\">\n        {!items && <p>No data available</p>}\n        <h2 className=\"statistic\">\n          {items && (\n            <ul>\n              {items.map((item, i) => (\n                <Product item={item} key={i} />\n              ))}\n            </ul>\n          )}\n        </h2>\n      </div>\n    </Card>\n  );\n};\n\nexport default CommandsReviewCard;\n","import React from \"react\";\nimport { Columns } from \"react-bulma-components/lib\";\n\nconst Comment = ({ comment }) => {\n  return (\n    <ul>\n      <li>\n        <Columns>\n          <Columns.Column className=\"is-2\">\n            <h6>{comment.created_at}</h6>\n          </Columns.Column>\n          <Columns.Column className=\"is-6\">\n            <h5>{comment.client_name}</h5>\n          </Columns.Column>\n          <Columns.Column>\n            <h5>{comment.comment}</h5>\n          </Columns.Column>\n        </Columns>\n      </li>\n    </ul>\n  );\n};\n\nexport default Comment;\n","import Comment from \"components/companyComponents/Comment\";\nimport React from \"react\";\nimport Card from \"react-bulma-components/lib/components/card\";\n\nconst CommentsReviewCard = ({ title, items }) => {\n  return (\n    <Card className=\"company__card\">\n      <header className=\"card-header\">\n        <h3 style={{ paddingLeft: \"20px\" }}>{title}</h3>\n      </header>\n      <div className=\"card-content\">\n        <h2 className=\"statistic\">\n          {!items && <p>No data available</p>}\n          {items && (\n            <ul>\n              {items.map((item) => (\n                <Comment comment={item} key={item.id} />\n              ))}\n            </ul>\n          )}\n        </h2>\n      </div>\n    </Card>\n  );\n};\n\nexport default CommentsReviewCard;\n","import React, { useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport * as actions from \"store/actions/companyActions\";\nimport { connect } from \"react-redux\";\nimport { editProduct } from \"services/company\";\n\nlet MaterialTableDemo = ({\n  columns,\n  data,\n  title,\n  addAction,\n  editAction,\n  removeAction,\n}) => {\n  return (\n    <MaterialTable\n      style={{ marginTop: \"5%\" }}\n      title={title}\n      columns={columns}\n      data={data}\n      editable={{\n        onRowAdd: (newData) => addAction(newData),\n        onRowUpdate: (newData, oldData) => editAction(newData),\n        onRowDelete: (oldData) => removeAction(oldData),\n      }}\n    />\n  );\n};\n\nMaterialTableDemo = connect(null, actions)(MaterialTableDemo);\n\nexport default MaterialTableDemo;\n","import React, { useEffect } from \"react\";\nimport Table from \"./InfoTable\";\nimport { Columns } from \"react-bulma-components/lib\";\nimport NavBar from \"./Navbar\";\nimport { Container } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions/companyActions\";\nimport * as selectors from \"store/reducers\";\n\nconst mapStateToProps = (state) => ({\n  categories: selectors.getCategories(state),\n});\n\nlet Products = ({\n  products,\n  categories,\n  fetchCategories,\n  addProduct,\n  editProduct,\n  removeProduct,\n}) => {\n  useEffect(() => {\n    fetchCategories();\n  }, [fetchCategories]);\n\n  return (\n    <>\n      <NavBar />\n      <Container>\n        <Table\n          title=\"Products Informations\"\n          columns={[\n            { title: \"Price\", field: \"price\" },\n            { title: \"Title\", field: \"title\" },\n            { title: \"Quantity\", field: \"quantity\" },\n            { title: \"Recipe\", field: \"recipe\" },\n            { title: \"Description\", field: \"description\" },\n            {\n              title: \"Category\",\n              field: \"category\",\n              lookup: {\n                ...categories\n                  .map((category) => ({\n                    [category.id]: category.title,\n                  }))\n                  .reduce((acc, curr) => Object.assign(acc, curr), {}),\n              },\n            },\n          ]}\n          data={\n            products &&\n            products.map((product) => ({\n              id: product.id,\n              price: product.price,\n              title: product.title,\n              quantity: product.quantity,\n              category: product.category.id,\n              description: product.description,\n              recipe: product.recipe,\n            }))\n          }\n          addAction={addProduct}\n          editAction={editProduct}\n          removeAction={removeProduct}\n        />\n      </Container>\n    </>\n  );\n};\n\nProducts = connect(mapStateToProps, actions)(Products);\n\nexport default Products;\n","import React from \"react\";\nimport Table from \"./InfoTable\";\nimport NavBar from \"./Navbar\";\nimport { Container } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions/companyActions\";\n\nconst DELIVERY_STATE = {\n  WAITING: \"waiting\",\n  DELIVERED: \"delivered\",\n  REJECTED: \"canceled\",\n};\n\nlet Commands = ({ commands, editCommand, removeCommand }) => {\n  return (\n    <>\n      <NavBar />\n      <Container>\n        <Table\n          title=\"Commands informations\"\n          columns={[\n            { title: \"Price\", field: \"price\" },\n            { title: \"Quantity\", field: \"quantity\" },\n            { title: \"Description\", field: \"description\" },\n            { title: \"Address\", field: \"address\" },\n            {\n              title: \"Delivery state\",\n              field: \"delivery_state\",\n              lookup: {\n                [DELIVERY_STATE.WAITING]: \"waiting\",\n                [DELIVERY_STATE.DELIVERED]: \"delivered\",\n                [DELIVERY_STATE.REJECTED]: \"canceled\",\n              },\n            },\n          ]}\n          data={commands.map((command) => ({\n            id: command.command_group_id,\n            price: command.price,\n            quantity: command.quantity,\n            description: command.description,\n            address: command.address,\n            delivery_state: command.delivery_state,\n          }))}\n          editAction={editCommand}\n          removeAction={removeCommand}\n        />\n      </Container>\n    </>\n  );\n};\n\nCommands = connect(null, actions)(Commands);\n\nexport default Commands;\n","import Product from \"components/companyComponents/Product\";\nimport React from \"react\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport { Link } from \"react-router-dom\";\n\nconst RunoutReviewCard = ({ title, items }) => {\n  console.log(\"the runout products are :>> \", items);\n  return (\n    <Card className=\"company__card\">\n      <header className=\"card-header\">\n        <h3 style={{ paddingLeft: \"20px\" }}>{title}</h3>\n      </header>\n      <div className=\"card-content\">\n        {!items && <p>No data available</p>}\n        <h2 className=\"statistic\">\n          {items && (\n            <ul>\n              {items.map((item, i) => (\n                <Product item={{ product: item }} key={i} />\n              ))}\n            </ul>\n          )}\n        </h2>\n      </div>\n    </Card>\n  );\n};\n\nexport default RunoutReviewCard;\n","import Product from \"components/companyComponents/Product\";\nimport React from \"react\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport { Link } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\n\nlet data = {\n  labels: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"November\",\n    \"December\",\n  ],\n  datasets: [\n    {\n      label: \"Sales\",\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"#555\",\n      data: [0, 10, 5, 2, 20, 30, 45],\n    },\n  ],\n};\n\nconst SalesChart = ({ title, items }) => {\n  console.log(\"itemssss :>> \", items);\n  return (\n    <Card className=\"company__card\">\n      <header className=\"card-header\">\n        <h3 style={{ paddingLeft: \"20px\" }}>{title}</h3>\n      </header>\n      <div className=\"chart-holder\">\n        <Line data={data} />\n      </div>\n    </Card>\n  );\n};\n\nexport default SalesChart;\n","import { Container } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { Columns } from \"react-bulma-components/lib\";\nimport NavBar from \"./Navbar\";\nimport RunoutReviewCard from \"./RunoutReviewCard\";\nimport SalesChart from \"./SalesChart\";\n\n// nearly ended products in stock\n// shopping list\nconst Stock = ({ runout }) => {\n  return (\n    <>\n      <NavBar />\n      <Container className=\"welcome__container\">\n        <Columns>\n          <Columns.Column>\n            <RunoutReviewCard title=\"Nearly out of stock\" items={runout} />\n          </Columns.Column>\n        </Columns>\n        <Columns.Column>\n          <SalesChart title=\"Commands Chart\" />\n        </Columns.Column>\n      </Container>\n    </>\n  );\n};\n\nexport default Stock;\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"rsuite\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ErrorsContainer from \"components/ErrorsContainer\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions/companyActions\";\n\nlet LoginForm = ({ classes, login }) => {\n  const [spinning, setSpinning] = useState(false);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      setSpinning(true);\n      login(values, history);\n    },\n  });\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <form onSubmit={formik.handleSubmit} className={classes.form} noValidate>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        <Button type=\"submit\" variant=\"contained\" appearance=\"primary\">\n          Sign in\n        </Button>\n        <Grid container style={{ marginTop: \"5%\" }}>\n          <Grid item>\n            <Link to=\"/register/company\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n        <Box mt={5}></Box>\n      </form>\n    </>\n  );\n};\n\nLoginForm = connect(null, actions)(LoginForm);\n\nexport default LoginForm;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length > 10) {\n    errors.password = \"Must be 10 characters or more\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n\n  return errors;\n};\n","import React, { useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LoginForm from \"components/companyComponents/LoginForm\";\nimport { useAuthenticated } from \"customHooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getNotifications } from \"store/reducers/\";\nimport { Notification } from \"rsuite\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: getNotifications(state),\n  };\n};\n\nlet SignInSide = ({ notifications }) => {\n  useEffect(() => {\n    if (notifications) {\n      notifications.map((notification) => {\n        Notification.info({\n          title: \"Notification\",\n          placement: \"bottomStart\",\n          duration: 3000,\n          description: notification,\n        });\n      });\n    }\n  }, [notifications]);\n  const classes = useStyles();\n  const isAuthenticated = useAuthenticated(\"company\");\n  if (!isAuthenticated) {\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <LoginForm classes={classes} />\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n  return null;\n};\n\nSignInSide = connect(mapStateToProps)(SignInSide);\n\nexport default SignInSide;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport { Button } from \"rsuite\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"store/actions/companyActions\";\nimport ErrorsContainer from \"components/ErrorsContainer\";\nimport SignUp from \"views/Register\";\nimport { connect } from \"react-redux\";\nimport { getNotifications } from \"store/reducers\";\nimport { Notification } from \"rsuite\";\nimport { Input } from \"rsuite\";\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: getNotifications(state),\n  };\n};\n\nlet SignUpForm = ({ classes, register, notifications }) => {\n  const [spinning, setSpinning] = useState(false);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      phone: \"\",\n      email: \"\",\n      description: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      setSpinning(true);\n      register(values, history);\n    },\n  });\n  useEffect(() => {\n    if (notifications) {\n      notifications.map((notification) => {\n        Notification.info({\n          title: \"Notification\",\n          placement: \"bottomStart\",\n          duration: 3000,\n          description: notification,\n        });\n      });\n    }\n  }, [notifications]);\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <form onSubmit={formik.handleSubmit} className={classes.form} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              autoComplete=\"fname\"\n              name=\"title\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"title\"\n              label=\"Title\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.title}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone Number\"\n              name=\"phone\"\n              autoComplete=\"pnumber\"\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Description\"\n              id=\"description\"\n              name=\"description\"\n              autoComplete=\"description\"\n              onChange={formik.handleChange}\n              value={formik.values.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={formik.handleChange}\n              value={formik.values.password}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"passwordConfirmation\"\n              label=\"Password confirmation\"\n              type=\"password\"\n              id=\"passwordConfirmation\"\n              autoComplete=\"current-password\"\n              onChange={formik.handleChange}\n              value={formik.values.passwordConfirmation}\n            />\n          </Grid>\n          <Grid item xs={12}></Grid>\n        </Grid>\n        <Button type=\"submit\" variant=\"contained\" appearance=\"primary\">\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to=\"/company/login\" variant=\"body2\">\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\nSignUpForm = connect(mapStateToProps, actions)(SignUpForm);\n\nexport default SignUpForm;\nconst validate = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Required\";\n  } else if (values.title.length > 15) {\n    errors.title = \"15 characters or less\";\n  }\n\n  if (!values.phone) {\n    errors.phone = \"Required\";\n  } else if (values.phone.length !== 10) {\n    errors.phone = \"10 digits\";\n  } else if (isNaN(values.phone)) {\n    errors.phone = \"not a number\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length > 20) {\n    errors.password = \"20 characters or less\";\n  }\n\n  if (!values.passwordConfirmation) {\n    errors.passwordConfirmation = \"Required\";\n  } else if (values.passwordConfirmation !== values.password) {\n    errors.passwordConfirmation = \"doesn't match\";\n  }\n  if (!values.description) {\n    errors.description = \"Required\";\n  } else if (values.description.length !== 40) {\n    errors.description = \"40 characters\";\n  }\n\n  return errors;\n};\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SignUpForm from \"components/companyComponents/SignUpForm\";\nimport { useAuthenticated } from \"customHooks\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const isAuthenticated = useAuthenticated();\n  if (!isAuthenticated) {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <SignUpForm classes={classes} />\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport NavBar from \"components/companyComponents/Navbar\";\nimport \"./index.css\";\nimport { Columns, Container } from \"react-bulma-components/lib\";\nimport CompanyCard from \"components/companyComponents/Card\";\nimport CommandsReviewCard from \"components/companyComponents/CommandsReviewCard\";\nimport CommentsReviewCard from \"components/companyComponents/CommentsReviewCard\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport Products from \"components/companyComponents/Products\";\nimport Commands from \"components/companyComponents/Commands\";\nimport Stock from \"components/companyComponents/Stock\";\nimport Login from \"components/companyComponents/Login\";\nimport Register from \"components/companyComponents/Register\";\nimport { useAuthenticated } from \"customHooks\";\nimport { getCompany } from \"utils/localStorageHelpers\";\nimport * as actions from \"store/actions/companyActions\";\nimport * as selectors from \"store/reducers\";\nimport { connect } from \"react-redux\";\nimport { Notification } from \"rsuite\";\n\nconst mapStateToProps = (state) => ({\n  products: selectors.getVisibleProducts(state),\n  runOutProducts: selectors.getRunOutProducts(state),\n  commands: selectors.getCommands(state),\n  latestCommands: selectors.getLatestCommands(state),\n  comments: selectors.getComments(state),\n  notifications: selectors.getNotifications(state),\n\n  // customers,\n  // likes: selectors.getCompanyLikes(state),\n});\n\nlet Company = ({\n  receiveCompany,\n  products,\n  commands,\n  comments,\n  getProducts,\n  latestCommands,\n  getCommands,\n  getRunOutProducts,\n  runOutProducts,\n  notifications,\n}) => {\n  let { slug } = useParams();\n\n  const isAuthenticated = useAuthenticated(\"company\");\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      const company = getCompany();\n      if (company && company.email) {\n        receiveCompany({ data: company });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (notifications) {\n      notifications.map((notification) => {\n        Notification.info({\n          title: \"Notification\",\n          placement: \"bottomStart\",\n          duration: 3000,\n          description: notification,\n        });\n      });\n    }\n  }, [notifications]);\n\n  useEffect(() => {\n    getRunOutProducts();\n    getProducts();\n    getCommands();\n  }, [getCommands, getProducts, getRunOutProducts]);\n\n  console.log(\"commands :>> \", commands);\n\n  if (slug && slug === \"products\") {\n    return <Products products={products} />;\n  }\n  if (slug && slug === \"commands\") {\n    return <Commands commands={commands} />;\n  }\n  if (slug && slug === \"stock\") {\n    return <Stock runout={runOutProducts} />;\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <Container className=\"welcome__container\">\n        <Columns>\n          <Columns.Column>\n            <CompanyCard title=\"Products\" data={products.length} />\n          </Columns.Column>\n          <Columns.Column>\n            <CompanyCard title=\"Commands\" data={commands.length} />\n          </Columns.Column>\n          <Columns.Column>\n            <CompanyCard title=\"Comments\" data={comments.length} />\n          </Columns.Column>\n          <Columns.Column>\n            <CompanyCard title=\"Total likes\" data={20} />\n          </Columns.Column>\n        </Columns>\n        <div style={{ marginTop: \"5%\" }}>\n          <Columns>\n            <Columns.Column className=\"is-two-forth\">\n              <CommandsReviewCard\n                title=\"Latest commands\"\n                items={latestCommands}\n              />\n            </Columns.Column>\n            <Columns.Column>\n              <CommentsReviewCard\n                title=\"Latest comments\"\n                items={comments.slice(0, 6)}\n              />\n            </Columns.Column>\n          </Columns>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nCompany = connect(mapStateToProps, actions)(Company);\n\nexport default Company;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import { useAuthenticated } from \"customHooks\";\nimport React, { useEffect } from \"react\";\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\nimport { receiveCompany } from \"store/actions/companyActions\";\nimport { getCompany } from \"utils/localStorageHelpers\";\nimport Company from \"../views/Company\";\n\nfunction ProtectedRoute({ children, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        localStorage.getItem(\"company\") ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login/company\",\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import React, { useEffect } from \"react\";\nimport routes from \"./router\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport \"react-bulma-components/lib\";\nimport history from \"utils/history\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\nimport ProtectedRoute from \"router/ProtectedRoutes\";\nimport Login from \"views/Login\";\nimport CompanyLogin from \"components/companyComponents/Login\";\nimport CompanyRegister from \"components/companyComponents/Register\";\nimport Home from \"views/Home/\";\nimport Register from \"views/Register\";\nimport Welcome from \"views/Welcome\";\nimport Company from \"views/Company\";\nimport { useAuthenticated } from \"customHooks\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Welcome />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n          <Route exact path=\"/login/company\">\n            <CompanyLogin />\n          </Route>\n          <Route exact path=\"/register/company\">\n            <CompanyRegister />\n          </Route>\n          <Route exact path=\"/home/:category?\">\n            <Home />\n          </Route>\n          <ProtectedRoute exact path=\"/company/:slug?\">\n            <Company />\n          </ProtectedRoute>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-bulma-components\";\nimport App from \"./App\";\nimport rootReducer from \"./store/reducers\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport \"index.css\";\n\nconst store = configureStore({ reducer: rootReducer });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nexport default store;\n","module.exports = __webpack_public_path__ + \"static/media/logo.31e29312.png\";","module.exports = __webpack_public_path__ + \"static/media/icons.1c2ce2be.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 548;","module.exports = __webpack_public_path__ + \"static/media/bannerImg.fea4d853.png\";","module.exports = __webpack_public_path__ + \"static/media/test-1.dc69e748.jpg\";"],"sourceRoot":""}