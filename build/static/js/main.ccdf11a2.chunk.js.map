{"version":3,"sources":["assets/img/logo.png","assets/img/icons.svg","assets/img/test-1.jpg","assets/img/bannerImg.png","components/homepageComponents/header/Logo.jsx","components/NavBar.jsx","components/Button.jsx","components/HomeProduct.jsx","components/Review.jsx","customHooks/index.js","views/Welcome.jsx","components/homepageComponents/header/TextField.jsx","components/homepageComponents/header/Search.jsx","components/homepageComponents/header/Like.jsx","utils/localStorageHelpers.js","components/homepageComponents/header/LikesList.jsx","store/reducers/createList.js","utils/convertStringToArray.js","store/reducers/byId.js","store/reducers/shoppingList.js","store/reducers/likesList.js","utils/schema.js","store/reducers/commentsList.js","store/reducers/pagination.js","store/reducers/categoriesList.js","store/reducers/searchResultsList.js","services/apiClient.js","store/reducers/user.js","store/reducers/commandsList.js","store/reducers/notifications.js","store/reducers/index.js","services/productServices.js","utils/search.js","store/actions.js","services/userServices.js","utils/index.js","components/ErrorsContainer.jsx","components/UserPasswordModal.jsx","components/UserInformationModal.jsx","components/homepageComponents/recipe/IngredientsList.jsx","components/homepageComponents/header/index.jsx","components/homepageComponents/results/PaginationButton.jsx","components/homepageComponents/results/Pagination.jsx","components/homepageComponents/results/Product.jsx","components/homepageComponents/results/List.jsx","components/homepageComponents/results/Products.jsx","components/homepageComponents/results/index.jsx","components/homepageComponents/recipe/Figure.jsx","components/homepageComponents/recipe/LikeButton.jsx","components/homepageComponents/recipe/LikesInfo.jsx","components/homepageComponents/recipe/RecipeInfo.jsx","components/homepageComponents/recipe/Details.jsx","components/homepageComponents/recipe/Ingredient.jsx","components/homepageComponents/recipe/CommentSection.jsx","components/homepageComponents/recipe/Comment.jsx","components/homepageComponents/recipe/CommentsList.jsx","components/homepageComponents/recipe/Category.jsx","components/homepageComponents/shopping/Command.jsx","components/homepageComponents/shopping/CommandsList.jsx","components/homepageComponents/recipe/index.jsx","components/homepageComponents/shopping/Product.jsx","components/homepageComponents/shopping/List.jsx","components/homepageComponents/shopping/index.jsx","views/Home/index.jsx","components/LoginForm.jsx","views/Login.jsx","components/SignUpForm.jsx","views/Register.jsx","router/index.js","utils/history.js","App.js","index.js"],"names":["module","exports","Logo","logo","clearSearchResults","clearCommands","to","onClick","src","alt","className","NavBarComponent","Column","size","style","color","Button","handleClick","icon","children","href","BannerComponent","aria-label","aria-hidden","borderRadius","sampleImage","Review","dateTime","useAuthenticated","useState","authenticated","setAuthenticated","history","useHistory","location","useLocation","useEffect","localStorage","getItem","includes","pathname","push","Welcome","NavBar","role","bannerImg","HomeProduct","TextField","React","forwardRef","ref","placeholder","type","id","Search","searchProduct","inputEl","createRef","subscription","unsubscribe","Like","product","category","title","image","description","company","getUser","JSON","parse","error","console","log","setUser","email","name","phone","address","token","user","editedUser","setItem","stringify","removeUser","removeItem","getShoppingList","removeProductFromShoppingList","shoppingList","addToShoppingList","quantity","v4","products","newShoppingList","removeShoppingList","Likes","likedProducts","receiveUser","getLikedProducts","fetchProduct","data","icons","map","details","key","createList","combineReducers","ids","state","action","response","result","isFetching","errorMessage","message","convertStringToArray","element","Array","isArray","replace","split","handleRemoveIngredient","newRecipe","recipe","filter","Ingredient","ingredient","byId","entities","productId","getProduct","likes","schema","Entity","arrayOfProducts","comment","retrieveComments","productIds","nextState","forEach","comments","newProductComments","commentId","productWithUpdatedComments","pagination","currentPage","meta","current_page","lastPage","last_page","prevLink","links","prev","nextLink","next","categoriesList","searchResultsList","searchResults","isSearching","apiClient","axios","create","baseURL","timeout","headers","Accept","interceptors","use","status","Promise","reject","store","dispatch","window","res","defaults","common","commands","delivery_state","notifications","notification","idsByCategory","tortya","cakes","tacos","croissant","pizza","others","rootReducer","likesList","commentsList","commandsList","getVisibleProducts","undefined","fromCreateList","fromById","getVisibleProduct","getIsFetching","getErrorMessage","Object","keys","fromShoppingList","fromLikesList","getIsProductLiked","from","length","getIsFetchingLike","getProductIngredients","getLikes","getProductComments","fromCommentsList","getPaginationData","getCategories","fromCategoriesList","getSearchResults","fromSearchResultsList","getIsSearching","getCurrentUser","getCommands","getIsFetchingCommands","getNotifications","fetchProducts","link","get","search","searchField","document","getElementById","fromEvent","pipe","throttle","val","interval","value","distinctUntilChanged","switchMap","productName","Observable","observer","fetchSearchProductsRequest","then","retry","subscribe","receiveSearchProducts","fetchSearchProductsFailure","paginationLink","fetchProductsRequest","ProductServices","receiveProducts","addNotification","catch","fetchProductsFailure","fetchCategories","receiveCategories","fetchProductRequest","receiveProduct","fetchProductFailure","normalize","getLikedProductsRequest","getLikedProductsSuccess","getLikedProductsFailure","addToLikeList","post","addToLikeListSuccess","removeFromLikeList","removeFromLikeListSuccess","removeFromShoppingList","removeIngredient","login","credentials","userLoginRequest","password","userServices","updatePassword","oldPassword","newPassword","confirmation","patch","old_password","new_password","new_password_confirmation","updateUserInformation","informations","register","userRegisterRequest","firstName","userRegisterSuccess","userRegisterfailure","logout","userLogoutRequest","userLogoutSuccess","reload","userLogoutfailure","addComment","product_id","receiveComment","removeComment","delete","removeCommentSuccess","editComment","receiveEditedComment","addCommand","command","req","generatedId","price","command_group_id","retrieveCommandFromShoppingList","receiveCommand","ErrorsContainer","errors","i","UserPasswordForm","closeModal","formik","useFormik","initialValues","confirm","validate","onSubmit","values","Form","layout","handleSubmit","marginTop","FormGroup","ControlLabel","autoComplete","variant","fullWidth","required","label","onChange","handleChange","margin","ButtonToolbar","appearance","connect","actions","UserPasswordModal","show","setShow","Modal","onHide","Header","Title","Body","Footer","UserInformationForm","currentUser","fluid","autoFocus","selectors","maxQuantity","UserModal","Avatar","circle","test","useParams","isAuthenticated","Notification","info","duration","PreviousPageButton","clickHandler","pageNumber","isPrevious","Pagination","firstPage","PaginationButton","Item","isActive","List","currentProductId","hash","Products","match","params","withRouter","ownProps","Result","Figure","LikeButton","isLiked","LikesInfo","_","Fragment","RecipeInfo","RecipeDetails","Ingredients","ingredients","unit","max","min","inputRef","CommentSection","isEditing","setIsEditing","e","preventDefault","current","Comment","currentUserId","setCommentId","client_name","created_at","client_id","Comments","Category","Command","createdAt","deliveryState","commandGroupId","author","CommandsList","commandsGroupedById","chain","groupBy","v","client","find","quantitySum","reduce","acc","curr","groupItemsById","Product","categories","isFetchingCommands","isFetchingLike","Details","setErrors","Shopping","prompt","Home","LoginForm","classes","form","noValidate","submit","Grid","container","item","Box","mt","useStyles","makeStyles","theme","root","height","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","spacing","display","flexDirection","alignItems","avatar","secondary","main","width","SignUpForm","xs","sm","justify","isNaN","Copyright","Typography","align","Link","Date","getFullYear","routes","path","component","CssBaseline","md","Paper","elevation","square","Container","maxWidth","createBrowserHistory","App","route","exact","configureStore","reducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.ccdf11a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.31e29312.png\";","module.exports = __webpack_public_path__ + \"static/media/icons.1c2ce2be.svg\";","module.exports = __webpack_public_path__ + \"static/media/test-1.dc69e748.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bannerImg.fea4d853.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Logo = ({ logo, clearSearchResults, clearCommands }) => {\n  return (\n    <Link\n      to=\"/home\"\n      onClick={() => {\n        if (clearSearchResults) clearSearchResults();\n        if (clearCommands) clearCommands();\n      }}\n    >\n      <img src={logo} alt=\"Logo\" className=\"header__logo\" />\n    </Link>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport NavBar from \"react-bulma-components/lib/components/navbar\";\nimport Container from \"react-bulma-components/lib/components/container\";\nimport Columns from \"react-bulma-components/lib/components/columns\";\nimport { Button } from \"react-bulma-components/dist\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport Logo from \"./homepageComponents/header/Logo\";\nimport logo from \"assets/img/logo.png\";\n\nconst NavBarComponent = () => {\n  return (\n    <nav className=\"welcome__nav\">\n      <NavBar>\n        <Container className=\"welcome__nav\">\n          <Columns.Column size=\"three-quarters\">\n            <Logo logo={logo}></Logo>\n          </Columns.Column>\n          <Columns.Column>\n            <div className=\"navbar-end\">\n              <Columns>\n                <Columns.Column>\n                  <Button className=\"btn is-large\">\n                    <NavLink\n                      style={{\n                        color: \"white\",\n                      }}\n                      to=\"/register\"\n                    >\n                      Sign up\n                    </NavLink>\n                  </Button>\n                </Columns.Column>\n                <Columns.Column>\n                  <Button className=\"btn is-large\">\n                    <NavLink\n                      style={{\n                        color: \"white\",\n                      }}\n                      to=\"/login\"\n                    >\n                      Login\n                    </NavLink>\n                  </Button>\n                </Columns.Column>\n              </Columns>\n            </div>\n          </Columns.Column>\n        </Container>\n      </NavBar>\n    </nav>\n  );\n};\n\nexport default NavBarComponent;\n","import React from \"react\";\n\nconst Button = ({ handleClick, icon, children }) => {\n  return (\n    <button className=\"btn search__btn\" onClick={handleClick}>\n      {icon && (\n        <svg className=\"search__icon\">\n          <use href={icon}></use>\n        </svg>\n      )}\n      <span>{children}</span>\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport Button from \"./Button\";\nimport sampleImage from \"assets/img/test-1.jpg\";\nconst BannerComponent = () => {\n  return (\n    <Card>\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit. Numquam,\n          necessitatibus.\n        </p>\n        <a href=\"#\" className=\"card-header-icon\" aria-label=\"more options\">\n          <span className=\"icon\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n          </span>\n        </a>\n      </header>\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <img style={{ borderRadius: \"20px\" }} src={sampleImage}></img>\n          <br />\n        </div>\n        <footer className=\"card-footer mb-5\">\n          <Button\n            onClick={() => {\n              // redirect to sign in/sign up page\n            }}\n          >\n            Take a look\n          </Button>\n        </footer>\n      </div>\n    </Card>\n  );\n};\n\nexport default BannerComponent;\n","import React from \"react\";\nconst Review = () => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src=\"https://bulma.io/images/placeholders/1280x960.png\"\n            alt=\"Placeholder image\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-content\">\n            <p className=\"title is-4\">John Smith</p>\n            <p className=\"subtitle is-6\">@johnsmith</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec\n          iaculis mauris. <a>@bulmaio</a>.<a href=\"#\">#css</a>{\" \"}\n          <a href=\"#\">#responsive</a>\n          <br />\n          <time dateTime=\"2016-1-1\">11:09 PM - 1 Jan 2016</time>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Review;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport routes from \"router\";\n\nexport const useAuthenticated = () => {\n  const [authenticated, setAuthenticated] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    if (localStorage.getItem(\"user\")) {\n      setAuthenticated(true);\n      if (\n        [\"/\", \"/login\", \"/register\", \"/welcome\"].includes(location.pathname)\n      ) {\n        history.push(\"/home\");\n      }\n    }\n  }, []);\n  return authenticated;\n};\n","import React from \"react\";\nimport NavBarComponent from \"components/NavBar\";\nimport HomeProduct from \"components/HomeProduct\";\nimport { Container, Columns } from \"react-bulma-components/lib\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport bannerImg from \"../assets/img/bannerImg.png\";\nimport Review from \"components/Review\";\nimport { useAuthenticated } from \"customHooks\";\nconst Welcome = () => {\n  const isAuthenticated = useAuthenticated();\n  if (!isAuthenticated) {\n    return (\n      <div>\n        <NavBarComponent />\n        <div>\n          <Container className=\"welcome__container\">\n            <Card className=\"banner-card\">\n              <Columns>\n                <Columns.Column>\n                  <div className=\"banner__header\">\n                    <h1>\n                      Choose your joy <span role=\"img\">🍝</span>, we bring it to\n                      you\n                    </h1>\n                  </div>\n                </Columns.Column>\n                <Columns.Column>\n                  <img\n                    src={bannerImg}\n                    alt=\"banner\"\n                    className=\"banner-logo\"\n                  ></img>\n                </Columns.Column>\n              </Columns>\n            </Card>\n            <div className=\"categories-list\">\n              <Columns>\n                <Columns.Column>\n                  <HomeProduct />\n                </Columns.Column>\n                <Columns.Column>\n                  <HomeProduct />\n                </Columns.Column>\n                <Columns.Column>\n                  <HomeProduct />\n                </Columns.Column>\n                <Columns.Column>\n                  <HomeProduct />\n                </Columns.Column>\n              </Columns>\n              <hr></hr>\n              <p className=\"heading-2\">What our clients say about us</p>\n              <Columns>\n                <Columns.Column>\n                  <Review></Review>\n                </Columns.Column>\n                <Columns.Column>\n                  <Review></Review>\n                </Columns.Column>\n                <Columns.Column>\n                  <Review></Review>\n                </Columns.Column>\n                <Columns.Column>\n                  <Review></Review>\n                </Columns.Column>\n              </Columns>\n            </div>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Welcome;\n","import React from \"react\";\n\nconst TextField = React.forwardRef(({ placeholder }, ref) => {\n  return (\n    <input\n      ref={ref}\n      type=\"text\"\n      className=\"search__field\"\n      id=\"search__field\"\n      placeholder={placeholder}\n    />\n  );\n});\n\nexport default TextField;\n","import React, { useEffect } from \"react\";\nimport TextField from \"./TextField\";\nconst Search = ({ searchProduct }) => {\n  const inputEl = React.createRef();\n  useEffect(() => {\n    const subscription = searchProduct();\n    return () => subscription.unsubscribe();\n  }, []);\n  return (\n    <form className=\"search\">\n      <TextField\n        placeholder=\"Search over 1,000,000 products...\"\n        ref={inputEl}\n      />\n    </form>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Like = ({ product, clearCommands }) => {\n  return (\n    <li>\n      <Link\n        className=\"likes__link\"\n        to={\"/home/\" + product.category.title + \"#\" + product.id}\n        onClick={() => clearCommands()}\n      >\n        <figure className=\"likes__fig\">\n          <img src={product.image} alt={product.description} />\n        </figure>\n        <div className=\"likes__data\">\n          <h4 className=\"likes__name\">{product.title}</h4>\n          <p className=\"likes__author\">{product.company.title}</p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default Like;\n","import { v4 } from \"uuid\";\nconst getUser = () => {\n  try {\n    const res = JSON.parse(localStorage.getItem(\"user\"));\n    return res;\n  } catch (error) {\n    console.log(\"there was an error while getting the logged user\");\n  }\n  localStorage.getItem(\"user\");\n};\nconst setUser = ({ email, name, phone, address, id, token }) => {\n  try {\n    const user = getUser();\n\n    if (user) {\n      const editedUser = { ...user, email, name, phone, address };\n      localStorage.setItem(\"user\", JSON.stringify(editedUser));\n    } else {\n      localStorage.setItem(\n        \"user\",\n        JSON.stringify({\n          email,\n          name,\n          phone,\n          address,\n          id,\n          token,\n        })\n      );\n    }\n    return getUser();\n  } catch {\n    console.log(\"there was an error while trying to save the logged user\");\n  }\n};\n\nconst removeUser = () => {\n  try {\n    localStorage.removeItem(\"user\");\n    return {};\n  } catch (error) {\n    console.log(\"there was a problem while trying to remove the logged user\");\n  }\n};\n\nconst getShoppingList = () => {\n  try {\n    const res = JSON.parse(localStorage.getItem(\"shoppingList\"));\n    return res;\n  } catch (error) {\n    console.log(\"there was an error dealing with the shopping list\");\n  }\n};\n\nconst removeProductFromShoppingList = (id) => {\n  console.log(\"the id of the product is \", id);\n  try {\n    const shoppingList = getShoppingList();\n    delete shoppingList[`${id}`];\n    localStorage.setItem(\"shoppingList\", JSON.stringify(shoppingList));\n    return getShoppingList();\n  } catch (error) {\n    console.log(\"there was an error while removing the item from the list\");\n  }\n};\n\nconst addToShoppingList = (product, quantity) => {\n  const id = v4();\n  try {\n    const products = getShoppingList();\n    const newShoppingList = {\n      ...products,\n      [id]: {\n        ...product,\n        quantity,\n      },\n    };\n    localStorage.setItem(\"shoppingList\", JSON.stringify(newShoppingList));\n    return getShoppingList();\n  } catch (error) {\n    console.log(\"there was an error while accessing localStorage\");\n  }\n};\n\nconst removeShoppingList = () => {\n  try {\n    localStorage.removeItem(\"shoppingList\");\n    return {};\n  } catch (error) {\n    console.log(\"there was an error while removing the shopping list\");\n  }\n};\n\nconst getLikedProducts = () => {\n  try {\n    const res = JSON.parse(localStorage.getItem(\"likesList\"));\n    return res;\n  } catch (error) {\n    console.log(\"there was an error while getting from likes list\");\n  }\n};\n\nconst addToLikeList = (item) => {\n  try {\n    const items = getLikedProducts();\n    const newLikesList = { ...items, [item.id]: item };\n    localStorage.setItem(\"likesList\", JSON.stringify(newLikesList));\n    return getLikedProducts();\n  } catch (error) {\n    console.log(\"there was an error while adding to the likes list\");\n  }\n};\n\nexport {\n  getShoppingList,\n  addToShoppingList,\n  removeProductFromShoppingList,\n  getLikedProducts,\n  addToLikeList,\n  setUser,\n  removeUser,\n  getUser,\n  removeShoppingList,\n};\n","import React, { useEffect } from \"react\";\nimport icons from \"../../../assets/img/icons.svg\";\nimport Like from \"./Like\";\nimport { useAuthenticated } from \"customHooks\";\n\nimport { getUser } from \"utils/localStorageHelpers\";\n\nconst Likes = ({\n  likedProducts,\n  receiveUser,\n  getLikedProducts,\n  fetchProduct,\n  clearCommands,\n}) => {\n  const authenticated = useAuthenticated();\n  useEffect(() => {\n    if (!authenticated) {\n      const user = getUser();\n      if (user.email) {\n        receiveUser({ data: user });\n        getLikedProducts();\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"likes\">\n      <div className=\"likes__field\">\n        <svg className=\"likes__icon\">\n          <use href={icons + \"#icon-heart\"}></use>\n        </svg>\n      </div>\n      <div className=\"likes__panel\">\n        <ul className=\"likes__list\">\n          {likedProducts &&\n            likedProducts.map((product) => (\n              <Like\n                product={product.details}\n                fetchProduct={fetchProduct}\n                key={product.details.id}\n                clearCommands={clearCommands}\n              />\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Likes;\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nconst createList = (category) => {\n  const ids = (state = [], action) => {\n    switch (action.type) {\n      case \"FETCH_PRODUCTS_SUCCESS\":\n        return category === action.category ? action.response.result : state;\n      default:\n        return state;\n    }\n  };\n\n  const isFetching = (state = false, action) => {\n    if (action.category !== category) return state;\n    switch (action.type) {\n      case \"FETCH_PRODUCTS_REQUEST\":\n        return true;\n      case \"FETCH_PRODUCTS_SUCCESS\":\n      case \"FETCH_PRODUCTS_FAILURE\":\n        return false;\n      default:\n        return state;\n    }\n  };\n\n  const errorMessage = (state = null, action) => {\n    if (action.category !== category) return state;\n    switch (action.type) {\n      case \"FETCH_PRODUCTS_FAILURE\":\n        return action.message;\n      case \"FETCH_PRODUCTS_REQUEST\":\n      case \"FETCH_PRODUCTS_SUCCESS\":\n        return null;\n      default:\n        return state;\n    }\n  };\n\n  return combineReducers({\n    ids,\n    isFetching,\n    errorMessage,\n  });\n};\n\nexport default createList;\n\nexport const getProductsIds = (state) => state.ids;\nexport const getIsFetching = (state) => state.isFetching;\nexport const getErrorMessage = (state) => state.errorMessage;\n","const convertStringToArray = (element) => {\n  if (element) {\n    return Array.isArray(element)\n      ? element\n      : element.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\n  }\n};\n\nexport default convertStringToArray;\n","import convertStringToArray from \"../../utils/convertStringToArray\";\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_PRODUCTS_SUCCESS\":\n    case \"FETCH_PRODUCT_SUCCESS\":\n      return { ...state, ...action.response.entities.products };\n    case \"REMOVE_INGREDIENT\":\n      return {\n        ...state,\n        [action.productId]: handleRemoveIngredient(\n          state[action.productId],\n          action\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nconst handleRemoveIngredient = (state, action) => {\n  const newRecipe = convertStringToArray(state.recipe).filter(\n    (Ingredient) => Ingredient !== action.ingredient\n  );\n  return {\n    ...state,\n    recipe: newRecipe,\n  };\n};\n\nexport default byId;\n\nexport const getProduct = (state, id) => state[id];\n","import {\n  getShoppingList,\n  addToShoppingList,\n  removeProductFromShoppingList,\n  removeShoppingList,\n} from \"utils/localStorageHelpers\";\n\nconst shoppingList = (state = {}, action) => {\n  switch (action.type) {\n    case \"GET_LIST_ITEMS\":\n      return getShoppingList();\n    case \"GET_LIST_ITEM_FAILURE\":\n      return state;\n    case \"ADD_LIST_ITEM\":\n      return addToShoppingList(action.product, action.quantity);\n    case \"REMOVE_LIST_ITEM\":\n      return removeProductFromShoppingList(action.id);\n    case \"CLEAR_SHOOPING_LIST\":\n      return removeShoppingList();\n    default:\n      return state;\n  }\n};\n\nexport default shoppingList;\n\nexport const getShoppingListItems = (state) => {\n  if (state) {\n    const keys = Object.keys(state);\n    return keys.map((key) => ({ key, details: state[key] }));\n  }\n};\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nconst likes = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TO_LIKE_LIST\":\n      return [...state, action.response];\n    case \"REMOVE_FROM_LIKE_LIST\":\n      return state.filter((product) => product.id !== action.response.id);\n    case \"GET_LIKE_LIST_SUCCESS\":\n      return action.response;\n    case \"GET_LIKE_LIST_REQUEST\":\n      console.log(\"requesting\");\n    case \"GET_LIKE_LIST_FAILURE\":\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst isFetching = (state = false, action) => {\n  switch (action.type) {\n    case \"LIKE_REQUEST\":\n      return true;\n    case \"LIKE_SUCCESS\":\n    case \"LIKE_FAILURE\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ isFetching, likes });\n\nexport const getLikedListItems = (state) => {\n  if (state) {\n    const keys = Object.keys(state);\n    return keys.map((key) => ({ key, details: state[key] }));\n  }\n};\n\nexport const getIsProductLiked = (state, id) => {\n  const likes = Array.from(state).filter((product) => {\n    return product.id === +id;\n  });\n  return likes.length > 0 ? true : false;\n};\n\nexport const getIsFetchingLike = (state) => state;\n","import { schema } from \"normalizr\";\n\nconst product = new schema.Entity(\"products\");\n\nconst arrayOfProducts = new schema.Array(product);\n\nconst comment = new schema.Entity(\"commnets\");\nconst arrayOfComments = new schema.Array(comment);\n\nexport { product, arrayOfProducts, arrayOfComments };\n","import { product } from \"utils/schema\";\n\nconst comments = (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_PRODUCTS_SUCCESS\":\n      return retrieveComments(state, action);\n    case \"ADD_COMMENT\":\n      return {\n        ...state,\n        [action.productId]: [...state[action.productId], action.response],\n      };\n\n    case \"REMOVE_COMMENT\":\n      const newProductComments = state[action.productId].filter(\n        (comment) => comment.id !== action.commentId\n      );\n      const nextState = {\n        ...state,\n        [action.productId]: newProductComments,\n      };\n\n      return nextState;\n\n    case \"EDIT_COMMENT\":\n      const productWithUpdatedComments = state[action.productId].map(\n        (comment) => {\n          if (comment.id === action.commentId) {\n            comment = action.response;\n          }\n          return comment;\n        }\n      );\n\n      return {\n        ...state,\n        [action.productId]: productWithUpdatedComments,\n      };\n    default:\n      return state;\n  }\n};\n\nconst retrieveComments = (state, action) => {\n  const productIds = action.response.result;\n  const products = action.response.entities.products;\n\n  const nextState = {\n    ...state,\n  };\n\n  productIds.forEach((id) => {\n    nextState[id] = products[id].comments;\n  });\n\n  return nextState;\n};\n\nexport default comments;\n\nexport const getComments = (state, productId) => {\n  return state[productId];\n};\n","const pagination = (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_PRODUCTS_SUCCESS\":\n      return {\n        currentPage: action.meta.current_page,\n        lastPage: action.meta.last_page,\n        prevLink: action.links.prev,\n        nextLink: action.links.next,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pagination;\n\nexport const getPaginationData = (state) => {\n  return state;\n};\n","const categoriesList = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_CATEGORIES_SUCCESS\":\n      return action.response;\n    default:\n      return state;\n  }\n};\n\nexport default categoriesList;\n\nexport const getCategories = (state) => {\n  return state.map((category) => category);\n};\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nconst searchResults = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_SEARCH_PRODUCTS_SUCCESS\":\n      return action.response;\n    case \"CLEAR_SEARCH_RESULTS\":\n      return [];\n    case \"FETCH_SEARCH_PRODUCTS_FAILURE\":\n      return action.message;\n    default:\n      return state;\n  }\n};\n\nconst isSearching = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCH_SEARCH_PRODUCTS_REQUEST\":\n      return true;\n    case \"FETCH_SEARCH_PRODUCTS_SUCCESS\":\n    case \"FETCH_SEARCH_PRODUCTS_FAILURE\":\n    case \"CLEAR_SEARCH_RESULTS\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst searchResultsList = combineReducers({ searchResults, isSearching });\n\nexport default searchResultsList;\n\nexport const getResultsIds = (state) => {\n  return state.result;\n};\nexport const getResult = (state, id) => {\n  return state.entities.products[id];\n};\nexport const getIsSearching = (state) => state;\n","import axios from \"axios\";\nimport store from \"../index\";\n\nconst BASE_URL = \"http://127.0.0.1:8000/api/\";\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  timeout: 5000,\n  headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\n});\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response.status === 403) {\n      return Promise.reject(error.response.data.error);\n    }\n    if (error.response.status === 401) {\n      console.log(\"the status code is 401\");\n      store.dispatch({ type: \"USER_LOGOUT_SUCCESS\" });\n      window.location.replace(\"/login\");\n      return Promise.reject(error);\n    }\n  }\n);\n\nexport default apiClient;\n","import { setUser, removeUser } from \"utils/localStorageHelpers\";\nimport apiClient from \"services/apiClient\";\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case \"USER_LOGIN_SUCCESS\":\n      const res = { ...state, ...setUser(action.response) };\n      apiClient.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${res.token}`;\n      return res;\n    case \"USER_LOGIN_FAILURE\":\n    case \"USER_LOGOUT_SUCCESS\":\n      return removeUser();\n    default:\n      return state;\n  }\n};\n// case \"USER_LOGIN_REQUEST\":\n// case \"USER_REGISTER_SUCCESS\":\n// case \"USER_REGISTER_FAILURE\":\n// case \"USER_REGISTER_REQUEST\":\n\nexport default user;\n\nexport const getUser = (state) => {\n  return state;\n};\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nconst commands = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_COMMANDS_SUCCESS\":\n      return action.response;\n    case \"ADD_COMMAND_SUCCESS\":\n      return [\n        {\n          // NOTE: there will always be only one item inside the array in this case\n          ...action.response[0],\n          delivery_state: \"waiting\",\n        },\n      ];\n    case \"CLEAR_COMMANDS_LIST\":\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst isFetching = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCH_COMMANDS_REQUEST\":\n      return true;\n    case \"FETCH_COMMANDS_SUCCESS\":\n    case \"FETCH_COMMANDS_FAILURE\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ commands, isFetching });\n\nexport const getCommands = (state) => state;\n\nexport const getIsFetchingCommands = (state) => state;\n","const notifications = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_NOTIFICATION\":\n      return [...state, action.notification];\n    case \"REMOVE_NOTIFICATION\":\n    default:\n      return state;\n  }\n};\n\nexport default notifications;\n\nexport const getNotifications = (state) => state;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport createList, * as fromCreateList from \"./createList\";\nimport byId, * as fromById from \"./byId\";\nimport shoppingList, * as fromShoppingList from \"./shoppingList\";\nimport likesList, * as fromLikesList from \"./likesList\";\nimport commentsList, * as fromCommentsList from \"./commentsList\";\nimport convertStringToArray from \"utils/convertStringToArray\";\nimport pagination, * as fromPagination from \"./pagination\";\nimport categoriesList, * as fromCategoriesList from \"./categoriesList\";\nimport searchResultsList, * as fromSearchResultsList from \"./searchResultsList\";\nimport user, * as fromUser from \"./user\";\nimport commandsList, * as fromCommandsList from \"./commandsList\";\nimport notifications, * as fromNotifications from \"./notifications\";\n\nconst idsByCategory = combineReducers({\n  tortya: createList(\"tortya\"),\n  cakes: createList(\"cakes\"),\n  tacos: createList(\"tacos\"),\n  croissant: createList(\"croissant\"),\n  pizza: createList(\"pizza\"),\n  others: createList(\"others\"),\n});\n\nconst rootReducer = combineReducers({\n  byId,\n  idsByCategory,\n  shoppingList,\n  likesList,\n  commentsList,\n  commandsList,\n  categoriesList,\n  pagination,\n  searchResultsList,\n  notifications,\n  user,\n});\n\nexport default rootReducer;\n\nexport const getVisibleProducts = (state, category) => {\n  if (category !== undefined) {\n    const ids = fromCreateList.getProductsIds(state.idsByCategory[category]);\n    return ids.map((id) => fromById.getProduct(state.byId, id));\n  }\n  return [];\n};\n\nexport const getVisibleProduct = (state, id) => {\n  const product = fromById.getProduct(state.byId, id);\n  if (product) return product;\n  return undefined;\n};\n\nexport const getIsFetching = (state, category) => {\n  if (category) {\n    return fromCreateList.getIsFetching(state.idsByCategory[category]);\n  }\n  return;\n};\n\nexport const getErrorMessage = (state, category) => {\n  if (category) {\n    return fromCreateList.getErrorMessage(state.idsByCategory[category]);\n  }\n  return;\n};\n\nexport const getShoppingList = (state) => {\n  return fromShoppingList.getShoppingListItems(state.shoppingList);\n};\n\nexport const getLikedProducts = (state) => {\n  return fromLikesList.getLikedListItems(state.likesList.likes);\n};\n\nexport const getIsProductLiked = (state, id) => {\n  return fromLikesList.getIsProductLiked(state.likesList.likes, id);\n};\n\nexport const getIsFetchingLike = (state) => {\n  return fromLikesList.getIsFetchingLike(state.likesList.isFetching);\n};\n\nexport const getProductIngredients = (state, id) => {\n  const product = fromById.getProduct(state.byId, id);\n  if (product) {\n    return convertStringToArray(product.recipe);\n  }\n};\nexport const getLikes = (state, id) => {\n  const product = fromById.getProduct(state.byId, id);\n  if (product) {\n    return product.likes;\n  }\n};\n\nexport const getProductComments = (state, id) => {\n  const product = fromById.getProduct(state.byId, id);\n  if (product) {\n    return fromCommentsList.getComments(state.commentsList, product.id);\n  }\n};\n\nexport const getPaginationData = (state) => {\n  return fromPagination.getPaginationData(state.pagination);\n};\n\nexport const getCategories = (state) => {\n  return fromCategoriesList.getCategories(state.categoriesList);\n};\n\nexport const getSearchResults = (state) => {\n  console.log(state.searchResultsList.searchResults);\n  const ids = fromSearchResultsList.getResultsIds(\n    state.searchResultsList.searchResults\n  );\n  console.log(\"the ids are the following :\", ids);\n  if (ids) {\n    return ids.map((id) =>\n      fromSearchResultsList.getResult(state.searchResultsList.searchResults, id)\n    );\n  }\n  return undefined;\n};\n\nexport const getIsSearching = (state) => {\n  return fromSearchResultsList.getIsSearching(\n    state.searchResultsList.isSearching\n  );\n};\n\nexport const getCurrentUser = (state) => {\n  return fromUser.getUser(state.user);\n};\n\nexport const getCommands = (state) => {\n  console.log(\"the state is : \", state);\n  return fromCommandsList.getCommands(state.commandsList.commands);\n};\n\nexport const getIsFetchingCommands = (state) => {\n  return fromCommandsList.getIsFetchingCommands(state.commandsList.isFetching);\n};\n\nexport const getNotifications = (state) => {\n  return fromNotifications.getNotifications(state.notifications);\n};\n","import apiClient from \"./apiClient\";\n//what does link mean 🤦🏻‍♂️\nconst fetchProducts = (link, category) => {\n  if (link !== null) {\n    const res = link.replace(\"http://localhost:8000/api\", \"\");\n    console.log(\"the res is the following :\", res);\n    return apiClient.get(res);\n  }\n  if (category) {\n    return apiClient.get(`/categories/products/${category}`);\n  }\n  return apiClient.get(\"/products\");\n};\n\nconst fetchProduct = (productId) => {\n  return apiClient.get(`/products/${productId}`);\n};\n\nconst fetchCategories = () => {\n  return apiClient.get(\"/categories\");\n};\n\nconst searchProduct = (productName) => {\n  return apiClient.get(`/products?title=${productName}`);\n};\n\nconst likeProduct = (productId) => {\n  return apiClient.post(`clients/${productId}/like`);\n};\n\nconst unlikeProduct = (productId) => {\n  return apiClient.post(`clients/${productId}/unlike`);\n};\n\nconst sendCommand = (command) => {\n  console.log({ command: command });\n  const req = JSON.stringify({\n    command: command,\n  });\n  return apiClient.post(`clients/commands`, req);\n};\n\nconst getCommands = () => {\n  return apiClient.get(\"clients/commands\");\n};\n\nconst getCommand = (commandGroupId) => {\n  return apiClient.get(`client/commands/${commandGroupId}`);\n};\n\nexport {\n  fetchProducts,\n  fetchProduct,\n  fetchCategories,\n  searchProduct,\n  likeProduct,\n  unlikeProduct,\n  sendCommand,\n  getCommands,\n  getCommand,\n};\n","import { fromEvent, Observable, interval } from \"rxjs\";\nimport {\n  map,\n  throttle,\n  distinctUntilChanged,\n  switchMap,\n  retry,\n  filter,\n} from \"rxjs/operators\";\nimport apiClient from \"services/apiClient\";\nimport {\n  receiveSearchProducts,\n  fetchSearchProductsFailure,\n  fetchSearchProductsRequest,\n} from \"store/actions\";\n\nconst search = (dispatch) => {\n  const searchField = document.getElementById(\"search__field\");\n  const keyPresses = fromEvent(searchField, \"keyup\");\n\n  function getSearchProductsResults(productName) {\n    return Observable.create(function (observer) {\n      dispatch(fetchSearchProductsRequest());\n      apiClient\n        .get(`http://localhost:8000/api/products?title=${productName}`)\n        .then(\n          (res) => {\n            observer.next(res);\n          },\n          (error) => {\n            observer.error(error);\n          }\n        );\n    });\n  }\n\n  const resultSets = keyPresses.pipe(\n    throttle((val) => interval(1000)),\n    map((key) => searchField.value),\n    distinctUntilChanged(),\n    filter((search) => search.length > 0),\n    switchMap(getSearchProductsResults),\n    retry(2)\n  );\n\n  const subscription = resultSets.subscribe(\n    (response) => {\n      dispatch(receiveSearchProducts(response));\n    },\n    (error) => dispatch(fetchSearchProductsFailure(error))\n  );\n\n  return subscription;\n};\n\nexport default search;\n","import * as ProductServices from \"services/productServices\";\nimport * as userServices from \"services/userServices\";\nimport { normalize } from \"normalizr\";\nimport { arrayOfProducts, product } from \"../utils/schema\";\nimport search from \"utils/search\";\nimport { retrieveCommandFromShoppingList } from \"utils\";\n\nconst fetchProducts = (paginationLink = null, category = \"others\") => (\n  dispatch\n) => {\n  dispatch(fetchProductsRequest(category));\n  return ProductServices.fetchProducts(paginationLink, category)\n    .then((response) => {\n      dispatch(receiveProducts(response, category));\n      dispatch(addNotification(\"Products fetched successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(fetchProductsFailure(error, category));\n      dispatch(\n        addNotification(\"There was an error while fetching the products\")\n      );\n    });\n};\n\nconst fetchCategories = () => (dispatch) => {\n  return ProductServices.fetchCategories()\n    .then((response) => {\n      dispatch(receiveCategories(response));\n      dispatch(addNotification(\"Categories fetched successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(\n        addNotification(\"There was an error while fetching the categories\")\n      )\n    );\n};\n\nconst receiveCategories = (response) => {\n  return {\n    type: \"FETCH_CATEGORIES_SUCCESS\",\n    response: response.data.data,\n  };\n};\n\nconst fetchProduct = (productId) => (dispatch) => {\n  dispatch(fetchProductRequest());\n  return ProductServices.fetchProduct(productId)\n    .then((response) => {\n      dispatch(receiveProduct(response));\n      dispatch(addNotification(\"Product fetched successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(fetchProductFailure(error));\n      addNotification(\"There was an error while fetching the product\");\n    });\n};\n\n// const receiveProductLikes = (response) => {};\n// const fetchProductLikesFailure = () => {};\n\n// const fetchProductComments = (productId) => (dispatch) => {\n//   return ProductServices.fetchProductComments(productId).then(\n//     (response) => dispatch(receiveProductComments(response)),\n//     (error) => dispatch(fetchProductCommentsFailure(error))\n//   );\n// };\n\nconst receiveProduct = (response) => {\n  return {\n    type: \"FETCH_PRODUCT_SUCCESS\",\n    response: normalize(response.data.data, product),\n  };\n};\n\nconst addNotification = (notification) => ({\n  type: \"ADD_NOTIFICATION\",\n  notification,\n});\n\n// const fetchProductCommentsFailure = (error) => {\n//   return {\n//     type: \"FETCH_PRODUCT_COMMENTS_FAILURE\",\n//     message: error.message,\n//   };\n// };\n\n// const receiveProductComments = (response) => {\n//   return {\n//     type: \"FETCH_PRODUCT_COMMENTS_SUCCESS\",\n//     response: normalize(response.data.data, arrayOfComments),\n//   };\n// };\n\nconst fetchProductRequest = () => {\n  return {\n    type: \"FETCH_PRODUCT_REQUEST\",\n  };\n};\nconst fetchProductFailure = (error) => {\n  return {\n    type: \"FETCH_PRODUCT_FAILURE\",\n    message: error.message || \"there was an error while fetching the product\",\n  };\n};\n\nconst fetchProductsRequest = (category = \"others\") => {\n  return {\n    type: \"FETCH_PRODUCTS_REQUEST\",\n    category,\n  };\n};\n\nconst fetchProductsFailure = (error, category) => {\n  return {\n    type: \"FETCH_PRODUCTS_FAILURE\",\n    message: error.message || \"There was an error while fetching the products\",\n    category,\n  };\n};\nconst fetchSearchProductsRequest = () => {\n  return {\n    type: \"FETCH_SEARCH_PRODUCTS_REQUEST\",\n  };\n};\nconst fetchSearchProductsFailure = (error) => {\n  return {\n    type: \"FETCH_SEARCH_PRODUCTS_FAILURE\",\n    message: error.message || \"There was an error while fetching the products\",\n  };\n};\n\nconst receiveProducts = (response, category = \"others\") => {\n  return {\n    type: \"FETCH_PRODUCTS_SUCCESS\",\n    response: normalize(response.data.data, arrayOfProducts),\n    category,\n    links: response.data.links,\n    meta: response.data.meta,\n  };\n};\n\nconst receiveSearchProducts = (response) => {\n  return {\n    type: \"FETCH_SEARCH_PRODUCTS_SUCCESS\",\n    response: normalize(response.data.data, arrayOfProducts),\n  };\n};\n\nconst addToShoppingList = (product, quantity) => {\n  return {\n    type: \"ADD_LIST_ITEM\",\n    product,\n    quantity,\n  };\n};\n\nconst getShoppingList = () => {\n  return {\n    type: \"GET_LIST_ITEMS\",\n  };\n};\n\nconst getLikedProducts = () => (dispatch) => {\n  dispatch(getLikedProductsRequest());\n  return userServices\n    .getLikedProducts()\n    .then((response) => {\n      dispatch(getLikedProductsSuccess(response));\n      dispatch(addNotification(\"Liked products fetched successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(getLikedProductsFailure(error));\n      dispatch(\n        addNotification(\"There was an error while fetching the liked products\")\n      );\n    });\n};\nconst getLikedProductsRequest = () => ({\n  type: \"GET_LIKE_LIST_REQUEST\",\n});\n\nconst getLikedProductsSuccess = (response) => {\n  return {\n    type: \"GET_LIKE_LIST_SUCCESS\",\n    response: response.data.data.likes,\n  };\n};\nconst getLikedProductsFailure = (error) => ({\n  type: \"GET_LIKE_LIST_FAILURE\",\n  message: error.message,\n});\n\nconst addToLikeList = (productId) => (dispatch) => {\n  dispatch({ type: \"LIKE_REQUEST\" });\n  return ProductServices.likeProduct(productId)\n    .then((response) => {\n      dispatch(addToLikeListSuccess(response));\n      dispatch({ type: \"LIKE_SUCCESS\" });\n      dispatch(addNotification(\"Product liked successfuly\"));\n    })\n    .catch((error) => {\n      dispatch({ type: \"LIKE_FAILURE\" });\n      dispatch(addNotification(\"There was an error while liking the product\"));\n    });\n};\nconst removeFromLikeList = (productId) => (dispatch) => {\n  dispatch({ type: \"LIKE_REQUEST\" });\n  return ProductServices.unlikeProduct(productId)\n    .then((response) => {\n      dispatch(removeFromLikeListSuccess(response));\n      dispatch({ type: \"LIKE_SUCCESS\" });\n      dispatch(addNotification(\"Product disliked successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(addNotification(\"There was an error while liking the product\"))\n    );\n};\n\nconst addToLikeListSuccess = (response) => {\n  console.log(\"liking:\", response);\n  return {\n    type: \"ADD_TO_LIKE_LIST\",\n    response: response.data.data,\n  };\n};\n\nconst removeFromLikeListSuccess = (response) => {\n  console.log(\"unliking:\", response);\n  return {\n    type: \"REMOVE_FROM_LIKE_LIST\",\n    response: response.data.data,\n  };\n};\n\nconst removeFromShoppingList = (productId) => {\n  return {\n    type: \"REMOVE_LIST_ITEM\",\n    id: productId,\n  };\n};\n\nconst removeIngredient = (ingredient, productId) => {\n  return {\n    type: \"REMOVE_INGREDIENT\",\n    ingredient,\n    productId,\n  };\n};\n\nconst clearSearchResults = () => {\n  return {\n    type: \"CLEAR_SEARCH_RESULTS\",\n  };\n};\n\nconst searchProduct = () => (dispatch) => {\n  return search(dispatch);\n};\n\nconst login = (credentials, history) => (dispatch) => {\n  dispatch(userLoginRequest());\n  return userServices\n    .userLogin(credentials)\n    .then((response) => {\n      dispatch(receiveUser(response));\n      history.push(\"/home\");\n      dispatch(addNotification(\"You're logged in\"));\n    })\n    .catch((error) => dispatch(addNotification(error)));\n};\n\nconst receiveUser = (response) => ({\n  type: \"USER_LOGIN_SUCCESS\",\n  response: response.data,\n});\nconst userLoginRequest = () => ({\n  type: \"USER_LOGIN_REQUEST\",\n});\nconst userLoginfailure = (error) => ({\n  type: \"USER_LOGIN_FAILURE\",\n  message: error.message,\n});\n\nconst updatePassword = (oldPassword, newPassword, confirmation) => (\n  dispatch\n) => {\n  return userServices\n    .updatePassword(oldPassword, newPassword, confirmation)\n    .then((response) => {\n      dispatch(addNotification(\"Password updated successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(\n        addNotification(\"There was an error while changing the password\")\n      );\n    });\n};\n\nconst updateUserInformation = (informations) => (dispatch) => {\n  return userServices\n    .updateUserInformation(informations)\n    .then((response) => {\n      dispatch(receiveUser(response.data));\n      dispatch(addNotification(\"Informations updated successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while updating profile\"));\n    });\n};\n\nconst register = (credentials) => (dispatch) => {\n  dispatch(userRegisterRequest());\n  return userServices\n    .userRegister(credentials)\n    .then((response) => {\n      dispatch(userRegisterSuccess(response));\n      dispatch(addNotification(\"Your account has been created\"));\n    })\n    .catch((error) => {\n      dispatch(userRegisterfailure(error));\n      dispatch(\n        addNotification(\"There was an error while creating your account\")\n      );\n    });\n};\n\nconst userRegisterSuccess = (response) => ({\n  type: \"USER_REGISTER_SUCCESS\",\n  response,\n});\nconst userRegisterRequest = () => ({\n  type: \"USER_REGISTER_REQUEST\",\n});\nconst userRegisterfailure = (error) => ({\n  type: \"USER_REGISTER_FAILURE\",\n  message: error.message,\n});\n\nconst logout = (history) => (dispatch) => {\n  userLogoutRequest();\n  return userServices\n    .userLogout()\n    .then((response) => {\n      dispatch(userLogoutSuccess(response));\n      dispatch({ type: \"CLEAR_SHOOPING_LIST\" });\n      history.push(\"/\");\n      dispatch(addNotification(\"You're logged out\"));\n      window.location.reload();\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while logging out\"));\n      dispatch(userLogoutfailure(error));\n      history.push(\"/\");\n    });\n};\n\nconst userLogoutSuccess = (response) => ({\n  type: \"USER_LOGOUT_SUCCESS\",\n  response: response.data,\n});\nconst userLogoutRequest = () => ({\n  type: \"USER_LOGOUT_REQUEST\",\n});\nconst userLogoutfailure = (error) => ({\n  type: \"USER_LOGOUT_FAILURE\",\n  message: error.message,\n});\n\nconst addComment = (comment, productId) => (dispatch) => {\n  return userServices\n    .addComment(comment, productId)\n    .then((response) => {\n      dispatch(receiveComment(response, productId));\n      dispatch(addNotification(\"Comment added successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while adding the comment\"));\n    });\n};\n\nconst receiveComment = (response, productId) => ({\n  type: \"ADD_COMMENT\",\n  response: response.data.data,\n  productId,\n});\n\nconst removeComment = (commentId, productId) => (dispatch) => {\n  return userServices\n    .removeComment(commentId)\n    .then((response) => {\n      dispatch(removeCommentSuccess(response, productId, commentId));\n      dispatch(addNotification(\"Comment removed successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(addNotification(\"There was an error while removing the comment\"))\n    );\n};\n\nconst removeCommentSuccess = (response, productId, commentId) => ({\n  type: \"REMOVE_COMMENT\",\n  productId,\n  commentId,\n});\n\nconst editComment = (comment, productId, commentId) => (dispatch) => {\n  return userServices\n    .editComment(comment, commentId)\n    .then((response) => {\n      dispatch(receiveEditedComment(response, productId, commentId));\n      dispatch(addNotification(\"Comment edited successfuly\"));\n    })\n    .catch((error) =>\n      dispatch(addNotification(\"There was an error while editing the comment\"))\n    );\n};\n\nconst receiveEditedComment = (response, productId, commentId) => ({\n  type: \"EDIT_COMMENT\",\n  response: response.data.data,\n  productId,\n  commentId,\n});\n\nconst addCommand = (shoppingList, address) => (dispatch) => {\n  const command = retrieveCommandFromShoppingList(shoppingList, address);\n  return ProductServices.sendCommand(command)\n    .then((response) => {\n      dispatch(receiveCommand(response));\n      dispatch({ type: \"CLEAR_SHOOPING_LIST\" });\n      dispatch(addNotification(\"Command added successfuly\"));\n    })\n    .catch((error) => {\n      dispatch(addNotification(\"There was an error while adding a command\"));\n    });\n};\n\nconst getCommands = () => (dispatch) => {\n  dispatch({ type: \"FETCH_COMMANDS_REQUEST\" });\n  return ProductServices.getCommands()\n    .then((response) => {\n      dispatch({\n        type: \"FETCH_COMMANDS_SUCCESS\",\n        response: response.data.data,\n      });\n      dispatch(addNotification(\"Commands fetched successfuly\"));\n    })\n    .catch(() => {\n      dispatch({ type: \"FETCH_COMMANDS_FAILURE\" });\n      dispatch(\n        addNotification(\"There was an error while fetching the commands\")\n      );\n    });\n};\n\nconst clearCommands = () => ({\n  type: \"CLEAR_COMMANDS_LIST\",\n});\n\nconst receiveCommand = (response) => ({\n  type: \"ADD_COMMAND_SUCCESS\",\n  response: response.data.data,\n});\n\nexport {\n  clearCommands,\n  getCommands,\n  fetchProducts,\n  receiveProducts,\n  fetchProductsFailure,\n  fetchProductsRequest,\n  addToShoppingList,\n  getShoppingList,\n  removeFromShoppingList,\n  getLikedProducts,\n  addToLikeList,\n  removeIngredient,\n  fetchProductFailure,\n  fetchProductRequest,\n  fetchProduct,\n  fetchCategories,\n  fetchSearchProductsFailure,\n  receiveSearchProducts,\n  fetchSearchProductsRequest,\n  clearSearchResults,\n  searchProduct,\n  login,\n  receiveUser,\n  register,\n  logout,\n  userLogoutSuccess,\n  userLogoutRequest,\n  userLogoutfailure,\n  removeFromLikeList,\n  addComment,\n  removeComment,\n  editComment,\n  addCommand,\n  updatePassword,\n  updateUserInformation,\n};\n","import apiClient from \"services/apiClient\";\n\nconst userLogin = ({ email, password }) => {\n  return apiClient.post(\"clients/login\", JSON.stringify({ email, password }));\n};\n\nconst userRegister = ({ firstName, phone, email, password }) => {\n  return apiClient.post(\n    \"clients/register\",\n    JSON.stringify({ firstName, phone, email, password })\n  );\n};\n\nconst userLogout = () => {\n  return apiClient.post(\"clients/logout\");\n};\n\nconst getLikedProducts = () => {\n  return apiClient.get(\"clients/profile\");\n};\n\nconst addComment = (comment, productId) => {\n  return apiClient.post(\n    `clients/comments/${productId}`,\n    JSON.stringify({ comment, product_id: productId })\n  );\n};\nconst removeComment = (commentId) => {\n  return apiClient.delete(`clients/comments/${commentId}`);\n};\n\nconst editComment = (comment, commentId) => {\n  return apiClient.patch(\n    `clients/comments/${commentId}`,\n    JSON.stringify({ comment, product_id: commentId })\n  );\n};\n\nconst updatePassword = (oldPassword, newPassword, confirmation) => {\n  console.log(\"confirmation\", confirmation);\n  return apiClient.patch(\n    \"/clients/password\",\n    JSON.stringify({\n      old_password: oldPassword,\n      new_password: newPassword,\n      new_password_confirmation: confirmation,\n    })\n  );\n};\n\nconst updateUserInformation = (informations) => {\n  return apiClient.patch(\"clients/profile\", JSON.stringify(informations));\n};\n\nexport {\n  userLogin,\n  userRegister,\n  userLogout,\n  getLikedProducts,\n  addComment,\n  removeComment,\n  editComment,\n  updatePassword,\n  updateUserInformation,\n};\n","import convertStringToArray from \"./convertStringToArray\";\nimport { v4 } from \"uuid\";\nimport _ from \"lodash\";\n\nexport const retrieveCommandFromShoppingList = (shoppingList, address) => {\n  const generatedId = v4();\n  return shoppingList.map((product, description) => ({\n    product_id: product.details.id,\n    quantity: product.details.quantity,\n    recipe: convertStringToArray(product.details.recipe),\n    description,\n    price: product.details.price,\n    address,\n    command_group_id: generatedId,\n  }));\n};\n\nexport const groupItemsById = (commands) => {\n  return _.chain(commands)\n    .groupBy(\"command_group_id\")\n    .map(function (v, i) {\n      return {\n        commandGroupId: i,\n        client: _.get(_.find(v, \"client\"), \"client\"),\n        createdAt: _.get(_.find(v, \"created_at\"), \"created_at\"),\n        address: _.get(_.find(v, \"address\"), \"address\"),\n        product: _.map(v, \"product\"),\n        delivery_state: _.map(v, \"delivery_state\"),\n        quantity: _.map(v, \"quantity\"),\n        quantitySum: _.map(v, \"quantity\").reduce((acc, curr) => acc + curr),\n        price: _.map(v, \"price\").reduce((acc, curr) => acc + curr),\n        description: _.map(v, \"description\"),\n      };\n    })\n    .value();\n};\n","import React from \"react\";\n\nconst ErrorsContainer = ({ errors }) => {\n  const keys = Object.keys(errors);\n  return (\n    <div className=\"errors__container\">\n      {errors &&\n        keys.map((key, i) => (\n          <li key={i}>\n            The {key} is {errors[key]}\n          </li>\n        ))}\n    </div>\n  );\n};\n\nexport default ErrorsContainer;\n","import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions\";\nimport {\n  ButtonToolbar,\n  ControlLabel,\n  FormGroup,\n  Form,\n  Button,\n  Modal,\n} from \"rsuite\";\nimport ErrorsContainer from \"./ErrorsContainer\";\n\nlet UserPasswordForm = ({ updatePassword, closeModal }) => {\n  const formik = useFormik({\n    initialValues: {\n      old_password: \"\",\n      password: \"\",\n      confirm: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      const isSure = window.confirm(\n        \"Are you sure you want to perceed with this action ?\"\n      );\n\n      if (isSure) {\n        updatePassword(values.old_password, values.password, values.confirm);\n        closeModal();\n      }\n    },\n  });\n\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <Form\n        layout=\"vertical\"\n        onSubmit={formik.handleSubmit}\n        style={{ marginTop: \"5%\" }}\n      >\n        <FormGroup>\n          <ControlLabel></ControlLabel>\n\n          <TextField\n            autoComplete=\"password\"\n            name=\"old_password\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            id=\"old_password\"\n            type=\"password\"\n            label=\"Old password\"\n            onChange={formik.handleChange}\n            value={formik.values.old_password}\n          />\n        </FormGroup>\n        <FormGroup>\n          <TextField\n            autoComplete=\"password\"\n            name=\"password\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            id=\"password\"\n            type=\"password\"\n            label=\"New password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            id=\"confirm\"\n            label=\"Confirm password\"\n            type=\"password\"\n            name=\"confirm\"\n            onChange={formik.handleChange}\n            value={formik.values.confirm}\n          />\n        </FormGroup>\n        <FormGroup>\n          <ButtonToolbar>\n            <Button appearance=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </ButtonToolbar>\n        </FormGroup>\n      </Form>\n    </>\n  );\n};\n\nUserPasswordForm = connect(null, actions)(UserPasswordForm);\n\nconst UserPasswordModal = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ButtonToolbar>\n        <Button appearance=\"link\" onClick={() => setShow(true)}>\n          Change password\n        </Button>\n      </ButtonToolbar>\n\n      <Modal size=\"xs\" show={show} onHide={() => setShow(false)}>\n        <Modal.Header>\n          <Modal.Title>Edit Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <UserPasswordForm closeModal={() => setShow(false)} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => setShow(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserPasswordModal;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.old_password) {\n    errors.old_password = \"Required\";\n  } else if (values.old_password.length > 15) {\n    errors.old_password = \"15 characters or less\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  if (values.password !== values.confirm) {\n    errors.password = \"Not matching\";\n  }\n  return errors;\n};\n","import { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n  Modal,\n  Button,\n  ButtonToolbar,\n  Avatar,\n  FormGroup,\n  ControlLabel,\n  Form,\n} from \"rsuite\";\n\nimport * as selectors from \"../store/reducers\";\nimport * as actions from \"../store/actions\";\nimport { useFormik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport UserPasswordModal from \"./UserPasswordModal\";\nimport ErrorsContainer from \"./ErrorsContainer\";\n\nconst mapStateToProps = (state) => ({\n  currentUser: selectors.getCurrentUser(state),\n});\n\nlet UserInformationForm = ({\n  currentUser,\n  updateUserInformation,\n  closeModal,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: currentUser.name,\n      email: currentUser.email,\n      phone: currentUser.phone,\n      address: currentUser.address,\n    },\n    validate,\n    onSubmit: (values) => {\n      const isSure = window.confirm(\n        \"Are you sure you want to perceed with this action ?\"\n      );\n\n      if (isSure) {\n        updateUserInformation({\n          name: values.firstName,\n          email: values.email,\n          phone: values.phone,\n          address: values.address,\n        });\n        closeModal();\n      }\n    },\n  });\n\n  if (currentUser) {\n    return (\n      <>\n        {Object.keys(formik.errors).length !== 0 && (\n          <ErrorsContainer errors={formik.errors} />\n        )}\n        <Form\n          layout=\"vertical\"\n          onSubmit={formik.handleSubmit}\n          style={{ marginTop: \"5%\" }}\n          fluid\n        >\n          <FormGroup>\n            <ControlLabel></ControlLabel>\n            <TextField\n              autoComplete=\"fname\"\n              name=\"firstName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First Name\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.firstName}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone number\"\n              name=\"phone\"\n              autoComplete=\"phone\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"address\"\n              label=\"Address\"\n              name=\"address\"\n              autoComplete=\"address\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.address}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ButtonToolbar>\n              <Button appearance=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n              <UserPasswordModal />\n            </ButtonToolbar>\n          </FormGroup>\n        </Form>\n      </>\n    );\n  }\n  return null;\n};\n\nUserInformationForm = connect(mapStateToProps, actions)(UserInformationForm);\n\nconst UserModal = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ButtonToolbar>\n        <Avatar\n          onClick={() => setShow(true)}\n          circle\n          size=\"md\"\n          src=\"https://lorempixel.com/640/480/?32997\"\n        />\n      </ButtonToolbar>\n\n      <Modal size=\"sm\" show={show} onHide={() => setShow(false)}>\n        <Modal.Header>\n          <Modal.Title>User informations</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <UserInformationForm closeModal={() => setShow(false)} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => setShow(false)} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\nexport default UserModal;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (values.firstName.length > 15) {\n    errors.firstName = \"15 characters or less\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport Ingredient from \"./Ingredient\";\nimport icons from \"../../../assets/img/icons.svg\";\nimport { useFormik } from \"formik\";\nimport ErrorsContainer from \"components/ErrorsContainer\";\n\nlet maxQuantity;\nconst Ingredients = ({\n  ingredients,\n  product,\n  addToShoppingList,\n  fetchProduct,\n  removeIngredient,\n}) => {\n  maxQuantity = product.quantity;\n  const formik = useFormik({\n    initialValues: {\n      unit: 1,\n    },\n    validate,\n  });\n\n  if (ingredients) {\n    return (\n      <>\n        <div className=\"recipe__ingredients\">\n          {\" \"}\n          <span className=\"shopping__count\">\n            <input\n              type=\"number\"\n              value={formik.values.unit}\n              id=\"unit\"\n              name=\"unit\"\n              onChange={formik.handleChange}\n              placeholder=\"1\"\n              max={product.quantity}\n              min=\"1\"\n            />\n          </span>\n          <ul className=\"recipe__ingredient-list\">\n            {ingredients.map((ingredient, i) => (\n              <Ingredient\n                ingredient={ingredient}\n                removeIngredient={removeIngredient}\n                product={product}\n                key={i}\n              />\n            ))}\n          </ul>\n          {Object.keys(formik.errors).length !== 0 && (\n            <ErrorsContainer errors={formik.errors} />\n          )}\n          {Object.keys(formik.errors).length === 0 && (\n            <button\n              className=\"btn-small recipe__btn\"\n              onClick={() => {\n                console.log(\"the product is : \", product);\n                addToShoppingList(product, formik.values.unit);\n                fetchProduct(product.id);\n              }}\n            >\n              <svg className=\"search__icon\">\n                <use href={icons + \"#icon-shopping-cart\"}></use>\n              </svg>\n              <span>Add to shopping list</span>\n            </button>\n          )}\n        </div>\n      </>\n    );\n  }\n  return <p>Cannot find product</p>;\n};\n\nexport default Ingredients;\nconst validate = (values) => {\n  const errors = {};\n  if (values.unit <= 0) {\n    errors.unit = \"bigger than 1\";\n  } else if (maxQuantity && values.unit > maxQuantity) {\n    errors.unit = \"more than the product quantity\";\n  }\n  return errors;\n};\n","import React, { useEffect } from \"react\";\nimport logo from \"../../../assets/img/logo.png\";\nimport Search from \"./Search\";\nimport Likes from \"./LikesList\";\nimport Logo from \"./Logo\";\n\nimport { connect } from \"react-redux\";\nimport {\n  getLikedProducts,\n  getIsFetchingLike,\n  getNotifications,\n} from \"store/reducers\";\nimport * as actions from \"../../../store/actions\";\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\nimport Button from \"components/Button\";\nimport { useAuthenticated } from \"customHooks\";\nimport { Notification } from \"rsuite\";\n\nimport UserModal from \"components/UserInformationModal\";\n\nconst mapStateToProps = (state) => {\n  return {\n    likedProducts: getLikedProducts(state),\n    isFetching: getIsFetchingLike(state),\n    notifications: getNotifications(state),\n  };\n};\n\nlet Header = ({\n  getLikedProducts,\n  likedProducts,\n  fetchProduct,\n  searchProduct,\n  clearSearchResults,\n  receiveUser,\n  getCommands,\n  clearCommands,\n  notifications,\n  logout,\n}) => {\n  const { category } = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const isAuthenticated = useAuthenticated();\n\n  useEffect(() => {\n    if (notifications) {\n      notifications.map((notification) => {\n        Notification.info({\n          title: \"Notification\",\n          duration: 3000,\n          description: notification,\n        });\n      });\n    }\n  }, [notifications]);\n  return (\n    <header className=\"header\">\n      <Logo\n        logo={logo}\n        clearSearchResults={clearSearchResults}\n        clearCommands={clearCommands}\n      />\n      {category && <Search searchProduct={searchProduct} />}\n      {isAuthenticated && category && (\n        <Likes\n          getLikedProducts={getLikedProducts}\n          likedProducts={likedProducts}\n          fetchProduct={fetchProduct}\n          receiveUser={receiveUser}\n          clearCommands={clearCommands}\n        />\n      )}\n      {isAuthenticated && <UserModal />}\n      {isAuthenticated && category && (\n        <Button\n          handleClick={() => {\n            getCommands();\n            if (clearSearchResults) {\n              clearSearchResults();\n            }\n          }}\n        >\n          {\" \"}\n          My commands\n        </Button>\n      )}\n      {location.pathname === \"/\" && <Button>Login</Button>}\n      {isAuthenticated && (\n        <Button\n          handleClick={() => {\n            logout(history);\n          }}\n        >\n          Logout\n        </Button>\n      )}\n    </header>\n  );\n};\n\nHeader = connect(mapStateToProps, actions)(Header);\n\nexport default Header;\n","import React from \"react\";\nconst PreviousPageButton = ({\n  icons,\n  clickHandler,\n  pageNumber,\n  isPrevious,\n}) => {\n  return (\n    <button\n      className={\n        isPrevious\n          ? \"btn-inline results__btn--prev\"\n          : \"btn-inline results__btn--next\"\n      }\n      onClick={() => {\n        clickHandler();\n      }}\n    >\n      <svg className=\"search__icon\">\n        <use\n          href={\n            isPrevious\n              ? icons + \"#icon-triangle-left\"\n              : icons + \"#icon-triangle-right\"\n          }\n        ></use>\n      </svg>\n      <span>Page {pageNumber}</span>\n    </button>\n  );\n};\n\nexport default PreviousPageButton;\n","import React from \"react\";\nimport icons from \"assets/img/icons.svg\";\nimport { getPaginationData, getSearchResults } from \"store/reducers\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"store/actions\";\nimport { useParams } from \"react-router-dom\";\nimport PaginationButton from \"./PaginationButton\";\n\nconst mapStateToProps = (state) => {\n  return {\n    pagination: getPaginationData(state),\n    searchResults: getSearchResults(state),\n  };\n};\n\nlet Pagination = ({ pagination, fetchProducts, searchResults }) => {\n  const { category } = useParams();\n  const firstPage = pagination.currentPage - 1 !== 0;\n  const lastPage = pagination.currentPage !== pagination.lastPage;\n  return (\n    <div className=\"results__pages\">\n      {!searchResults && category && firstPage && (\n        <PaginationButton\n          isPrevious={true}\n          icons={icons}\n          pageNumber={pagination.currentPage - 1 || 1}\n          clickHandler={() => fetchProducts(pagination.prevLink, category)}\n        />\n      )}\n      {!searchResults && category && lastPage && (\n        <PaginationButton\n          isPrevious={false}\n          icons={icons}\n          pageNumber={pagination.currentPage + 1 || 1}\n          clickHandler={() => fetchProducts(pagination.nextLink, category)}\n        />\n      )}\n    </div>\n  );\n};\n\nPagination = connect(mapStateToProps, actions)(Pagination);\n\nexport default Pagination;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Item = ({ product, isActive, clearSearchResults, clearCommands }) => {\n  return (\n    <li>\n      <Link\n        className={\n          isActive\n            ? \"results__link results__link--active\"\n            : \"results__link results__link\"\n        }\n        to={product.category.title + \"#\" + product.id}\n        onClick={() => {\n          /*\n            - if there is a clearSearchResults function it means we have search results\n          */\n          if (clearSearchResults) {\n            clearSearchResults();\n          }\n          if (clearCommands) {\n            clearCommands();\n          }\n        }}\n      >\n        <figure className=\"results__fig\">\n          <img src={product.image} alt={product.description} />\n        </figure>\n        <div className=\"results__data\">\n          <h4 className=\"results__name\">{product.title}</h4>\n          <p className=\"results__author\">{product.company.title}</p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Product from \"./Product\";\nconst List = ({ products, location, clearSearchResults, clearCommands }) => {\n  const currentProductId = location?.hash.replace(\"#\", \"\") ?? 1;\n  return (\n    <ul className=\"results__list\">\n      {products.map((product) => {\n        if (product.quantity > 0) {\n          return (\n            <Product\n              product={product}\n              isActive={+currentProductId === product.id}\n              key={product.id}\n              clearSearchResults={clearSearchResults}\n              clearCommands={clearCommands}\n            />\n          );\n        }\n        return null;\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n","import React, { useEffect } from \"react\";\nimport List from \"./List\";\nimport {\n  getVisibleProducts,\n  getIsFetching,\n  getErrorMessage,\n  getSearchResults,\n} from \"store/reducers\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport { withRouter } from \"react-router-dom\";\nimport icons from \"assets/img/icons.svg\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    products: getVisibleProducts(state, ownProps.match.params.category),\n    isFetching: getIsFetching(state, ownProps.match.params.category),\n    searchResults: getSearchResults(state),\n    errorMessage: getErrorMessage(state, ownProps.match.params.category),\n  };\n};\n\nlet Products = ({\n  products,\n  isFetching,\n  errorMessage,\n  fetchProducts,\n  match,\n  location,\n  clearCommands,\n  searchResults,\n}) => {\n  useEffect(() => {\n    fetchProducts(null, match.params.category).then(() =>\n      console.log(\"done !\")\n    );\n  }, [match.params.category, fetchProducts]);\n  if (isFetching)\n    return (\n      <div className=\"load\">\n        <svg>\n          <use href={icons + \"#icon-cw\"}></use>\n        </svg>\n      </div>\n    );\n  if (errorMessage) return <p>there was an error while fetching</p>;\n  if (!match.params.category)\n    return <h2 className=\"heading-2\">Please select a category</h2>;\n  if (!searchResults)\n    return (\n      <List\n        products={products}\n        location={location}\n        clearCommands={clearCommands}\n      />\n    );\n  return <h2 className=\"heading-2\">Please select a product</h2>;\n};\n\nProducts = withRouter(connect(mapStateToProps, actions)(Products));\n\nexport default Products;\n","import React from \"react\";\nimport Pagination from \"./Pagination\";\nimport Products from \"./Products\";\n\nlet Result = () => {\n  return (\n    <div className=\"results\">\n      <Products />\n      <Pagination />\n    </div>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\n\nconst Figure = ({ product }) => {\n  return (\n    <figure className=\"recipe__fig\">\n      <img src={product.image} alt={product.name} className=\"recipe__img\" />\n      <h1 className=\"recipe__title\">\n        <span>{product.description}</span>\n      </h1>\n    </figure>\n  );\n};\n\nexport default Figure;\n","import React from \"react\";\nimport icons from \"assets/img/icons.svg\";\nimport debounce from \"lodash/debounce\";\nconst LikeButton = ({ clickHandler, isLiked }) => {\n  return (\n    <button className=\"recipe__love\" onClick={() => clickHandler()}>\n      {\n        <svg className=\"header__likes\">\n          <use\n            href={\n              isLiked ? icons + \"#icon-heart\" : icons + \"#icon-heart-outlined\"\n            }\n          ></use>\n        </svg>\n      }\n    </button>\n  );\n};\n\nexport default LikeButton;\n","import React from \"react\";\nimport icons from \"assets/img/icons.svg\";\n\nconst LikesInfo = ({ likes }) => {\n  return (\n    <div className=\"recipe__info-buttons\">\n      {likes &&\n        likes.map((_, i) => {\n          if (i >= 5) return null;\n          return (\n            <React.Fragment key={i}>\n              <button className=\"btn-tiny\">\n                <svg>\n                  <use href={icons + \"#icon-heart\"}></use>\n                </svg>\n              </button>\n            </React.Fragment>\n          );\n        })}\n      <button className=\"btn-tiny\">({likes && likes.length})</button>\n    </div>\n  );\n};\n\nexport default LikesInfo;\n","import React from \"react\";\nimport icons from \"assets/img/icons.svg\";\nimport LikesInfo from \"./LikesInfo\";\nconst RecipeInfo = ({ likes }) => {\n  return (\n    <div className=\"recipe__info\">\n      <svg className=\"recipe__info-icon\">\n        <use href={icons + \"#icon-man\"}></use>\n      </svg>\n      <span className=\"recipe__info-data recipe__info-data--people\">4</span>\n      <span className=\"recipe__info-text\"> servings</span>\n      {<LikesInfo likes={likes} />}\n    </div>\n  );\n};\n\nexport default RecipeInfo;\n","import React from \"react\";\nimport icons from \"../../../assets/img/icons.svg\";\nimport LikeButton from \"./LikeButton\";\nimport RecipeInfo from \"./RecipeInfo\";\n\nconst RecipeDetails = ({\n  product,\n  addToLikeList,\n  removeFromLikeList,\n  isLiked,\n  likes,\n  fetchProduct,\n  isFetching,\n}) => {\n  return (\n    <div className=\"recipe__details\">\n      <div className=\"recipe__info\">\n        <svg className=\"recipe__info-icon\">\n          <use href={icons + \"#icon-stopwatch\"}></use>\n        </svg>\n        <span className=\"recipe__info-data recipe__info-data--minutes\">45</span>\n        <span className=\"recipe__info-text\"> minutes</span>\n      </div>\n      <RecipeInfo likes={likes} />\n      {\n        <LikeButton\n          clickHandler={() => {\n            if (!isLiked) {\n              addToLikeList(product.id, isLiked);\n            } else {\n              removeFromLikeList(product.id, isLiked);\n            }\n            fetchProduct(product.id);\n          }}\n          isLiked={isLiked}\n        ></LikeButton>\n      }\n    </div>\n  );\n};\n\nexport default RecipeDetails;\n","import React from \"react\";\nimport icons from \"../../../assets/img/icons.svg\";\nconst Ingredient = ({ ingredient, removeIngredient, product }) => {\n  return (\n    <li className=\"recipe__item\">\n      <button\n        className=\"btn-tiny\"\n        onClick={() => removeIngredient(ingredient, product.id)}\n      >\n        <svg className=\"recipe__icon\">\n          <use href={icons + \"#icon-circle-with-cross\"}></use>\n        </svg>\n      </button>\n      {/* <div className=\"recipe__count\">1/4</div> */}\n      <div className=\"recipe__ingredient\">\n        {/* <span className=\"recipe__unit\">cup</span> */}\n        {ingredient}\n      </div>\n      {/* <span className=\"shopping__count\">\n        <input type=\"number\" placeholder=\"1\" step=\"1\" max=\"3\" min=\"1\" />\n        <p>unit</p>\n      </span> */}\n    </li>\n  );\n};\n\nexport default Ingredient;\n","import React from \"react\";\nimport TextField from \"../header/TextField\";\nimport Button from \"components/Button\";\nconst inputRef = React.createRef();\nconst CommentSection = ({\n  addComment,\n  editComment,\n  product,\n  isEditing,\n  commentId,\n  setIsEditing,\n}) => {\n  return (\n    <form className=\"comment\" onSubmit={(e) => e.preventDefault()}>\n      <TextField placeholder=\"Do you like this product ?\" ref={inputRef} />\n      <Button\n        handleClick={() => {\n          if (isEditing) {\n            editComment(inputRef.current.value, product.id, commentId);\n            setIsEditing(false);\n          } else {\n            addComment(inputRef.current.value, product.id);\n          }\n          inputRef.current.value = \"\";\n        }}\n      >\n        Add comment\n      </Button>\n    </form>\n  );\n};\n\nexport default CommentSection;\nexport { inputRef };\n","import React from \"react\";\nimport { inputRef } from \"./CommentSection\";\n\nconst Comment = ({\n  comment,\n  currentUserId,\n  product,\n  removeComment,\n  setIsEditing,\n  setCommentId,\n}) => {\n  return (\n    <>\n      <li>\n        <a className=\"results__link results__link--active\" href=\"#\">\n          <div className=\"results__data\">\n            <h4 className=\"results__name\">{comment.client_name}</h4>\n            <p className=\"results__author\">{comment.comment}</p>\n            <span className=\"results__time\">\n              Created at: {comment.created_at}\n            </span>\n          </div>\n        </a>\n      </li>\n      {comment.client_id === currentUserId && (\n        <button\n          className=\"btn-options\"\n          onClick={() => {\n            const confirm = window.confirm(\n              \"are you sure you want to delete this comment ?\"\n            );\n            if (confirm) removeComment(comment.id, product.id);\n          }}\n        >\n          {\" \"}\n          Delete\n        </button>\n      )}\n      {comment.client_id === currentUserId && (\n        <button\n          className=\"btn-options\"\n          onClick={() => {\n            inputRef.current.value = comment.comment;\n            setIsEditing(true);\n            setCommentId(comment.id);\n          }}\n        >\n          {\" \"}\n          Edit\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./Comment\";\n\nconst Comments = ({\n  comments,\n  currentUserId,\n  product,\n  removeComment,\n  setIsEditing,\n  setCommentId,\n}) => {\n  return (\n    <ul className=\"results__list\">\n      {comments &&\n        comments.map((comment, i) => (\n          <Comment\n            comment={comment}\n            product={product}\n            removeComment={removeComment}\n            currentUserId={currentUserId}\n            setIsEditing={setIsEditing}\n            setCommentId={setCommentId}\n            key={i}\n          />\n        ))}\n    </ul>\n  );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Category = ({ category }) => {\n  return (\n    <figure className=\"category__fig\">\n      <img\n        src={category.image}\n        alt={category.title}\n        className=\"category__img\"\n      />\n      <h1 className=\"category__title\">\n        <Link to={\"/home/\" + category.title}>\n          <span>{category.title}</span>\n        </Link>\n      </h1>\n    </figure>\n  );\n};\n\nexport default Category;\n","import React from \"react\";\nimport convertStringToArray from \"utils/convertStringToArray\";\n\nconst Command = ({\n  product,\n  createdAt,\n  deliveryState,\n  price,\n  description,\n  quantity,\n  commandGroupId,\n  address,\n  author,\n}) => {\n  return (\n    <>\n      <li>\n        <div className=\"results__data\">\n          {\n            <h4 className=\"results__command-id\">\n              Command id :{commandGroupId}\n            </h4>\n          }\n          <p className=\"results__author\">Author : {author.name}</p>\n          {product.map((product, i) => (\n            <React.Fragment key={i}>\n              <br />\n              <p className=\"results__author\">Product : {product.title}</p>\n              <figure className=\"category__fig\">\n                <img\n                  src={product.image}\n                  alt={product.title}\n                  className=\"category__img\"\n                />\n              </figure>\n              <p className=\"results__author\">\n                Recipe :\n                {convertStringToArray(product.recipe).map((ingredient, i) =>\n                  i === 0 ? `${ingredient}` : `,${ingredient}`\n                )}\n              </p>\n              <p className=\"results__author\">Description : {description[i]}</p>\n              <p className=\"results__author\">Quantity : {quantity[i]}</p>\n              <p className=\"results__state\">\n                Delivery state : {deliveryState[i]}\n              </p>\n              <br />\n            </React.Fragment>\n          ))}\n\n          <p className=\"results__address\">Delivery address : {address}</p>\n          <span className=\"results__time\">Created at : {createdAt}</span>\n        </div>\n      </li>\n      <br />\n    </>\n  );\n};\n\nexport default Command;\n","import React from \"react\";\nimport Command from \"./Command\";\nimport { groupItemsById } from \"utils\";\n\nconst CommandsList = ({ commands }) => {\n  const commandsGroupedById = groupItemsById(commands);\n  return (\n    <ul className=\"results__list\">\n      {commandsGroupedById.map((command, i) => {\n        if (command.quantitySum > 0) {\n          return (\n            <Command\n              product={command.product}\n              createdAt={command.createdAt}\n              deliveryState={command.delivery_state}\n              address={command.address}\n              price={command.price}\n              description={command.description}\n              quantity={command.quantity}\n              commandGroupId={command.commandGroupId}\n              author={command.client}\n              key={i}\n            />\n          );\n        }\n        return null;\n      })}\n    </ul>\n  );\n};\n\nexport default CommandsList;\n","import React, { useEffect, useState } from \"react\";\nimport Figure from \"./Figure\";\nimport Details from \"./Details\";\nimport Ingredients from \"./IngredientsList\";\nimport * as selectors from \"store/reducers\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Comments from \"./CommentsList.jsx\";\nimport Category from \"./Category\";\nimport * as actions from \"store/actions\";\nimport icons from \"assets/img/icons.svg\";\nimport List from \"../results/List\";\nimport { useAuthenticated } from \"customHooks\";\nimport CommentSection from \"./CommentSection\";\nimport CommandsList from \"../shopping/CommandsList\";\nimport { getUser } from \"utils/localStorageHelpers\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    product: selectors.getVisibleProduct(\n      state,\n      ownProps.location.hash.replace(\"#\", \"\")\n    ),\n    isLiked: selectors.getIsProductLiked(\n      state,\n      ownProps.location.hash.replace(\"#\", \"\")\n    ),\n    likes: selectors.getLikes(state, ownProps.location.hash.replace(\"#\", \"\")),\n    comments: selectors.getProductComments(\n      state,\n      ownProps.location.hash.replace(\"#\", \"\")\n    ),\n    searchResults: selectors.getSearchResults(state),\n    commands: selectors.getCommands(state),\n    isSearching: selectors.getIsSearching(state),\n    isFetching: selectors.getIsFetching(state, ownProps.match.params.category),\n    isFetchingCommands: selectors.getIsFetchingCommands(state),\n    ingredients: selectors.getProductIngredients(\n      state,\n      ownProps.location.hash.replace(\"#\", \"\")\n    ),\n    categories: selectors.getCategories(state),\n    currentUser: selectors.getCurrentUser(state),\n    isFetchingLike: selectors.getIsFetchingLike(state),\n  };\n};\n\nlet Product = ({\n  product,\n  isLiked,\n  likes,\n  ingredients,\n  comments,\n  categories,\n  match,\n  isSearching,\n  searchResults,\n  fetchCategories,\n  addToShoppingList,\n  fetchProduct,\n  removeIngredient,\n  addToLikeList,\n  removeFromLikeList,\n  clearSearchResults,\n  addComment,\n  currentUser,\n  removeComment,\n  editComment,\n  isFetchingCommands,\n  commands,\n  receiveUser,\n  isFetchingLike,\n}) => {\n  const isAuthenticated = useAuthenticated();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      const user = getUser();\n      if (user) {\n        receiveUser({ data: user });\n        fetchCategories();\n      }\n    }\n  }, []);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [commentId, setCommentId] = useState(null);\n\n  if (isSearching)\n    return (\n      <div className=\"load\">\n        <svg>\n          <use href={icons + \"#icon-cw\"}></use>\n        </svg>\n      </div>\n    );\n\n  if (isFetchingCommands) {\n    return (\n      <div className=\"load\">\n        <svg>\n          <use href={icons + \"#icon-cw\"}></use>\n        </svg>\n      </div>\n    );\n  }\n\n  if (searchResults) {\n    return (\n      <List\n        clearSearchResults={clearSearchResults}\n        products={searchResults}\n      ></List>\n    );\n  }\n\n  if (commands.length > 0) {\n    return <CommandsList commands={commands} />;\n  }\n\n  if (match.params.category && product === undefined) {\n    return (\n      <h2 className=\"heading-2\" style={{ marginTop: \"50%\" }}>\n        Please select a product\n      </h2>\n    );\n  }\n\n  if (match.params.category) {\n    return (\n      <div className=\"recipe\">\n        <Figure product={product} />\n        <Details\n          product={product}\n          isFetching={isFetchingLike}\n          addToLikeList={addToLikeList}\n          removeFromLikeList={removeFromLikeList}\n          isLiked={isLiked}\n          fetchProduct={fetchProduct}\n          likes={likes}\n        />\n        <Ingredients\n          ingredients={ingredients}\n          product={product}\n          addToShoppingList={addToShoppingList}\n          fetchProduct={fetchProduct}\n          removeIngredient={removeIngredient}\n        />\n        <Comments\n          comments={comments}\n          currentUserId={currentUser.id}\n          product={product}\n          removeComment={removeComment}\n          setIsEditing={(val) => setIsEditing(val)}\n          setCommentId={(val) => setCommentId(val)}\n        />\n        {isAuthenticated && (\n          <CommentSection\n            addComment={addComment}\n            editComment={editComment}\n            product={product}\n            isEditing={isEditing}\n            commentId={commentId}\n            setIsEditing={(val) => setIsEditing(val)}\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"category\">\n      {categories.map((category) => (\n        <Category category={category} key={category.id} />\n      ))}\n    </div>\n  );\n};\n\nProduct = withRouter(connect(mapStateToProps, actions)(Product));\n\nexport default Product;\n","import React from \"react\";\nimport icons from \"../../../assets/img/icons.svg\";\n\nconst Product = ({ clickHandler, product }) => {\n  return (\n    <>\n      <li className=\"shopping__item\">\n        <p className=\"shopping__description\">{product.title}</p>\n        <button\n          className=\"shopping__delete btn-tiny\"\n          onClick={() => {\n            clickHandler();\n          }}\n        >\n          <svg>\n            <use href={icons + \"#icon-circle-with-cross\"}></use>\n          </svg>\n        </button>\n      </li>\n    </>\n  );\n};\n\nexport default Product;\n","import React, { useEffect } from \"react\";\nimport Product from \"./Product\";\n\nlet List = ({\n  shoppingList,\n  getShoppingList,\n  removeFromShoppingList,\n  setErrors,\n}) => {\n  useEffect(() => {\n    getShoppingList();\n  }, []);\n  return (\n    <ul className=\"shopping__list\">\n      {shoppingList &&\n        shoppingList.map((product) => (\n          <Product\n            product={product.details}\n            setErrors={setErrors}\n            key={product.key}\n            clickHandler={() => removeFromShoppingList(product.key)}\n          />\n        ))}\n    </ul>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport List from \"./List\";\nimport Button from \"components/Button\";\nimport { getShoppingList } from \"../../../store/reducers\";\nimport * as actions from \"../../../store/actions\";\nimport { connect } from \"react-redux\";\nimport icons from \"assets/img/icons.svg\";\nimport { useAuthenticated } from \"customHooks\";\n\nconst mapStateToProps = (state) => {\n  return {\n    shoppingList: getShoppingList(state),\n  };\n};\nlet Shopping = ({\n  shoppingList,\n  getShoppingList,\n  removeFromShoppingList,\n  addCommand,\n}) => {\n  const isAuthenticated = useAuthenticated();\n  return (\n    <div className=\"shopping\">\n      <h2 className=\"heading-2\">My Shopping List</h2>\n      <List\n        shoppingList={shoppingList}\n        getShoppingList={getShoppingList}\n        removeFromShoppingList={removeFromShoppingList}\n      />\n      {isAuthenticated && shoppingList && shoppingList.length !== 0 && (\n        <Button\n          icon={icons + \"#icon-check\"}\n          handleClick={() => {\n            const address = prompt(\"Please enter your address\");\n            addCommand(shoppingList, address);\n          }}\n        >\n          Confirm order\n        </Button>\n      )}\n    </div>\n  );\n};\n\nShopping = connect(mapStateToProps, actions)(Shopping);\nexport default Shopping;\n","import React from \"react\";\nimport \"./index.css\";\nimport Header from \"components/homepageComponents/header\";\nimport Result from \"components/homepageComponents/results\";\nimport Recipe from \"components/homepageComponents/recipe\";\nimport Shopping from \"components/homepageComponents/shopping\";\n\nconst Home = () => {\n  return (\n    <div className=\"homepage-container\">\n      <Header />\n      <Result />\n      <Recipe />\n      <Shopping />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid, Box } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ErrorsContainer from \"./ErrorsContainer\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions\";\n\nlet LoginForm = ({ classes, login }) => {\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      login(values, history);\n    },\n  });\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <form onSubmit={formik.handleSubmit} className={classes.form} noValidate>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        <Grid container>\n          <Grid item>\n            <Link to=\"/register\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n        <Box mt={5}></Box>\n      </form>\n    </>\n  );\n};\n\nLoginForm = connect(null, actions)(LoginForm);\n\nexport default LoginForm;\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length > 10) {\n    errors.password = \"Must be 10 characters or more\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n\n  return errors;\n};\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LoginForm from \"components/LoginForm\";\nimport { useAuthenticated } from \"customHooks\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  const isAuthenticated = useAuthenticated();\n  if (!isAuthenticated) {\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <LoginForm classes={classes} />\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as actions from \"store/actions\";\nimport ErrorsContainer from \"./ErrorsContainer\";\nimport SignUp from \"views/Register\";\nimport { connect } from \"react-redux\";\n\nlet SignUpForm = ({ classes, register }) => {\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      phone: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      register(values, history);\n    },\n  });\n  return (\n    <>\n      {Object.keys(formik.errors).length !== 0 && (\n        <ErrorsContainer errors={formik.errors} />\n      )}\n      <form onSubmit={formik.handleSubmit} className={classes.form} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              autoComplete=\"fname\"\n              name=\"firstName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First Name\"\n              autoFocus\n              onChange={formik.handleChange}\n              value={formik.values.firstName}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone Number\"\n              name=\"phone\"\n              autoComplete=\"pnumber\"\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={formik.handleChange}\n              value={formik.values.password}\n            />\n          </Grid>\n          <Grid item xs={12}></Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to=\"/login\" variant=\"body2\">\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\nSignUpForm = connect(null, actions)(SignUpForm);\n\nexport default SignUpForm;\nconst validate = (values) => {\n  const errors = {};\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (values.firstName.length > 15) {\n    errors.firstName = \"15 characters or less\";\n  }\n\n  if (!values.phone) {\n    errors.phone = \"Required\";\n  } else if (values.phone.length > 20) {\n    errors.phone = \"too long\";\n  } else if (isNaN(values.phone)) {\n    errors.phone = \"not a number\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length > 20) {\n    errors.password = \"characters or less\";\n  }\n\n  return errors;\n};\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SignUpForm from \"components/SignUpForm\";\nimport { useAuthenticated } from \"customHooks\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const isAuthenticated = useAuthenticated();\n  if (!isAuthenticated) {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <SignUpForm classes={classes} />\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}\n","import Welcome from \"../views/Welcome\";\nimport Home from \"../views/Home/\";\nimport Login from \"../views/Login\";\nimport Register from \"../views/Register\";\n\nconst routes = [\n  { path: \"/\", component: Welcome },\n  { path: \"/home/:category?\", component: Home },\n  { path: \"/login\", component: Login },\n  { path: \"/register\", component: Register },\n];\n\nexport default routes;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React, { useEffect } from \"react\";\nimport routes from \"./router\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport \"react-bulma-components/lib\";\nimport history from \"utils/history\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n          {routes.map((route, i) => (\n            <Route exact path={route.path} key={i}>\n              <route.component></route.component>\n            </Route>\n          ))}\n          <Redirect to=\"/home\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-bulma-components\";\nimport App from \"./App\";\nimport rootReducer from \"./store/reducers\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport \"index.css\";\n\nconst store = configureStore({ reducer: rootReducer });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nexport default store;\n"],"sourceRoot":""}